export declare class TypeNode {
    key: any;
    value: number[];
    leftNode: TypeNode | null;
    rightNode: TypeNode | null;
    currentNode: TypeNode | null;
    height: number;
    constructor(key: any, value: number);
    addType(node: TypeNode | null, key: number, value: number): TypeNode | null;
    rightRotate(y: TypeNode | null): TypeNode | null;
    leftRotate(x: TypeNode | null): TypeNode | null;
    getHeight(node: TypeNode | null): number;
    getBalanceFactor(N: TypeNode | null): number;
    getFromNode(id: number, node: TypeNode | null): TypeNode | null;
    removeNodeWithVariants(passedNode: TypeNode | null, key: any, conceptId: number): TypeNode | null;
    countNodeBelow(root: TypeNode | null): number;
    inOrderSuccessor(root: TypeNode): TypeNode;
}
