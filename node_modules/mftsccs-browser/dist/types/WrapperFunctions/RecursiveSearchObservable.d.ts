import { Connection, DependencyObserver } from "../app";
declare class RecursiveSearchObservable extends DependencyObserver {
    searchLinkers: string[];
    searchText: string;
    textSearch: string;
    connections: Connection[];
    data: any;
    /**
     *
     * @param id this is the id whose links need to be found
     * @param linker this is the type connection that is connected to the mainConcept(id)
     * @param inpage number of outputs that has to be displayed
     * @param page the page which needs to be displayed as per the inpage parameter
     * @param format the format in which the output should be displayed (RAW, undefined)
     */
    constructor(id: number, linkers: string[], textSearch?: string, format?: number);
    bind(): Promise<any>;
    build(): Promise<any>;
}
/**
 * Method to listen the changes in recursive search data
 * @param id this is the id whose links need to be found
 * @param linker this is the type connection that is connected to the mainConcept(id)
 * @param inpage number of outputs that has to be displayed
 * @param page the page which needs to be displayed as per the inpage parameter
 * @param format the format in which the output should be displayed (RAW, undefined)
 */
export declare function RecursiveSearchListener(id: number, linkers: string[], searchText?: string, format?: number): RecursiveSearchObservable;
export {};
