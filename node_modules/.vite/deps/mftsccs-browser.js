var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// node_modules/mftsccs-browser/dist/bundle.js
var require_bundle = __commonJS({
  "node_modules/mftsccs-browser/dist/bundle.js"(exports) {
    (() => {
      "use strict";
      var __webpack_modules__ = {
        /***/
        "./src/Api/Create/CreateTheCharacter.ts": (
          /*!**********************************************!*\
            !*** ./src/Api/Create/CreateTheCharacter.ts ***!
            \**********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateTheCharacter: () => (
                /* binding */
                CreateTheCharacter
              )
              /* harmony export */
            });
            var _DataStructures_CharacterRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/CharacterRepository */
              "./src/DataStructures/CharacterRepository.ts"
            );
            var _DataStructures_Returner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/Returner */
              "./src/DataStructures/Returner.ts"
            );
            var _DataStructures_TheCharacter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../DataStructures/TheCharacter */
              "./src/DataStructures/TheCharacter.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateTheCharacter(characterData) {
              return __awaiter(this, void 0, void 0, function* () {
                var characterData2;
                try {
                  characterData2 = _DataStructures_CharacterRepository__WEBPACK_IMPORTED_MODULE_0__.CharacterRepository.GetCharacter(characterData2.data);
                  if (characterData2.id == 0) {
                    var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_4__.GetRequestHeader)();
                    const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_3__.BaseUrl.CreateTheCharacterDataUrl(), {
                      method: "POST",
                      headers: header,
                      body: JSON.stringify(characterData2)
                    });
                    if (!response.ok) {
                      (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_5__.HandleHttpError)(response);
                      throw new Error(`Error! status: ${response.status}`);
                    }
                    const resultString = yield response.json();
                    const result = resultString;
                    var savingCharacter = new _DataStructures_TheCharacter__WEBPACK_IMPORTED_MODULE_2__.TheCharacter(result.userId, characterData2.data, 0, 0, 4, 4, 999, 999, "", false);
                    savingCharacter.id = result.id;
                    _DataStructures_CharacterRepository__WEBPACK_IMPORTED_MODULE_0__.CharacterRepository.AddCharacter(savingCharacter);
                    return result;
                  } else {
                    var returningData = new _DataStructures_Returner__WEBPACK_IMPORTED_MODULE_1__.Returner(characterData2.id, characterData2.userId, 0, false);
                    return returningData;
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("create the character error message: ", error.message);
                  } else {
                    console.log("create the character unexpected error: ", error);
                  }
                  throw error;
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Create/CreateTheConceptApi.ts": (
          /*!***********************************************!*\
            !*** ./src/Api/Create/CreateTheConceptApi.ts ***!
            \***********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateTheConceptApi: () => (
                /* binding */
                CreateTheConceptApi
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateTheConceptApi(conceptData) {
              return __awaiter(this, void 0, void 0, function* () {
                let result = (0, _app__WEBPACK_IMPORTED_MODULE_2__.CreateDefaultConcept)();
                try {
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_1__.GetRequestHeader)();
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.CreateTheConceptUrl(), {
                    method: "POST",
                    headers: header,
                    body: JSON.stringify(conceptData)
                  });
                  if (!response.ok) {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleHttpError)(response);
                    throw new Error(`Error! status: ${response.status}`);
                  }
                  const resultString = yield response.json();
                  result = resultString;
                  return result;
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Create the concept api error message: ", error.message);
                  } else {
                    console.log("Create the concept api unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.CreateTheConceptUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Create/CreateTheConnectionApi.ts": (
          /*!**************************************************!*\
            !*** ./src/Api/Create/CreateTheConnectionApi.ts ***!
            \**************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateTheConnectionApi: () => (
                /* binding */
                CreateTheConnectionApi
              )
              /* harmony export */
            });
            var _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Connection */
              "./src/DataStructures/Connection.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateTheConnectionApi(connectionData) {
              return __awaiter(this, void 0, void 0, function* () {
                let result = new _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__.Connection(0, 0, 0, 0, 0, 0, 0);
                try {
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeader)();
                  var jsonData = JSON.stringify(connectionData);
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.CreateTheConnectionUrl(), {
                    method: "POST",
                    headers: header,
                    body: jsonData
                  });
                  if (response.ok) {
                    const result2 = yield response.json();
                  } else {
                    console.log("Create the connection error message: ", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleHttpError)(response);
                  }
                  return result;
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Create the connection error message: ", error.message);
                  } else {
                    console.log(" Create the connection unexpected error: ", error);
                  }
                  throw error;
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Create/CreateTheGhostConceptApi.ts": (
          /*!****************************************************!*\
            !*** ./src/Api/Create/CreateTheGhostConceptApi.ts ***!
            \****************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateTheGhostConceptApi: () => (
                /* binding */
                CreateTheGhostConceptApi
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _DataStructures_Security_TokenStorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/Security/TokenStorage */
              "./src/DataStructures/Security/TokenStorage.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateTheGhostConceptApi(conceptData, connectionData) {
              return __awaiter(this, void 0, void 0, function* () {
                let result = {
                  "concepts": [],
                  "connections": []
                };
                try {
                  const myHeaders = new Headers();
                  let myBody = {
                    "concepts": conceptData,
                    "connections": connectionData
                  };
                  myHeaders.set("Content-Type", "application/json");
                  myHeaders.set("Authorization", "Bearer " + _DataStructures_Security_TokenStorage__WEBPACK_IMPORTED_MODULE_1__.TokenStorage.BearerAccessToken);
                  myHeaders.set("Accept", "application/json");
                  myHeaders.set("Randomizer", _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.BASE_RANDOMIZER.toString());
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.CreateGhostConceptApiUrl(), {
                    method: "POST",
                    headers: myHeaders,
                    body: JSON.stringify(myBody)
                  });
                  if (!response.ok) {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleHttpError)(response);
                    throw new Error(`Error! status: ${response.status}`);
                  }
                  const resultString = yield response.json();
                  result.concepts = resultString.concepts;
                  result.connections = resultString.connections;
                  return result;
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Create the concept api error message: ", error.message);
                  } else {
                    console.log("Create the concept api unexpected error: ", error);
                  }
                  throw error;
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Create/CreateTheTextData.ts": (
          /*!*********************************************!*\
            !*** ./src/Api/Create/CreateTheTextData.ts ***!
            \*********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateTextData: () => (
                /* binding */
                CreateTextData
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateTextData(textData) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_1__.GetRequestHeader)();
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.CreateTheTextDataUrl(), {
                    method: "POST",
                    headers: header,
                    body: JSON.stringify(textData)
                  });
                  if (!response.ok) {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleHttpError)(response);
                    throw new Error(`Error! status: ${response.status}`);
                  }
                  const resultString = yield response.json();
                  const result = resultString;
                  return result;
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Create the text error message: ", error.message);
                  } else {
                    console.log("Create the text unexpected error: ", error);
                  }
                  throw error;
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/DeleteTheConcept.ts": (
          /*!*************************************!*\
            !*** ./src/Api/DeleteTheConcept.ts ***!
            \*************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                DeleteTheConcept
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function DeleteTheConcept(id) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  const formdata = new FormData();
                  formdata.append("id", id.toString());
                  let header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetOnlyTokenHeader)();
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.DeleteConceptUrl(), {
                    method: "POST",
                    headers: header,
                    body: formdata
                  });
                  if (!response.ok) {
                    console.log("Delete concept error", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleHttpError)(response);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Delete concept error message: ", error.message);
                  } else {
                    console.log("Delete concept unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.DeleteConceptUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/DeleteTheConnection.ts": (
          /*!****************************************!*\
            !*** ./src/Api/DeleteTheConnection.ts ***!
            \****************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                DeleteTheConnection
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function DeleteTheConnection(id) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  const formdata = new FormData();
                  formdata.append("id", id.toString());
                  let header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetOnlyTokenHeader)();
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.DeleteTheConnectionUrl(), {
                    method: "POST",
                    headers: header,
                    body: formdata,
                    redirect: "follow"
                  });
                  if (!response.ok) {
                    console.log("Delete connection error status: ", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleHttpError)(response);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Delete connection error message: ", error.message);
                  } else {
                    console.log("Delete connection unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.DeleteTheConnectionUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Delete/DeleteConceptInBackend.ts": (
          /*!**************************************************!*\
            !*** ./src/Api/Delete/DeleteConceptInBackend.ts ***!
            \**************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              TrashTheConcept: () => (
                /* binding */
                TrashTheConcept
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function TrashTheConcept(id, token) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  const myHeaders = new Headers();
                  myHeaders.append("Authorization", "Bearer " + token);
                  const formdata = new FormData();
                  formdata.append("id", id.toString());
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.DeleteConceptUrl(), {
                    method: "POST",
                    body: formdata,
                    headers: myHeaders
                  });
                  if (!response.ok) {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleHttpError)(response);
                    throw new Error(`Delete composition Error! status: ${response.status}`);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Delete composition error message: ", error.message);
                  } else {
                    console.log("Delete composition unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.DeleteConceptUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/GetAiData.ts": (
          /*!******************************!*\
            !*** ./src/Api/GetAiData.ts ***!
            \******************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetAiData: () => (
                /* binding */
                GetAiData
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _Services_InitializeSystem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Services/InitializeSystem */
              "./src/Services/InitializeSystem.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetAiData() {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  const start = (/* @__PURE__ */ new Date()).getTime();
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_4__.GetRequestHeaderWithAuthorization)("application/x-www-form-urlencoded");
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.GetAllAiData(), {
                    method: "GET",
                    headers: header
                  });
                  if (!response.ok) {
                    console.log("Ai Error Message: ", "Cannot get response");
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleHttpError)(response);
                  }
                  const result = yield response.json();
                  for (var i2 = 0; i2 < result.length; i2++) {
                    _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_1__.ConceptsData.AddConcept(result[i2]);
                  }
                  (0, _Services_InitializeSystem__WEBPACK_IMPORTED_MODULE_3__.PurgatoryDatabaseUpdated)();
                  let elapsed = (/* @__PURE__ */ new Date()).getTime() - start;
                  console.log("The time taken is ", elapsed);
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Ai Error Message: ", error.message);
                  } else {
                    console.log("Ai Error Message: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.GetAllAiData());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/GetAllConceptsByType.ts": (
          /*!*****************************************!*\
            !*** ./src/Api/GetAllConceptsByType.ts ***!
            \*****************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetAllConceptsByType: () => (
                /* binding */
                GetAllConceptsByType
              )
              /* harmony export */
            });
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetAllConceptsByType(type, userId) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  var urlencoded = new URLSearchParams();
                  urlencoded.append("type", type);
                  urlencoded.append("user_id", userId.toString());
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeader)("application/x-www-form-urlencoded");
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetAllConceptsByTypeUrl(), {
                    method: "POST",
                    headers: header,
                    body: urlencoded
                  });
                  if (response.ok) {
                    const result = yield response.json();
                    for (var i2 = 0; i2 < result.length; i2++) {
                      _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.AddConcept(result[i2]);
                    }
                  } else {
                    console.log("GetAllConceptsByType error", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleHttpError)(response);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("GetAllConceptsByType error message: ", error.message);
                  } else {
                    console.log("GetAllConceptsByType unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetAllConceptsByTypeUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/GetAllConnectionsOfComposition.ts": (
          /*!***************************************************!*\
            !*** ./src/Api/GetAllConnectionsOfComposition.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetAllConnectionsOfComposition: () => (
                /* binding */
                GetAllConnectionsOfComposition
              ),
              /* harmony export */
              GetAllConnectionsOfCompositionOnline: () => (
                /* binding */
                GetAllConnectionsOfCompositionOnline
              )
              /* harmony export */
            });
            var _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/ConnectionData */
              "./src/DataStructures/ConnectionData.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_CheckForConnectionDeletion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/CheckForConnectionDeletion */
              "./src/Services/CheckForConnectionDeletion.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetAllConnectionsOfComposition(composition_id) {
              return __awaiter(this, void 0, void 0, function* () {
                var connectionList = [];
                connectionList = yield _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__.ConnectionData.GetConnectionsOfConcept(composition_id);
                if (connectionList.length == 0) {
                  var connectionListString = yield GetAllConnectionsOfCompositionOnline(composition_id);
                  connectionList = connectionListString;
                } else {
                  var newConnectionsString = yield GetAllConnectionsOfCompositionOnline(composition_id);
                  var newConnections = newConnectionsString;
                  (0, _Services_CheckForConnectionDeletion__WEBPACK_IMPORTED_MODULE_2__.CheckForConnectionDeletion)(newConnections, connectionList);
                  connectionList = newConnections;
                }
                return connectionList;
              });
            }
            function GetAllConnectionsOfCompositionOnline(composition_id) {
              return __awaiter(this, void 0, void 0, function* () {
                var connectionList = [];
                try {
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_3__.GetRequestHeader)("application/json");
                  const myHeaders = new Headers();
                  const formdata = new FormData();
                  formdata.append("composition_id", composition_id.toString());
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetAllConnectionsOfCompositionUrl(), {
                    method: "POST",
                    headers: myHeaders,
                    body: formdata
                  });
                  console.log("this is getting connection from online", _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetAllConnectionsOfCompositionUrl(), composition_id);
                  if (!response.ok) {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleHttpError)(response);
                    throw new Error(`Error! status: ${response.status}`);
                  }
                  const result = yield response.json();
                  for (var i2 = 0; i2 < result.length; i2++) {
                    _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__.ConnectionData.AddConnection(result[i2]);
                    connectionList.push(result[i2]);
                  }
                  return connectionList;
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Get all connection of composition error : ", error.message);
                  } else {
                    console.log("Get all connection of composition error : ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetAllConnectionsOfCompositionUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/GetAllConnectionsOfCompositionBulk.ts": (
          /*!*******************************************************!*\
            !*** ./src/Api/GetAllConnectionsOfCompositionBulk.ts ***!
            \*******************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetAllConnectionsOfCompositionBulk: () => (
                /* binding */
                GetAllConnectionsOfCompositionBulk
              ),
              /* harmony export */
              GetAllConnectionsOfCompositionOnline: () => (
                /* binding */
                GetAllConnectionsOfCompositionOnline
              )
              /* harmony export */
            });
            var _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/ConnectionData */
              "./src/DataStructures/ConnectionData.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_FindConeceptsFromConnection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/FindConeceptsFromConnection */
              "./src/Services/FindConeceptsFromConnection.ts"
            );
            var _Services_FindConnectionsOfCompositionBulkInMemory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Services/FindConnectionsOfCompositionBulkInMemory */
              "./src/Services/FindConnectionsOfCompositionBulkInMemory.ts"
            );
            var _Services_CheckForConnectionDeletion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../Services/CheckForConnectionDeletion */
              "./src/Services/CheckForConnectionDeletion.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetAllConnectionsOfCompositionBulk() {
              return __awaiter(this, arguments, void 0, function* (composition_ids = []) {
                var connectionList = [];
                var conceptList = [];
                if (composition_ids.length <= 0) {
                  return connectionList;
                }
                var oldConnectionList = yield (0, _Services_FindConnectionsOfCompositionBulkInMemory__WEBPACK_IMPORTED_MODULE_3__.FindConnectionsOfCompositionsBulkInMemory)(composition_ids);
                var connectionListString = yield GetAllConnectionsOfCompositionOnline(composition_ids);
                connectionList = connectionListString;
                (0, _Services_CheckForConnectionDeletion__WEBPACK_IMPORTED_MODULE_4__.CheckForConnectionDeletion)(connectionList, oldConnectionList);
                yield (0, _Services_FindConeceptsFromConnection__WEBPACK_IMPORTED_MODULE_2__.FindConceptsFromConnections)(connectionList);
                return connectionList;
              });
            }
            function GetAllConnectionsOfCompositionOnline() {
              return __awaiter(this, arguments, void 0, function* (composition_ids = []) {
                var connectionList = [];
                try {
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_5__.GetRequestHeader)();
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetAllConnectionsOfCompositionBulkUrl(), {
                    method: "POST",
                    headers: header,
                    body: JSON.stringify(composition_ids)
                  });
                  if (response.ok) {
                    const result = yield response.json();
                    for (var i2 = 0; i2 < result.length; i2++) {
                      _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__.ConnectionData.AddConnection(result[i2]);
                      connectionList.push(result[i2]);
                    }
                  } else {
                    console.log("Get all connections of composition bulk error message: ", "Cannot get response");
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_6__.HandleHttpError)(response);
                  }
                  return connectionList;
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Get all connections of composition bulk error message: ", error.message);
                  } else {
                    console.log("Get all connections of composition bulk unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_6__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetAllConnectionsOfCompositionBulkUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/GetAllLinkerConnectionsFromTheConcept.ts": (
          /*!**********************************************************!*\
            !*** ./src/Api/GetAllLinkerConnectionsFromTheConcept.ts ***!
            \**********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetAllLinkerConnectionsFromTheConcept: () => (
                /* binding */
                GetAllLinkerConnectionsFromTheConcept
              )
              /* harmony export */
            });
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetAllLinkerConnectionsFromTheConcept(conceptId) {
              return __awaiter(this, void 0, void 0, function* () {
                var connections = [];
                try {
                  const start = (/* @__PURE__ */ new Date()).getTime();
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_1__.GetRequestHeader)("application/x-www-form-urlencoded");
                  const response = yield fetch(_app__WEBPACK_IMPORTED_MODULE_2__.BaseUrl.GetAllLinkerConnectionOfConceptUrl() + `?conceptId=${conceptId}`, {
                    method: "GET",
                    headers: header
                  });
                  if (response.ok) {
                    const result = yield response.json();
                    for (var i2 = 0; i2 < result.length; i2++) {
                      var connection = result[i2];
                      connections.push(connection);
                    }
                  } else {
                    console.log("Get all linker connection from the concepts error", "cannot get respone");
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_0__.HandleHttpError)(response);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Get all linker connection from the concepts error: ", error.message);
                  } else {
                    console.log("Get all linker connection from the concepts error(Unexpected): ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_0__.HandleInternalError)(error, _app__WEBPACK_IMPORTED_MODULE_2__.BaseUrl.GetAllLinkerConnectionOfConceptUrl());
                }
                return connections;
              });
            }
          }
        ),
        /***/
        "./src/Api/GetAllLinkerConnectionsToTheConcept.ts": (
          /*!********************************************************!*\
            !*** ./src/Api/GetAllLinkerConnectionsToTheConcept.ts ***!
            \********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetAllLinkerConnectionsToTheConcept: () => (
                /* binding */
                GetAllLinkerConnectionsToTheConcept
              )
              /* harmony export */
            });
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetAllLinkerConnectionsToTheConcept(conceptId) {
              return __awaiter(this, void 0, void 0, function* () {
                var connections = [];
                try {
                  const start = (/* @__PURE__ */ new Date()).getTime();
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_1__.GetRequestHeader)("application/x-www-form-urlencoded");
                  const response = yield fetch(_app__WEBPACK_IMPORTED_MODULE_2__.BaseUrl.GetAllLinkerConnectionToConceptUrl() + `?conceptId=${conceptId}`, {
                    method: "GET",
                    headers: header
                  });
                  if (response.ok) {
                    const result = yield response.json();
                    for (var i2 = 0; i2 < result.length; i2++) {
                      var connection = result[i2];
                      connections.push(connection);
                    }
                  } else {
                    console.log("Get all linker connection To the concepts error", "cannot get respone");
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_0__.HandleHttpError)(response);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Get all linker connection To the concepts error: ", error.message);
                  } else {
                    console.log("Get all linker connection To the concepts error(Unexpected): ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_0__.HandleInternalError)(error, _app__WEBPACK_IMPORTED_MODULE_2__.BaseUrl.GetAllLinkerConnectionToConceptUrl());
                }
                return connections;
              });
            }
          }
        ),
        /***/
        "./src/Api/GetCompositionConnectionsBetweenTwoConcepts.ts": (
          /*!****************************************************************!*\
            !*** ./src/Api/GetCompositionConnectionsBetweenTwoConcepts.ts ***!
            \****************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetCompositionConnectionsBetweenTwoConcepts: () => (
                /* binding */
                GetCompositionConnectionsBetweenTwoConcepts
              )
              /* harmony export */
            });
            var _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/ConnectionData */
              "./src/DataStructures/ConnectionData.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetCompositionConnectionsBetweenTwoConcepts(ofConceptId, toConcept, mainKey) {
              return __awaiter(this, void 0, void 0, function* () {
                var connectionList = [];
                try {
                  var formdata = new FormData();
                  formdata.append("ofConceptId", ofConceptId.toString());
                  formdata.append("mainKey", mainKey.toString());
                  formdata.append("toConceptId", toConcept.toString());
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetCompositionConnectionBetweenTwoConceptsUrl(), {
                    method: "POST",
                    body: formdata,
                    redirect: "follow"
                  });
                  if (response.ok) {
                    const result = yield response.json();
                    for (var i2 = 0; i2 < result.length; i2++) {
                      _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__.ConnectionData.AddConnection(result[i2]);
                      connectionList.push(result[i2]);
                    }
                  } else {
                    console.log("Get composition connection between two concepts", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleHttpError)(response);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Get composition connection between two concepts error message: ", error.message);
                  } else {
                    console.log("Get composition connection between two concepts unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetCompositionConnectionBetweenTwoConceptsUrl());
                }
                return connectionList;
              });
            }
          }
        ),
        /***/
        "./src/Api/GetConcept.ts": (
          /*!*******************************!*\
            !*** ./src/Api/GetConcept.ts ***!
            \*******************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConcept: () => (
                /* binding */
                GetConcept
              )
              /* harmony export */
            });
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConcept(id) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let result = (0, _app__WEBPACK_IMPORTED_MODULE_3__.CreateDefaultConcept)();
                  var conceptUse = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.GetConcept(id);
                  let isNpc = _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.GetNpc(id);
                  if (conceptUse.id != 0 || isNpc) {
                    return conceptUse;
                  } else {
                    var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeader)();
                    console.log("this is the url", _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptUrl());
                    const formdata = new FormData();
                    formdata.append("id", id.toString());
                    const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptUrl(), {
                      method: "POST",
                      body: formdata
                    });
                    if (response.ok) {
                      result = yield response.json();
                      if (result.id > 0) {
                        _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.AddConcept(result);
                      } else {
                        _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.AddNpc(id);
                      }
                    } else {
                      console.log("Get the concept error", response.status);
                      (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleHttpError)(response);
                    }
                    return result;
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Get the concept error message: ", error.message);
                  } else {
                    console.log("Get the concept unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/GetConceptBulk.ts": (
          /*!***********************************!*\
            !*** ./src/Api/GetConceptBulk.ts ***!
            \***********************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              BulkConceptGetterApi: () => (
                /* binding */
                BulkConceptGetterApi
              ),
              /* harmony export */
              GetConceptBulk: () => (
                /* binding */
                GetConceptBulk
              )
              /* harmony export */
            });
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConceptBulk(passedConcepts) {
              return __awaiter(this, void 0, void 0, function* () {
                let result = [];
                let setTime = (/* @__PURE__ */ new Date()).getTime();
                let conceptIds = Array.from(new Set(passedConcepts));
                try {
                  if (conceptIds.length > 0) {
                    let bulkConceptFetch = [];
                    for (let i2 = 0; i2 < conceptIds.length; i2++) {
                      let conceptUse = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.GetConcept(conceptIds[i2]);
                      if (conceptUse.id == 0) {
                        bulkConceptFetch.push(conceptIds[i2]);
                      }
                    }
                    if (bulkConceptFetch.length == 0) {
                      return result;
                    } else {
                      let header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeader)();
                      const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptBulkUrl(), {
                        method: "POST",
                        headers: header,
                        body: JSON.stringify(bulkConceptFetch)
                      });
                      if (response.ok) {
                        result = yield response.json();
                        console.log("got all the concepts", result);
                        if (result.length > 0) {
                          for (let i2 = 0; i2 < result.length; i2++) {
                            let concept = result[i2];
                            _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.AddConcept(concept);
                          }
                        }
                        console.log("added the concepts");
                      } else {
                        console.log("Get Concept Bulk error", response.status);
                        (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleHttpError)(response);
                      }
                    }
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Get Concept Bulk  error message: ", error.message);
                  } else {
                    console.log("Get Concept Bulk  unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptBulkUrl());
                }
                return result;
              });
            }
            function BulkConceptGetterApi(bulkConceptFetch) {
              return __awaiter(this, void 0, void 0, function* () {
                const conceptList = [];
                if (bulkConceptFetch.length > 0) {
                  const myHeaders = {
                    "Content-Type": "application/json"
                  };
                  try {
                    const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptBulkUrl(), {
                      method: "POST",
                      headers: myHeaders,
                      body: JSON.stringify(bulkConceptFetch)
                    });
                    if (response.ok) {
                      const result = yield response.json();
                      if (result.length > 0) {
                        for (let i2 = 0; i2 < result.length; i2++) {
                          const concept = result[i2];
                          conceptList.push(concept);
                          _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.AddConcept(concept);
                        }
                      }
                    } else {
                      console.log("bulk concept getter api error: ", response.status);
                      (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleHttpError)(response);
                    }
                  } catch (error) {
                    if (error instanceof Error) {
                      console.log("bulk concept getter api error: ", error.message);
                    } else {
                      console.log("bulk concept getter api error: ", error);
                    }
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptBulkUrl());
                  }
                }
                return conceptList;
              });
            }
          }
        ),
        /***/
        "./src/Api/GetConceptByCharacterAndType.ts": (
          /*!*************************************************!*\
            !*** ./src/Api/GetConceptByCharacterAndType.ts ***!
            \*************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConceptByCharacterAndType: () => (
                /* binding */
                GetConceptByCharacterAndType
              )
              /* harmony export */
            });
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConceptByCharacterAndType(characterValue, typeId) {
              return __awaiter(this, void 0, void 0, function* () {
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.GetConceptByCharacterAndTypeLocal(characterValue, typeId);
                try {
                  if (concept == null || concept.id == 0) {
                    var json = {
                      "character_value": `${characterValue}`,
                      "type_id": typeId
                    };
                    var toSendJson = JSON.stringify(json);
                    var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeader)();
                    const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptByCharacterAndTypeUrl(), {
                      method: "POST",
                      headers: header,
                      body: toSendJson
                    });
                    if (response.ok) {
                      let conceptString = yield response.json();
                      concept = conceptString;
                      _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.AddConcept(concept);
                    } else {
                      (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleHttpError)(response);
                      console.log("This is the concept by type and character error", response.status);
                    }
                  }
                  return concept;
                } catch (error) {
                  if (error instanceof Error) {
                    console.log(" This is the concept by type and character error message: ", error.message);
                  } else {
                    console.log(" This is the concept by type and character unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptByCharacterAndTypeUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/GetConceptByCharacterValue.ts": (
          /*!***********************************************!*\
            !*** ./src/Api/GetConceptByCharacterValue.ts ***!
            \***********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConceptByCharacterValue: () => (
                /* binding */
                GetConceptByCharacterValue
              )
              /* harmony export */
            });
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConceptByCharacterValue(characterValue) {
              return __awaiter(this, void 0, void 0, function* () {
                let result = (0, _app__WEBPACK_IMPORTED_MODULE_2__.CreateDefaultConcept)();
                try {
                  const formdata = new FormData();
                  formdata.append("character_value", characterValue);
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptByCharacterValueUrl(), {
                    method: "POST",
                    body: formdata
                  });
                  if (response.ok) {
                    result = yield response.json();
                    if (result.id > 0) {
                      _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.AddConcept(result);
                    }
                  } else {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleHttpError)(response);
                    console.log("Error in Getting concept by character value Error", response.status);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Error in Getting concept by character value error message: ", error);
                  } else {
                    console.log("Error in Getting concept by character value unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptByCharacterValueUrl());
                }
                return result;
              });
            }
          }
        ),
        /***/
        "./src/Api/GetConnection.ts": (
          /*!**********************************!*\
            !*** ./src/Api/GetConnection.ts ***!
            \**********************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConnection: () => (
                /* binding */
                GetConnection
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/ConnectionData */
              "./src/DataStructures/ConnectionData.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConnection(id) {
              return __awaiter(this, void 0, void 0, function* () {
                let result = yield _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_1__.ConnectionData.GetConnection(id);
                try {
                  if (result.id != 0) {
                    return result;
                  } else {
                    let header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeader)("application/x-www-form-urlencoded");
                    const formdata = new FormData();
                    formdata.append("id", id.toString());
                    const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.GetConnectionUrl(), {
                      method: "POST",
                      headers: header,
                      body: formdata
                    });
                    if (response.ok) {
                      result = yield response.json();
                      _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_1__.ConnectionData.AddConnection(result);
                    } else {
                      (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleHttpError)(response);
                      console.log("Get Connection Error", response.status);
                    }
                    return result;
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Get Connection error message: ", error.message);
                  } else {
                    console.log("Get Connection unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.GetConnectionUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/GetConnectionBulk.ts": (
          /*!**************************************!*\
            !*** ./src/Api/GetConnectionBulk.ts ***!
            \**************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConnectionBulk: () => (
                /* binding */
                GetConnectionBulk
              )
              /* harmony export */
            });
            var _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./../DataStructures/ConnectionData */
              "./src/DataStructures/ConnectionData.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_FindConeceptsFromConnection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/FindConeceptsFromConnection */
              "./src/Services/FindConeceptsFromConnection.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConnectionBulk() {
              return __awaiter(this, arguments, void 0, function* (connectionIds = []) {
                let connectionList = [];
                try {
                  if (connectionIds.length > 0) {
                    let bulkConnectionFetch = [];
                    for (let i2 = 0; i2 < connectionIds.length; i2++) {
                      let conceptUse = yield _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__.ConnectionData.GetConnection(connectionIds[i2]);
                      if (conceptUse.id == 0) {
                        bulkConnectionFetch.push(connectionIds[i2]);
                      } else {
                        connectionList.push(conceptUse);
                      }
                    }
                    if (bulkConnectionFetch.length == 0) {
                      return connectionList;
                    } else {
                      let header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_3__.GetRequestHeader)();
                      const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConnectionBulkUrl(), {
                        method: "POST",
                        headers: header,
                        body: JSON.stringify(bulkConnectionFetch)
                      });
                      if (response.ok) {
                        const result = yield response.json();
                        if (result.length > 0) {
                          for (let i2 = 0; i2 < result.length; i2++) {
                            let connection = result[i2];
                            connectionList.push(connection);
                            _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__.ConnectionData.AddConnection(connection);
                          }
                        }
                      } else {
                        (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleHttpError)(response);
                        console.log("Get Connection Bulk error", response.status);
                      }
                    }
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Get Connection Bulk error message: ", error);
                  } else {
                    console.log("Get Connection Bulk unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConnectionBulkUrl());
                }
                yield (0, _Services_FindConeceptsFromConnection__WEBPACK_IMPORTED_MODULE_2__.FindConceptsFromConnections)(connectionList);
                return connectionList;
              });
            }
          }
        ),
        /***/
        "./src/Api/GetConnectionOfTheConcept.ts": (
          /*!**********************************************!*\
            !*** ./src/Api/GetConnectionOfTheConcept.ts ***!
            \**********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConnectionOfTheConcept: () => (
                /* binding */
                GetConnectionOfTheConcept
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConnectionOfTheConcept(typeId_1, ofTheConceptId_1, userId_1) {
              return __awaiter(this, arguments, void 0, function* (typeId, ofTheConceptId, userId, inpage = 10, page = 1) {
                let connectionList = [];
                try {
                  let urlencoded = new URLSearchParams();
                  urlencoded.append("typeId", `${typeId}`);
                  urlencoded.append("ofTheConceptId", `${ofTheConceptId}`);
                  urlencoded.append("userId", `${userId}`);
                  urlencoded.append("inpage", `${inpage}`);
                  urlencoded.append("page", `${page}`);
                  let header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_1__.GetRequestHeader)("application/x-www-form-urlencoded");
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.GetAllConnectionsOfConceptUrl(), {
                    method: "POST",
                    headers: header,
                    body: urlencoded
                  });
                  if (response.ok) {
                    connectionList = yield response.json();
                  } else {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleHttpError)(response);
                    console.log("Get connection of concept error", response.status);
                  }
                  return connectionList;
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Get connection of concept  error message: ", error.message);
                  } else {
                    console.log("Get connection of concept unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.GetAllConnectionsOfConceptUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/GetReservedConnectionIds.ts": (
          /*!*********************************************!*\
            !*** ./src/Api/GetReservedConnectionIds.ts ***!
            \*********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetReservedConnectionIds: () => (
                /* binding */
                GetReservedConnectionIds
              )
              /* harmony export */
            });
            var _DataStructures_ReservedIds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/ReservedIds */
              "./src/DataStructures/ReservedIds.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetReservedConnectionIds() {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeader)("application/x-www-form-urlencoded");
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetReservedConnectionIdUrl(), {
                    method: "GET",
                    headers: header
                  });
                  if (!response.ok) {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleHttpError)(response);
                    throw new Error(`Error! status: ${response.status}`);
                  }
                  const result = yield response.json();
                  for (let i2 = 0; i2 < result.length; i2++) {
                    _DataStructures_ReservedIds__WEBPACK_IMPORTED_MODULE_0__.ReservedConnectionIds.AddId(result[i2]);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("get reserved connection ids error message: ", error.message);
                  } else {
                    console.log("get reserved connection ids  unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetReservedConnectionIdUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/GetReservedIds.ts": (
          /*!***********************************!*\
            !*** ./src/Api/GetReservedIds.ts ***!
            \***********************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetReservedIds: () => (
                /* binding */
                GetReservedIds
              )
              /* harmony export */
            });
            var _DataStructures_ReservedIds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/ReservedIds */
              "./src/DataStructures/ReservedIds.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetReservedIds() {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeader)("application/x-www-form-urlencoded");
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetReservedIdUrl(), {
                    method: "GET",
                    headers: header
                  });
                  if (!response.ok) {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleHttpError)(response);
                    throw new Error(`Error! status: ${response.status}`);
                  }
                  const result = yield response.json();
                  for (let i2 = 0; i2 < result.length; i2++) {
                    _DataStructures_ReservedIds__WEBPACK_IMPORTED_MODULE_0__.ReservedIds.AddId(result[i2]);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("get reserved ids error message: ", error.message);
                  } else {
                    console.log("get reserved ids  unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_3__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetReservedIdUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Local/GetLocalConceptByCharacterValue.ts": (
          /*!**********************************************************!*\
            !*** ./src/Api/Local/GetLocalConceptByCharacterValue.ts ***!
            \**********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetLocalConceptByCharacterValue: () => (
                /* binding */
                GetLocalConceptByCharacterValue
              )
              /* harmony export */
            });
            var _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./../../DataStructures/Local/LocalConceptData */
              "./src/DataStructures/Local/LocalConceptData.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetLocalConceptByCharacterValue(characterValue) {
              return __awaiter(this, void 0, void 0, function* () {
                let result = (0, _app__WEBPACK_IMPORTED_MODULE_3__.CreateDefaultLConcept)();
                try {
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeader)("application/x-www-form-urlencoded");
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptByCharacterValueUrl(), {
                    method: "POST",
                    headers: header,
                    body: `character_value=${characterValue}`
                  });
                  if (response.ok) {
                    result = yield response.json();
                    if (result.id > 0) {
                      _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__.LocalConceptsData.AddConcept(result);
                    }
                  } else {
                    console.log("Error in Getting Local concept by character value Error", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleHttpError)(response);
                  }
                  return result;
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Error in Getting Local concept by character value error message: ", error);
                  } else {
                    console.log("Error in Getting Local concept by character value unexpected error: ", error);
                  }
                  throw result;
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Login.ts": (
          /*!**************************!*\
            !*** ./src/Api/Login.ts ***!
            \**************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              LoginToBackend: () => (
                /* binding */
                LoginToBackend
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _DataStructures_Security_TokenStorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/Security/TokenStorage */
              "./src/DataStructures/Security/TokenStorage.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function LoginToBackend(email, password) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let object = {
                    "email": email,
                    "password": password
                  };
                  let myHeaders = new Headers();
                  myHeaders.append("Content-Type", "application/json");
                  let requestObject = JSON.stringify(object);
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.LoginUrl(), {
                    method: "POST",
                    headers: myHeaders,
                    body: requestObject
                  });
                  if (response.ok) {
                    const result = yield response.json();
                    console.log(result.data);
                    _DataStructures_Security_TokenStorage__WEBPACK_IMPORTED_MODULE_1__.TokenStorage.BearerAccessToken = result.data.token;
                    console.log("this is the token", _DataStructures_Security_TokenStorage__WEBPACK_IMPORTED_MODULE_1__.TokenStorage.BearerAccessToken);
                    return result;
                  } else {
                    console.log("Login tsccs error message: ", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleHttpError)(response);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Login tsccs error message: ", error.message);
                  } else {
                    console.log(" Login tsccs  unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.LoginUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/MakeTheNameInBackend.ts": (
          /*!*****************************************!*\
            !*** ./src/Api/MakeTheNameInBackend.ts ***!
            \*****************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              MakeTheNameInBackend: () => (
                /* binding */
                MakeTheNameInBackend
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function MakeTheNameInBackend(newConceptId, referent, typeId, typeUserId) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let object = {
                    "newConceptId": newConceptId,
                    "referent": referent,
                    "typeId": typeId,
                    "typeUserId": typeUserId
                  };
                  let myHeaders = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeader)();
                  let requestObject = JSON.stringify(object);
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.MakeTheNameInBackendUrl(), {
                    method: "POST",
                    headers: myHeaders,
                    body: requestObject
                  });
                  if (!response.ok) {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleHttpError)(response);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("make the name in backend error message: ", error.message);
                  } else {
                    console.log("make the name in backend unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.MakeTheNameInBackendUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/MakeTheTypeConceptApi.ts": (
          /*!******************************************!*\
            !*** ./src/Api/MakeTheTypeConceptApi.ts ***!
            \******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              MakeTheTypeConceptApi: () => (
                /* binding */
                MakeTheTypeConceptApi
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var _Services_ConceptFinding_GetConceptByCharacterAndCategory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Services/ConceptFinding/GetConceptByCharacterAndCategory */
              "./src/Services/ConceptFinding/GetConceptByCharacterAndCategory.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function MakeTheTypeConceptApi(type, userId) {
              return __awaiter(this, void 0, void 0, function* () {
                let concept = (0, _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_2__.CreateDefaultConcept)();
                try {
                  concept = yield (0, _Services_ConceptFinding_GetConceptByCharacterAndCategory__WEBPACK_IMPORTED_MODULE_3__.GetConceptByCharacterAndCategory)(type);
                  if (concept.id == 0 || concept.typeId == 4) {
                    let header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_1__.GetRequestHeader)("application/x-www-form-urlencoded");
                    const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.MakeTheTypeConceptUrl(), {
                      method: "POST",
                      headers: header,
                      body: `type=${type}`
                    });
                    if (!response.ok) {
                      (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleHttpError)(response);
                      throw new Error(`Error! status: ${response.status}`);
                    }
                    let result = yield response.json();
                    concept = result;
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Make The Type Concept Api error : ", error.message);
                  } else {
                    console.log("Make The Type Concept Api error : ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.MakeTheTypeConceptUrl());
                }
                return concept;
              });
            }
          }
        ),
        /***/
        "./src/Api/RecursiveSearch.ts": (
          /*!************************************!*\
            !*** ./src/Api/RecursiveSearch.ts ***!
            \************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              RecursiveSearchApi: () => (
                /* binding */
                RecursiveSearchApi
              ),
              /* harmony export */
              RecursiveSearchApiNewRawFullLinker: () => (
                /* binding */
                RecursiveSearchApiNewRawFullLinker
              ),
              /* harmony export */
              RecursiveSearchApiRaw: () => (
                /* binding */
                RecursiveSearchApiRaw
              ),
              /* harmony export */
              RecursiveSearchApiRawFullLinker: () => (
                /* binding */
                RecursiveSearchApiRawFullLinker
              ),
              /* harmony export */
              RecursiveSearchLocal: () => (
                /* binding */
                RecursiveSearchLocal
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _DataStructures_SearchQuery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/SearchQuery */
              "./src/DataStructures/SearchQuery.ts"
            );
            var _Services_GetCompositionBulk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/GetCompositionBulk */
              "./src/Services/GetCompositionBulk.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function RecursiveSearchApi() {
              return __awaiter(this, arguments, void 0, function* (composition = 0, listLinkers = [], textSearch = "") {
                let concepts = [];
                try {
                  let searchQuery = new _DataStructures_SearchQuery__WEBPACK_IMPORTED_MODULE_1__.SearchQuery();
                  searchQuery.composition = composition;
                  searchQuery.listLinkers = listLinkers;
                  searchQuery.textSearch = textSearch;
                  let raw = JSON.stringify(searchQuery);
                  let Connections = [];
                  let myHeaders = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_3__.GetRequestHeader)();
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.RecursiveSearchUrl(), {
                    method: "POST",
                    headers: myHeaders,
                    body: raw
                  });
                  if (response.ok) {
                    const result = yield response.json();
                    let conceptIds = result.compositionIds;
                    let connections = result.internalConnections;
                    let externalConnections = result.externalConnections;
                    concepts = yield (0, _Services_GetCompositionBulk__WEBPACK_IMPORTED_MODULE_2__.GetCompositionFromConnectionsWithDataId)(conceptIds, connections);
                  } else {
                    console.log("recursive search error ", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleHttpError)(response);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("recursive search error message: ", error.message);
                  } else {
                    console.log("recursive search unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.RecursiveSearchUrl());
                }
                return concepts;
              });
            }
            function RecursiveSearchApiRaw() {
              return __awaiter(this, arguments, void 0, function* (composition = 0, listLinkers = [], textSearch = "") {
                let concepts = [];
                try {
                  let searchQuery = new _DataStructures_SearchQuery__WEBPACK_IMPORTED_MODULE_1__.SearchQuery();
                  searchQuery.composition = composition;
                  searchQuery.listLinkers = listLinkers;
                  searchQuery.textSearch = textSearch;
                  let raw = JSON.stringify(searchQuery);
                  let Connections = [];
                  let myHeaders = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_3__.GetRequestHeader)();
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.RecursiveSearchUrl(), {
                    method: "POST",
                    headers: myHeaders,
                    body: raw
                  });
                  if (response.ok) {
                    const result = yield response.json();
                    let conceptIds = result.compositionIds;
                    let connections = result.internalConnections;
                    let externalConnections = result.externalConnections;
                    return result;
                  } else {
                    console.log("recursive search error ", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleHttpError)(response);
                  }
                  return [];
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("recursive search error message: ", error.message);
                  } else {
                    console.log("recursive search unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.RecursiveSearchUrl());
                }
              });
            }
            function RecursiveSearchApiRawFullLinker() {
              return __awaiter(this, arguments, void 0, function* (composition = 0, fullLinkers = [], textSearch = "") {
                let concepts = [];
                try {
                  let searchQuery = new _DataStructures_SearchQuery__WEBPACK_IMPORTED_MODULE_1__.SearchQuery();
                  searchQuery.composition = composition;
                  searchQuery.fullLinkers = fullLinkers;
                  searchQuery.textSearch = textSearch;
                  let raw = JSON.stringify(searchQuery);
                  let Connections = [];
                  let myHeaders = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_3__.GetRequestHeader)();
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.RecursiveSearchUrl(), {
                    method: "POST",
                    headers: myHeaders,
                    body: raw
                  });
                  if (response.ok) {
                    const result = yield response.json();
                    let conceptIds = result.compositionIds;
                    let connections = result.internalConnections;
                    let externalConnections = result.externalConnections;
                    return result;
                  } else {
                    console.log("recursive search error ", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleHttpError)(response);
                  }
                  return [];
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("recursive search error message: ", error.message);
                  } else {
                    console.log("recursive search unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.RecursiveSearchUrl());
                }
              });
            }
            function RecursiveSearchApiNewRawFullLinker() {
              return __awaiter(this, arguments, void 0, function* (composition = 0, fullLinkers = [], textSearch = "") {
                let concepts = [];
                try {
                  let searchQuery = new _DataStructures_SearchQuery__WEBPACK_IMPORTED_MODULE_1__.SearchQuery();
                  searchQuery.composition = composition;
                  searchQuery.fullLinkers = fullLinkers;
                  searchQuery.textSearch = textSearch;
                  let raw = JSON.stringify(searchQuery);
                  let Connections = [];
                  let myHeaders = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_3__.GetRequestHeader)();
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.RecursiveSearchUrl(), {
                    method: "POST",
                    headers: myHeaders,
                    body: raw
                  });
                  if (response.ok) {
                    const result = yield response.json();
                    let conceptIds = result.compositionIds;
                    let connections = result.internalConnections;
                    let externalConnections = result.externalConnections;
                    return result;
                  } else {
                    console.log("recursive search error ", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleHttpError)(response);
                  }
                  return [];
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("recursive search error message: ", error.message);
                  } else {
                    console.log("recursive search unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.RecursiveSearchUrl());
                }
              });
            }
            function RecursiveSearchLocal(composition_1) {
              return __awaiter(this, arguments, void 0, function* (composition, listLinkers = [], textSearch = "") {
              });
            }
          }
        ),
        /***/
        "./src/Api/SearchConcept/GetConceptByCharacterAndCategoryDirect.ts": (
          /*!*************************************************************************!*\
            !*** ./src/Api/SearchConcept/GetConceptByCharacterAndCategoryDirect.ts ***!
            \*************************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConceptByCharacterAndCategoryDirectApi: () => (
                /* binding */
                GetConceptByCharacterAndCategoryDirectApi
              )
              /* harmony export */
            });
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./../../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConceptByCharacterAndCategoryDirectApi(characterValue, category_id) {
              return __awaiter(this, void 0, void 0, function* () {
                let concept = (0, _app__WEBPACK_IMPORTED_MODULE_3__.CreateDefaultConcept)();
                try {
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeader)("application/x-www-form-urlencoded");
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptByCharacterAndCategoryDirectUrl(), {
                    method: "POST",
                    headers: header,
                    body: `character_value=${characterValue}&category_id=${category_id}`
                  });
                  if (response.ok) {
                    let conceptString = yield response.json();
                    concept = conceptString;
                    _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.AddConcept(concept);
                  } else {
                    console.log("This is the concept by category and character error", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleHttpError)(response);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log(" This is the concept by category and character error message: ", error.message);
                  } else {
                    console.log(" This is the concept by category and character unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_4__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.GetConceptByCharacterAndCategoryDirectUrl());
                }
                return concept;
              });
            }
          }
        ),
        /***/
        "./src/Api/Search/Search.ts": (
          /*!**********************************!*\
            !*** ./src/Api/Search/Search.ts ***!
            \**********************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SearchAllConcepts: () => (
                /* binding */
                SearchAllConcepts
              )
              /* harmony export */
            });
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function SearchAllConcepts(type_1, search_1, composition_1, token_1) {
              return __awaiter(this, arguments, void 0, function* (type, search, composition, token, inpage = 10, page = 1) {
                var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_0__.GetRequestHeaderWithAuthorization)("application/x-www-form-urlencoded", token);
                var urlencoded = new URLSearchParams();
                urlencoded.append("type", type);
                urlencoded.append("search", search);
                urlencoded.append("composition", composition);
                urlencoded.append("inpage", inpage.toString());
                urlencoded.append("page", page.toString());
                const queryUrl = _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.SearchCompositionsUrl() + "?" + urlencoded.toString();
                try {
                  const response = yield fetch(queryUrl, {
                    method: "GET",
                    headers: header
                  });
                  if (response.ok) {
                    let result = yield response.json();
                    return result;
                  } else {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleHttpError)(response);
                    return [];
                  }
                } catch (ex) {
                  console.log("This is the searching error", ex);
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleInternalError)(ex, queryUrl);
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Search/SearchInternalApi.ts": (
          /*!*********************************************!*\
            !*** ./src/Api/Search/SearchInternalApi.ts ***!
            \*********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SearchInternalAllApi: () => (
                /* binding */
                SearchInternalAllApi
              ),
              /* harmony export */
              SearchInternalApi: () => (
                /* binding */
                SearchInternalApi
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function SearchInternalApi(search_1) {
              return __awaiter(this, arguments, void 0, function* (search, token = "") {
                var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeaderWithAuthorization)("application/json", token);
                let queryUrl = _app__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.SearchInternalWithAuthenticatedCcsUrl();
                queryUrl = queryUrl + "?composition=" + search.composition + "&search=" + search.search + "&internalComposition=" + search.internalComposition + "&type=" + search.type + "&inpage=" + search.inpage + "&page=" + search.page;
                try {
                  const response = yield fetch(queryUrl, {
                    method: "GET",
                    headers: header
                  });
                  if (response.ok) {
                    let result = yield response.json();
                    return result;
                  } else {
                    console.log("This is the searching internal error", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleHttpError)(response);
                    return [];
                  }
                } catch (ex) {
                  console.log("This is the searching internal error", ex);
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleInternalError)(ex, queryUrl);
                }
              });
            }
            function SearchInternalAllApi(search_1) {
              return __awaiter(this, arguments, void 0, function* (search, token = "") {
                var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeaderWithAuthorization)("application/json", token);
                let queryUrl = _app__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.SearchInternalWithAuthenticatedCcsUrl();
                queryUrl = queryUrl + "?composition=" + search.composition + "&search=" + search.search + "&internalComposition=" + search.internalComposition + "&type=" + search.type + "&inpage=" + search.inpage + "&page=" + search.page;
                try {
                  const response = yield fetch(queryUrl, {
                    method: "GET",
                    headers: header
                  });
                  if (response.ok) {
                    let result = yield response.json();
                    return result;
                  } else {
                    console.log("This is the searching internal error", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleHttpError)(response);
                    return [];
                  }
                } catch (ex) {
                  console.log("This is the searching internal error", ex);
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleInternalError)(ex, queryUrl);
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Search/SearchLinkMultipleApi.ts": (
          /*!*************************************************!*\
            !*** ./src/Api/Search/SearchLinkMultipleApi.ts ***!
            \*************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SearchLinkMultipleApi: () => (
                /* binding */
                SearchLinkMultipleApi
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function SearchLinkMultipleApi(searchQuery_1) {
              return __awaiter(this, arguments, void 0, function* (searchQuery, token = "") {
                var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeaderWithAuthorization)("application/json", token);
                const queryUrl = _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.SearchLinkMultipleAllApiUrl();
                const body = JSON.stringify(searchQuery);
                try {
                  const response = yield fetch(queryUrl, {
                    method: "POST",
                    headers: header,
                    body
                  });
                  if (response.ok) {
                    let result = yield response.json();
                    return result;
                  } else {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleHttpError)(response);
                    console.log("This is the searching multiple error", response.status);
                    return [];
                  }
                } catch (ex) {
                  console.log("This is the searching multiple error", ex);
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleInternalError)(ex, queryUrl);
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Search/SearchWithLinker.ts": (
          /*!********************************************!*\
            !*** ./src/Api/Search/SearchWithLinker.ts ***!
            \********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SearchWithLinker: () => (
                /* binding */
                SearchWithLinker
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function SearchWithLinker(searchQuery_1) {
              return __awaiter(this, arguments, void 0, function* (searchQuery, token = "") {
                var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeaderWithAuthorization)("application/json", token);
                const queryUrl = _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.SearchLinkMultipleAll();
                const body = JSON.stringify(searchQuery);
                try {
                  const response = yield fetch(queryUrl, {
                    method: "POST",
                    headers: header,
                    body
                  });
                  if (response.ok) {
                    let result = yield response.json();
                    return result;
                  } else {
                    console.log("This is the searching error", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleHttpError)(response);
                    return [];
                  }
                } catch (ex) {
                  console.log("This is the searching error", ex);
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleInternalError)(ex, queryUrl);
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Search/SearchWithTypeAndLinker.ts": (
          /*!***************************************************!*\
            !*** ./src/Api/Search/SearchWithTypeAndLinker.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SearchWithTypeAndLinkerApi: () => (
                /* binding */
                SearchWithTypeAndLinkerApi
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function SearchWithTypeAndLinkerApi(searchStructure_1, searchQuery_1) {
              return __awaiter(this, arguments, void 0, function* (searchStructure, searchQuery, token = "") {
                let queryUrl = _app__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.SearchAllTypeWithLinker();
                var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeaderWithAuthorization)("application/json", token);
                queryUrl = queryUrl + "?search=" + searchStructure.search + "&type=" + searchStructure.type + "&inpage=" + searchStructure.inpage + "&page=" + searchStructure.page;
                const body = JSON.stringify(searchQuery);
                try {
                  const response = yield fetch(queryUrl, {
                    method: "POST",
                    headers: header,
                    body
                  });
                  if (response.ok) {
                    let result = yield response.json();
                    return result;
                  } else {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleHttpError)(response);
                    console.log("This is the searching multiple error", response.status);
                    return [];
                  }
                } catch (ex) {
                  console.log("This is the searching SearchWithTypeAndLinker error", ex);
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleInternalError)(ex, queryUrl);
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Session/CreateSession.ts": (
          /*!******************************************!*\
            !*** ./src/Api/Session/CreateSession.ts ***!
            \******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateSession: () => (
                /* binding */
                CreateSession
              )
              /* harmony export */
            });
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateSession(sessionData) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_0__.GetRequestHeader)();
                  const body = JSON.stringify(sessionData);
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.CreateSessionId(), {
                    method: "POST",
                    headers: header,
                    body
                  });
                  if (response.ok) {
                    return response.json();
                  } else {
                    console.log("Creating session failed", yield response.json());
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleHttpError)(response);
                    return null;
                  }
                } catch (ex) {
                  console.log("Creating session failed", ex);
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleInternalError)(ex, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.CreateSessionId());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Session/CreateSessionVisit.ts": (
          /*!***********************************************!*\
            !*** ./src/Api/Session/CreateSessionVisit.ts ***!
            \***********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateSessionVisit: () => (
                /* binding */
                CreateSessionVisit
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateSessionVisit(sessionId, url) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeader)("application/x-www-form-urlencoded");
                  const urlencoded = new URLSearchParams();
                  urlencoded.append("sessionId", sessionId.toString());
                  urlencoded.append("url", url);
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.CreateSessionVisitUrl(), {
                    method: "POST",
                    headers: header,
                    body: urlencoded
                  });
                  if (response.ok) {
                    return response.json();
                  } else {
                    console.log("Creating session url failed", yield response.json());
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleHttpError)(response);
                    return null;
                  }
                } catch (ex) {
                  console.log("Creating session url failed", ex);
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleInternalError)(ex, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.CreateSessionVisitUrl());
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Signin.ts": (
          /*!***************************!*\
            !*** ./src/Api/Signin.ts ***!
            \***************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                Signin
              )
              /* harmony export */
            });
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function Signin(signinInfo) {
              return __awaiter(this, void 0, void 0, function* () {
                const raw = JSON.stringify({
                  email: signinInfo.email,
                  password: signinInfo.password
                });
                let freeschemaRes = {
                  message: "success",
                  status: false,
                  statusCode: 200,
                  data: ""
                };
                const myHeaders = new Headers();
                myHeaders.append("Content-Type", "application/json");
                const url = _app__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.LoginUrl();
                try {
                  const response = yield fetch(url, {
                    method: "POST",
                    headers: myHeaders,
                    body: raw,
                    redirect: "follow"
                  });
                  const output = yield response.json();
                  if (response.ok) {
                    const dataObject = output === null || output === void 0 ? void 0 : output.data;
                    freeschemaRes = {
                      message: "success",
                      status: true,
                      statusCode: 200,
                      data: dataObject
                    };
                  } else {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_0__.HandleHttpError)(response);
                  }
                  return freeschemaRes;
                } catch (error) {
                  console.log("Sign in api error", error);
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_0__.HandleInternalError)(error, url);
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Signup.ts": (
          /*!***************************!*\
            !*** ./src/Api/Signup.ts ***!
            \***************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                Signup
              )
              /* harmony export */
            });
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function Signup(signupModel) {
              return __awaiter(this, void 0, void 0, function* () {
                const signupResponse = yield postData(_app__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.SignupUrl(), signupModel);
                return signupResponse;
              });
            }
            function postData() {
              return __awaiter(this, arguments, void 0, function* (url = "", data = {}) {
                let freeschemaRes = {
                  message: "success",
                  status: false,
                  statusCode: 200,
                  data: ""
                };
                try {
                  const response = yield fetch(url, {
                    method: "POST",
                    // *GET, POST, PUT, DELETE, etc.
                    mode: "cors",
                    // no-cors, *cors, same-origin
                    cache: "no-cache",
                    // *default, no-cache, reload, force-cache, only-if-cached
                    credentials: "same-origin",
                    // include, *same-origin, omit
                    headers: {
                      "Content-Type": "application/json"
                      // 'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    redirect: "follow",
                    // manual, *follow, error
                    referrerPolicy: "no-referrer",
                    // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                    body: JSON.stringify(data)
                    // body data type must match "Content-Type" header
                  });
                  const output = yield response.json();
                  if (response.ok) {
                    freeschemaRes = {
                      message: "success",
                      status: true,
                      statusCode: 200,
                      data: output
                    };
                  } else {
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_0__.HandleHttpError)(response);
                  }
                  return freeschemaRes;
                } catch (error) {
                  console.log("Signup Error: ", error);
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_0__.HandleInternalError)(error, url);
                }
              });
            }
          }
        ),
        /***/
        "./src/Api/Translate/TranslateLocalToReal.ts": (
          /*!***************************************************!*\
            !*** ./src/Api/Translate/TranslateLocalToReal.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              TranslateLocalToReal: () => (
                /* binding */
                TranslateLocalToReal
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function TranslateLocalToReal(conceptId) {
              return __awaiter(this, void 0, void 0, function* () {
                let result = (0, _app__WEBPACK_IMPORTED_MODULE_3__.CreateDefaultConcept)();
                try {
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeaderWithAuthorization)("application/x-www-form-urlencoded");
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.GetRealConceptById(), {
                    method: "POST",
                    headers: header,
                    body: `id=${conceptId}`
                  });
                  if (response.ok) {
                    result = yield response.json();
                    if (result.id > 0) {
                      _app__WEBPACK_IMPORTED_MODULE_3__.ConceptsData.AddConcept(result);
                    }
                    return result;
                  } else {
                    console.log("Error in Getting Translating concept Error", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleHttpError)(response);
                  }
                } catch (error) {
                  if (error instanceof Error) {
                    console.log("Error in Getting Translating concept error message: ", error);
                  } else {
                    console.log("Error in Getting Translating concept unexpected error: ", error);
                  }
                  (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleInternalError)(error, _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.GetRealConceptById());
                }
                return result;
              });
            }
          }
        ),
        /***/
        "./src/Api/View/ViewInternalDataApi.ts": (
          /*!*********************************************!*\
            !*** ./src/Api/View/ViewInternalDataApi.ts ***!
            \*********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              ViewInternalDataApi: () => (
                /* binding */
                ViewInternalDataApi
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Services/Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            var _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Security/GetRequestHeader */
              "./src/Services/Security/GetRequestHeader.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function ViewInternalDataApi(ids) {
              return __awaiter(this, void 0, void 0, function* () {
                let connectionList = [];
                try {
                  var header = (0, _Services_Security_GetRequestHeader__WEBPACK_IMPORTED_MODULE_2__.GetRequestHeader)();
                  const response = yield fetch(_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.ViewInternalDataUrl(), {
                    method: "POST",
                    headers: header,
                    body: JSON.stringify(ids)
                  });
                  if (response.ok) {
                    let conceptString = yield response.json();
                    let connectionDictionary = {};
                    for (let i2 = 0; i2 < conceptString.length; i2++) {
                      let conceptList = conceptString[i2].concepts;
                      connectionList = conceptString[i2].connections;
                      let id = conceptString[i2].id;
                      (0, _app__WEBPACK_IMPORTED_MODULE_3__.GetConceptBulk)(conceptList);
                      connectionDictionary[id] = connectionList;
                    }
                    return connectionDictionary;
                  } else {
                    console.log("View Internal Data error", response.status);
                    (0, _Services_Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_1__.HandleHttpError)(response);
                  }
                  return connectionList;
                } catch (error) {
                  if (error instanceof Error) {
                    console.log(" This is the view internal data error message: ", error.message);
                  } else {
                    console.log(" This is the view internal data unexpected error: ", error);
                  }
                  throw error;
                }
              });
            }
          }
        ),
        /***/
        "./src/Constants/AccessConstants.ts": (
          /*!******************************************!*\
            !*** ./src/Constants/AccessConstants.ts ***!
            \******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              ADMIN: () => (
                /* binding */
                ADMIN
              ),
              /* harmony export */
              PRIVATE: () => (
                /* binding */
                PRIVATE
              ),
              /* harmony export */
              PUBLIC: () => (
                /* binding */
                PUBLIC
              )
              /* harmony export */
            });
            const ADMIN = 3;
            const PRIVATE = 4;
            const PUBLIC = 5;
          }
        ),
        /***/
        "./src/Constants/FormatConstants.ts": (
          /*!******************************************!*\
            !*** ./src/Constants/FormatConstants.ts ***!
            \******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              DATAID: () => (
                /* binding */
                DATAID
              ),
              /* harmony export */
              DATAIDDATE: () => (
                /* binding */
                DATAIDDATE
              ),
              /* harmony export */
              JUSTDATA: () => (
                /* binding */
                JUSTDATA
              ),
              /* harmony export */
              NORMAL: () => (
                /* binding */
                NORMAL
              ),
              /* harmony export */
              RAW: () => (
                /* binding */
                RAW
              )
              /* harmony export */
            });
            const NORMAL = 1;
            const DATAID = 2;
            const JUSTDATA = 3;
            const DATAIDDATE = 4;
            const RAW = 5;
          }
        ),
        /***/
        "./src/DataStructures/BaseUrl.ts": (
          /*!***************************************!*\
            !*** ./src/DataStructures/BaseUrl.ts ***!
            \***************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              BaseUrl: () => (
                /* binding */
                BaseUrl
              )
              /* harmony export */
            });
            class BaseUrl {
              // static GetConceptUrl:string = this.BASE_URL + '/api/getConcept';
              static GetConceptUrl() {
                return this.BASE_URL + "/api/getConcept";
              }
              static GetConnectionUrl() {
                return this.BASE_URL + "/api/get-connection-by-id";
              }
              static GetConceptBulkUrl() {
                return this.BASE_URL + "/api/get_concept_bulk";
              }
              static GetConnectionBulkUrl() {
                return this.BASE_URL + "/api/get_connection_bulk";
              }
              static GetAllConceptsOfUserUrl() {
                return this.BASE_URL + "/api/get_all_concepts_of_user";
              }
              static GetAllConnectionsOfUserUrl() {
                return this.BASE_URL + "/api/get_all_connections_of_user";
              }
              static GetAllConnectionsOfCompositionUrl() {
                return this.BASE_URL + "/api/get_all_connections_of_composition";
              }
              static GetAllConnectionsOfCompositionBulkUrl() {
                return this.BASE_URL + "/api/get_all_connections_of_composition_bulk";
              }
              static GetConceptByCharacterValueUrl() {
                return this.BASE_URL + "/api/get_concept_by_character_value";
              }
              static GetConceptByCharacterAndTypeUrl() {
                return this.BASE_URL + "/api/get_concept_by_character_and_type";
              }
              static GetConceptByCharacterAndCategoryUrl() {
                return this.BASE_URL + "/api/get_concept_by_character_and_category";
              }
              static GetConceptByCharacterAndCategoryDirectUrl() {
                return this.BASE_URL + "/api/get_concept_by_character_and_category_direct";
              }
              static GetCharacterByCharacterUrl() {
                return this.BASE_URL + "/api/get_character_by_character";
              }
              static GetAllConceptsByTypeUrl() {
                return this.BASE_URL + "/api/get_all_concepts_by_type";
              }
              static GetAllConnectionsOfConceptUrl() {
                return this.BASE_URL + "/api/get-link-connections";
              }
              static GetAllAiData() {
                return this.BASE_URL + "/api/get-preloaded-concepts";
              }
              static GetAllPrefetchConnectionsUrl() {
                return this.BASE_URL + "/api/get_all_connections_of_user?inpage=500";
              }
              static GetAllLinkerConnectionOfConceptUrl() {
                return this.BASE_URL + "/api/get-all-linkers-from-concept";
              }
              static GetAllLinkerConnectionToConceptUrl() {
                return this.BASE_URL + "/api/get-all-linkers-to-concept";
              }
              static DeleteConceptUrl() {
                return this.BASE_URL + "/api/delete_concept";
              }
              static RecursiveSearchUrl() {
                return this.BASE_URL + "/api/recursivesearch-concept-connection";
              }
              static SearchLinkMultipleAllApiUrl() {
                return this.BASE_URL + "/api/Connection/search-link-multiple-all-ccs";
              }
              static MakeTheNameInBackendUrl() {
                return this.BASE_URL + "/api/make-name-from-frontend";
              }
              static SearchAllTypeWithLinker() {
                return this.BASE_URL + "/api/search-all-with-linker-ccs";
              }
              static LoginUrl() {
                return this.BASE_URL + "/api/auth/login";
              }
              static SignupUrl() {
                return this.BASE_URL + "/api/auth/signup";
              }
              static GetCompositionConnectionBetweenTwoConceptsUrl() {
                return this.BASE_URL + "/api/get-composition-connection-between-two-concepts";
              }
              static SearchCompositionsUrl() {
                return this.BASE_URL + "/api/search-compositions";
              }
              static SearchLinkMultipleAll() {
                return this.BASE_URL + "/api/Connection/search-link-multiple-all";
              }
              static CreateSessionId() {
                return this.BASE_URL + "/api/create-session-id-remote";
              }
              static CreateSessionVisitUrl() {
                return this.BASE_URL + "/api/create-remote-session-visit";
              }
              //////////////////////////////////////////////////////////////////////////////
              /////////////////////Api for viewing internal data //////////////////////////
              static ViewInternalDataUrl() {
                return this.BASE_URL + "/api/view-api-internal-data-ccs-id-bulk";
              }
              static SearchInternalWithAuthenticatedCcsUrl() {
                return this.BASE_URL + "/api/search-composition-internal-authenticated-ccs";
              }
              static SearchInternalWithCcsUrl() {
                return this.BASE_URL + "/api/search-composition-internal-authenticated-ccs";
              }
              static CreateGhostConceptApiUrl() {
                return BaseUrl.NODE_URL + "/api/v1/local-concepts";
              }
              static CreateGhostConnectionApiUrl() {
                return BaseUrl.NODE_URL + "/api/v1/local-connections";
              }
              static GetRealConceptById() {
                return BaseUrl.NODE_URL + "/api/v1/local-concepts-translate";
              }
              //////////////////////////////////////////////////////////////////////////////
              //////////////// API For Reserved Ids ///////////////////////////////////////
              static GetReservedIdUrl() {
                return this.BASE_URL + "/api/get_reserved_ids";
              }
              static GetReservedConnectionIdUrl() {
                return this.BASE_URL + "/api/get_reserved_connection_ids";
              }
              /////////////////////////////////////////////////////////////////////////////
              ////////////////API For Creating Data //////////////////////////////////////
              static CreateTheTextDataUrl() {
                return this.BASE_URL + "/api/create_text_data";
              }
              static CreateTheCharacterDataUrl() {
                return this.BASE_URL + "/api/create_character_data";
              }
              static CreateTheConceptUrl() {
                return this.BASE_URL + "/api/create_the_concept";
              }
              static CreateTheConnectionUrl() {
                return this.BASE_URL + "/api/create_the_connection";
              }
              static CreateTheConnectionNewUrl() {
                return this.BASE_URL + "/api/create_the_connection_new";
              }
              static MakeTheTypeConceptUrl() {
                return this.BASE_URL + "/api/make_the_type_concept";
              }
              ////////////////////////////////////////////////////////////////////////
              /////////////////////API FOR Deleting Connection //////////////////////
              static DeleteTheConnectionUrl() {
                return this.BASE_URL + "/api/delete_connection";
              }
            }
            BaseUrl.BASE_URL = "https://localhost:7053/";
            BaseUrl.AI_URL = "https://ai.freeschema.com";
            BaseUrl.MQTT_URL = "192.168.1.249";
            BaseUrl.NODE_URL = "http://localhost:5001";
            BaseUrl.BASE_APPLICATION = "";
            BaseUrl.BASE_RANDOMIZER = 999;
          }
        ),
        /***/
        "./src/DataStructures/BinaryCharacterTree.ts": (
          /*!***************************************************!*\
            !*** ./src/DataStructures/BinaryCharacterTree.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              BinaryCharacterTree: () => (
                /* binding */
                BinaryCharacterTree
              )
              /* harmony export */
            });
            var _IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var _Node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./Node */
              "./src/DataStructures/Node.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class BinaryCharacterTree {
              static waitForDataToLoad() {
                return __awaiter(this, void 0, void 0, function* () {
                  return new Promise((resolve, reject) => {
                    this.checkFlag(resolve);
                    setTimeout(() => {
                      reject("not");
                    }, 25e3);
                  });
                });
              }
              static checkFlag(resolve) {
                if (_IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__.IdentifierFlags.isCharacterLoaded) {
                  return resolve("done");
                } else {
                  setTimeout(BinaryCharacterTree.checkFlag, 1e3, resolve);
                }
              }
              static addNodeToTree(node) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.characterRoot == null) {
                    this.characterRoot = node;
                    return this.characterRoot;
                  } else {
                    this.characterRoot = this.characterRoot.addCharacterNode(node, this.characterRoot, this.characterRoot.height);
                  }
                  return this.characterRoot;
                });
              }
              static removeNodeByCharacter(character, id) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.characterRoot) {
                    this.characterRoot.removeNodeWithVariants(this.characterRoot, character, id);
                  }
                });
              }
              static countNumberOfNodes() {
                if (this.characterRoot) {
                  return this.characterRoot.countNodeBelow(this.characterRoot);
                }
                return 0;
              }
              static addConceptToTree(concept) {
                if (concept.characterValue != "") {
                  var node = new _Node__WEBPACK_IMPORTED_MODULE_1__.Node(concept.characterValue, concept, null, null);
                  this.addNodeToTree(node);
                }
              }
              static getNodeFromTree(value) {
                if (this.characterRoot) {
                  var Node = this.characterRoot.getCharacterFromNode(value, this.characterRoot);
                  return Node;
                }
                return this.characterRoot;
              }
              static getNodeFromTreeUpdated(value) {
                if (this.characterRoot) {
                  var Node = this.characterRoot.getCharacterFromNode(value, this.characterRoot);
                  return Node;
                }
                return this.characterRoot;
              }
              static getCharacterAndTypeFromTree(value, typeId) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.characterRoot) {
                    var Node = this.characterRoot.getFromNodeWithCharacterAndType(value, typeId, this.characterRoot);
                    return Node;
                  }
                  return this.characterRoot;
                });
              }
              static getCharacterAndCategoryFromTree(value, categoryId) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.characterRoot) {
                    var Node = this.characterRoot.getFromNodeWithCharacterAndCategory(value, categoryId, this.characterRoot);
                    return Node;
                  }
                  return this.characterRoot;
                });
              }
              static removeConceptCharacter(id) {
                if (this.characterRoot) {
                  this.characterRoot = this.characterRoot.removeNode(this.characterRoot, id);
                }
              }
            }
            BinaryCharacterTree.characterRoot = null;
          }
        ),
        /***/
        "./src/DataStructures/BinaryTree.ts": (
          /*!******************************************!*\
            !*** ./src/DataStructures/BinaryTree.ts ***!
            \******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              BinaryTree: () => (
                /* binding */
                BinaryTree
              )
              /* harmony export */
            });
            var _BinaryCharacterTree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./BinaryCharacterTree */
              "./src/DataStructures/BinaryCharacterTree.ts"
            );
            var _Node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./Node */
              "./src/DataStructures/Node.ts"
            );
            var _IdentifierFlags__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class BinaryTree {
              static addNodeToTree(node) {
                if (this.root == null) {
                  this.root = node;
                  return this.root;
                } else {
                  this.root = this.root.addNode(node, this.root, this.root.height);
                }
              }
              static waitForDataToLoad() {
                return __awaiter(this, void 0, void 0, function* () {
                  return new Promise((resolve, reject) => {
                    this.checkFlag(resolve);
                    setTimeout(() => {
                      reject("not");
                    }, 25e3);
                  });
                });
              }
              static checkFlag(resolve) {
                if (_IdentifierFlags__WEBPACK_IMPORTED_MODULE_2__.IdentifierFlags.isDataLoaded) {
                  return resolve("done");
                } else {
                  setTimeout(BinaryTree.checkFlag, 1e3, resolve);
                }
              }
              static addConceptToTree(concept) {
                let node = new _Node__WEBPACK_IMPORTED_MODULE_1__.Node(concept.id, concept, null, null);
                let characterNode = new _Node__WEBPACK_IMPORTED_MODULE_1__.Node(concept.characterValue, concept, null, null);
                _BinaryCharacterTree__WEBPACK_IMPORTED_MODULE_0__.BinaryCharacterTree.addNodeToTree(characterNode);
                this.addNodeToTree(node);
              }
              static getNodeFromTree(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.root) {
                    let Node = this.root.getFromNode(id, this.root);
                    return Node;
                  }
                  return null;
                });
              }
              static removeNodeFromTree(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.root) {
                    let event = new Event(`${id}`);
                    console.log("this is the fired event after delete", event);
                    dispatchEvent(event);
                    this.root = this.root.removeNode(this.root, id);
                  }
                });
              }
              static getConceptListFromIds(ids, connectionArray, remainingIds) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.root) {
                    this.root.checkIfIdsInNode(this.root, ids, connectionArray, remainingIds);
                  }
                });
              }
              static countNumberOfNodes() {
                if (this.root) {
                  return this.root.countNodeBelow(this.root);
                }
                return 0;
              }
            }
            BinaryTree.root = null;
          }
        ),
        /***/
        "./src/DataStructures/BinaryTypeTree.ts": (
          /*!**********************************************!*\
            !*** ./src/DataStructures/BinaryTypeTree.ts ***!
            \**********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              BinaryTypeTree: () => (
                /* binding */
                BinaryTypeTree
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Services/CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var _IdentifierFlags__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var _TypeNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./TypeNode */
              "./src/DataStructures/TypeNode.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class BinaryTypeTree {
              // old method having concept as the value.
              // static async addNodeToTree(node:Node){
              //     if(this.typeRoot == null){
              //         this.typeRoot = node;
              //         return this.typeRoot;
              //     }
              //     else{
              //          let event = new CustomEvent(`${node.value.typeId}`, {detail: node.value.id});
              //         // console.log("this is the fired event", event);
              //          dispatchEvent(event);
              //         this.typeRoot = this.typeRoot.addTypeNode(node,this.typeRoot,this.typeRoot.height);
              //     }
              //     return this.typeRoot;
              // }
              // new method with just ids 
              static addType(node) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.root == null) {
                    this.root = node;
                    return this.root;
                  } else {
                    let event = new CustomEvent(`${node.key}`, { detail: node.value[0] });
                    dispatchEvent(event);
                    this.root = this.root.addType(this.root, node.key, node.value[0]);
                  }
                  return this.root;
                });
              }
              static addConceptToTree(concept) {
                if (concept.typeId != 0) {
                  let typeNode = new _TypeNode__WEBPACK_IMPORTED_MODULE_3__.TypeNode(concept.typeId, concept.id);
                  this.addType(typeNode);
                }
              }
              static removeTypeConcept(typeId, id) {
                if (this.root) {
                  this.root = this.root.removeNodeWithVariants(this.root, typeId, id);
                }
              }
              // static getNodeFromTree(id:number){
              //     // old method
              //     if(this.typeRoot){
              //         var Node = this.typeRoot.getFromNode(id, this.typeRoot);
              //         return Node;
              //     }
              //     return this.typeRoot;
              // }
              static getNodeFromTreeNew(id) {
                if (this.root) {
                  let node = this.root.getFromNode(id, this.root);
                  return node;
                }
                return this.root;
              }
              /// old method
              // static getTypeVariantsFromTree(typeId:number){
              //         let Node = this.getNodeFromTree(typeId);
              //         var concepts : Concept[] = [];
              //         if(Node){
              //             concepts.push(Node?.value);
              //             for(let i=0; i< Node.variants.length; i++){
              //                 concepts.push(Node.variants[i].value);
              //             }
              //         return concepts;
              //     }
              // }
              //new method
              static getTypeVariantsFromTreeNew(typeId) {
                return __awaiter(this, void 0, void 0, function* () {
                  let node = this.getNodeFromTreeNew(typeId);
                  let conceptIds = [];
                  let concepts = [];
                  if (node) {
                    conceptIds = node.value;
                    for (let i2 = 0; i2 < conceptIds.length; i2++) {
                      concepts.push(yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetTheConcept)(conceptIds[i2]));
                    }
                  }
                  return concepts;
                });
              }
              static waitForDataToLoad() {
                return __awaiter(this, void 0, void 0, function* () {
                  return new Promise((resolve, reject) => {
                    this.checkFlag(resolve);
                    setTimeout(() => {
                      reject("not");
                    }, 25e3);
                  });
                });
              }
              static checkFlag(resolve) {
                if (_IdentifierFlags__WEBPACK_IMPORTED_MODULE_2__.IdentifierFlags.isTypeLoaded) {
                  return resolve("done");
                } else {
                  setTimeout(BinaryTypeTree.checkFlag, 1e3, resolve);
                }
              }
              // static async getTypeVariantsFromTreeWithUserId(typeId:number, userId:number){
              //     var concepts : Concept[] = [];
              //         var Node = this.getNodeFromTree(typeId);
              //         if(Node){
              //             console.log("this is the tree to find", Node.value);
              //             if(Node.value.userId == userId ){
              //                 concepts.push(Node?.value);
              //             }
              //             for(let i=0; i< Node.variants.length; i++){
              //                 if(Node.variants[i].value.userId == userId ){
              //                     var isPresent = false;
              //                     for(let j=0; j<concepts.length;j++){
              //                         if(concepts[j].id == Node.variants[i].value.id){
              //                             isPresent = true;
              //                         }
              //                     }
              //                     if(!isPresent){
              //                         concepts.push(Node.variants[i].value);
              //                     }
              //                 }
              //             }
              //         }
              //     return concepts;
              // }
              // new method
              static getTypeVariantsFromTreeWithUserIdNew(typeId, userId) {
                return __awaiter(this, void 0, void 0, function* () {
                  let concepts = [];
                  let allConcepts = yield this.getTypeVariantsFromTreeNew(typeId);
                  console.log("these are all the concepts", allConcepts);
                  for (let i2 = 0; i2 < allConcepts.length; i2++) {
                    if (allConcepts[i2].userId == userId) {
                      concepts.push(allConcepts[i2]);
                    }
                  }
                  return concepts;
                });
              }
              // static async getTypeVariantsWithCharacterValue( characterValue:string,typeId:number,){
              //     let concept = CreateDefaultConcept();
              //         var Node = this.getNodeFromTree(typeId);
              //         if(Node){
              //             if(Node.value.characterValue == characterValue ){
              //                 concept = Node.value;
              //             }
              //             for(let i=0; i< Node.variants.length; i++){
              //                 if(Node.variants[i].value.characterValue == characterValue ){
              //                     concept = Node.variants[i].value;
              //                 }
              //             }
              //         }
              //     return concept;
              // }
              //new method
              static getTypeVariantsWithCharacterValueNew(characterValue, typeId) {
                return __awaiter(this, void 0, void 0, function* () {
                  let allConcepts = yield this.getTypeVariantsFromTreeNew(typeId);
                  console.log("this is all the concepts for character", allConcepts);
                  let concept = (0, _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_1__.CreateDefaultConcept)();
                  for (let i2 = 0; i2 < allConcepts.length; i2++) {
                    if (allConcepts[i2].characterValue == characterValue) {
                      concept = allConcepts[i2];
                    }
                  }
                  return concept;
                });
              }
              static countNumberOfNodes() {
                if (this.typeRoot) {
                  return this.typeRoot.countNodeBelow(this.typeRoot);
                }
                return 0;
              }
            }
            BinaryTypeTree.typeRoot = null;
            BinaryTypeTree.root = null;
          }
        ),
        /***/
        "./src/DataStructures/CharacterRepository.ts": (
          /*!***************************************************!*\
            !*** ./src/DataStructures/CharacterRepository.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CharacterRepository: () => (
                /* binding */
                CharacterRepository
              )
              /* harmony export */
            });
            var _TheCharacter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./TheCharacter */
              "./src/DataStructures/TheCharacter.ts"
            );
            class CharacterRepository {
              constructor() {
                this.name = "character Repository";
              }
              static AddCharacter(character) {
                this.characterData[character.id] = character;
              }
              static GetCharacter(value) {
                var theCharacter = new _TheCharacter__WEBPACK_IMPORTED_MODULE_0__.TheCharacter(0, "0", 0, 0, 0, 0, 0, 0, "0", false);
                for (var i2 = 0; i2 < this.characterData.length; i2++) {
                  if (this.characterData[i2].data == value) {
                    theCharacter = this.characterData[i2];
                  }
                }
                return theCharacter;
              }
            }
            CharacterRepository.characterData = [];
          }
        ),
        /***/
        "./src/DataStructures/Composition/Composition.ts": (
          /*!*******************************************************!*\
            !*** ./src/DataStructures/Composition/Composition.ts ***!
            \*******************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              Composition: () => (
                /* binding */
                Composition
              )
              /* harmony export */
            });
            var _Services_Composition_BuildComposition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../Services/Composition/BuildComposition */
              "./src/Services/Composition/BuildComposition.ts"
            );
            var _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Services/CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var _Services_Mqtt_publishMessage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/Mqtt/publishMessage */
              "./src/Services/Mqtt/publishMessage.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class Composition {
              constructor() {
                this.id = 0;
                this.mainConcept = (0, _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_1__.CreateDefaultConcept)();
                this.connections = [];
                this.concepts = [];
                this.subcompositions = [];
                this.cached = {};
              }
              updateCache() {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.mainConcept.id == 0)
                    for (let i2 = 0; i2 < this.concepts.length; i2++) {
                      if (this.concepts[i2].id == this.id) {
                        this.mainConcept = this.concepts[i2];
                      }
                    }
                  let visitedConcepts = [];
                  this.cached = yield (0, _Services_Composition_BuildComposition__WEBPACK_IMPORTED_MODULE_0__.recursiveFetchNew)(this.id, this.connections, this.concepts, this.subcompositions, visitedConcepts);
                });
              }
              UpdateAcrossDistributedSystem() {
                var _a;
                try {
                  if (this.id != 0) {
                    (0, _Services_Mqtt_publishMessage__WEBPACK_IMPORTED_MODULE_2__.publishMessage)("compositionUpdate", (_a = this.id) === null || _a === void 0 ? void 0 : _a.toString());
                  }
                } catch (ex) {
                  console.log("Error while publishing message", ex);
                }
              }
              isUpdating() {
                this.UpdateAcrossDistributedSystem();
              }
              GetDataCache() {
                var _a, _b, _c;
                const returnOutput = {};
                const mainString = (_c = (_b = (_a = this.mainConcept) === null || _a === void 0 ? void 0 : _a.type) === null || _b === void 0 ? void 0 : _b.characterValue) !== null && _c !== void 0 ? _c : "";
                returnOutput[mainString] = this.cached;
                const FinalReturn = {};
                FinalReturn["data"] = returnOutput;
                FinalReturn["id"] = this.id;
                return FinalReturn;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/Composition/CompositionBinaryTree.ts": (
          /*!*****************************************************************!*\
            !*** ./src/DataStructures/Composition/CompositionBinaryTree.ts ***!
            \*****************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CompositionBinaryTree: () => (
                /* binding */
                CompositionBinaryTree
              )
              /* harmony export */
            });
            var _CompositionNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./CompositionNode */
              "./src/DataStructures/Composition/CompositionNode.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class CompositionBinaryTree {
              static addNodeToTree(node) {
                if (this.root == null) {
                  this.root = node;
                  return this.root;
                } else {
                  this.root = this.root.addNode(node, this.root, this.root.height);
                }
              }
              static addCompositionToTree(composition) {
                const node = new _CompositionNode__WEBPACK_IMPORTED_MODULE_0__.CompositionNode(composition.id, composition, null, null);
                this.addNodeToTree(node);
              }
              static getNodeFromTree(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.root) {
                    const Node = this.root.getFromNode(id, this.root);
                    return Node;
                  }
                  return null;
                });
              }
              static removeNodeFromTree(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.root) {
                    this.root = this.root.removeNode(this.root, id);
                  }
                });
              }
              static countNumberOfNodes() {
                if (this.root) {
                  return this.root.countNodeBelow(this.root);
                }
                return 0;
              }
            }
            CompositionBinaryTree.root = null;
          }
        ),
        /***/
        "./src/DataStructures/Composition/CompositionNode.ts": (
          /*!***********************************************************!*\
            !*** ./src/DataStructures/Composition/CompositionNode.ts ***!
            \***********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CompositionNode: () => (
                /* binding */
                CompositionNode
              )
              /* harmony export */
            });
            var _CompositionBinaryTree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./CompositionBinaryTree */
              "./src/DataStructures/Composition/CompositionBinaryTree.ts"
            );
            class CompositionNode {
              constructor(key, value, leftNode, rightNode) {
                this.expiryTime = new Date(Date.now() + 10 * 60 * 1e3);
                this.height = 1;
                this.key = key;
                this.value = value;
                this.leftNode = leftNode;
                this.rightNode = rightNode;
              }
              isValid() {
                const currentTime = new Date(Date.now());
                if (this.expiryTime < currentTime) {
                  _CompositionBinaryTree__WEBPACK_IMPORTED_MODULE_0__.CompositionBinaryTree.removeNodeFromTree(this.key);
                  return false;
                }
                return true;
              }
              saveToCache(data) {
                this.value.cached = data;
              }
              addNode(passedNode, node, height) {
                if (node == null) {
                  node = passedNode;
                  return node;
                }
                const LeftNode = node.leftNode;
                const RightNode = node.rightNode;
                if (node.key > passedNode.key) {
                  node.leftNode = this.addNode(passedNode, LeftNode, height);
                } else if (node.key < passedNode.key) {
                  node.rightNode = this.addNode(passedNode, RightNode, height);
                } else {
                  this.isValid();
                  node = passedNode;
                  return node;
                }
                node.height = 1 + Math.max(this.getHeight(node.leftNode), this.getHeight(node.rightNode));
                const balancingFactor = this.getBalanceFactor(node);
                if (balancingFactor > 1) {
                  if (node.leftNode) {
                    if (passedNode.key < node.leftNode.key) {
                      return this.rightRotate(node);
                    } else if (passedNode.key > node.leftNode.key) {
                      node.leftNode = this.leftRotate(node.leftNode);
                      return this.rightRotate(node);
                    }
                  }
                }
                if (balancingFactor < -1) {
                  if (node.rightNode) {
                    if (passedNode.key > node.rightNode.key) {
                      return this.leftRotate(node);
                    } else if (passedNode.key < node.rightNode.key) {
                      node.rightNode = this.rightRotate(node.rightNode);
                      return this.leftRotate(node);
                    }
                  }
                }
                this.isValid();
                return node;
              }
              rightRotate(y) {
                if (y) {
                  const x = y.leftNode;
                  if (x) {
                    const T2 = x.rightNode;
                    y.leftNode = T2;
                    x.rightNode = y;
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(y.rightNode)) + 1;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode)) + 1;
                    return x;
                  }
                }
                return y;
              }
              leftRotate(x) {
                if (x) {
                  const y = x.rightNode;
                  if (y) {
                    const T2 = y.leftNode;
                    y.leftNode = x;
                    x.rightNode = T2;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode) + 1);
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(x.rightNode) + 1);
                    return y;
                  }
                }
                return x;
              }
              getHeight(node) {
                if (node) {
                  return node.height;
                }
                return 0;
              }
              getBalanceFactor(N) {
                if (N == null) {
                  return 0;
                }
                return this.getHeight(N.leftNode) - this.getHeight(N.rightNode);
              }
              getFromNode(id, node) {
                if (node) {
                  if (id == node.key && node.isValid()) {
                    return node;
                  } else if (id < node.key) {
                    return this.getFromNode(id, node.leftNode);
                  } else if (id > node.key) {
                    return this.getFromNode(id, node.rightNode);
                  }
                  return node;
                }
                return node;
              }
              removeNode(passedNode, id) {
                if (passedNode == null) {
                  return passedNode;
                }
                if (passedNode.key > id) {
                  passedNode.leftNode = this.removeNode(passedNode.leftNode, id);
                  return passedNode;
                } else if (passedNode.key < id) {
                  passedNode.rightNode = this.removeNode(passedNode.rightNode, id);
                  return passedNode;
                }
                if (passedNode.leftNode == null) {
                  const temp = passedNode.rightNode;
                  passedNode = null;
                  return temp;
                } else if (passedNode.rightNode == null) {
                  const temp = passedNode.leftNode;
                  passedNode = null;
                  return temp;
                } else {
                  const immediateSuccessor = this.inOrderSuccessor(passedNode.rightNode);
                  passedNode.value = immediateSuccessor.value;
                  passedNode.key = immediateSuccessor.key;
                  passedNode.rightNode = this.removeNode(passedNode.rightNode, immediateSuccessor.key);
                  return passedNode;
                }
              }
              countNodeBelow(root) {
                if (root == null) {
                  return 0;
                }
                return 1 + this.countNodeBelow(root.leftNode) + this.countNodeBelow(root.rightNode);
              }
              inOrderSuccessor(root) {
                while (root.leftNode != null) {
                  root = root.leftNode;
                }
                return root;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/Concept.ts": (
          /*!***************************************!*\
            !*** ./src/DataStructures/Concept.ts ***!
            \***************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              Concept: () => (
                /* binding */
                Concept
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            class Concept {
              constructor(id, userId, typeId, categoryId, referentId, characterValue, accessId, isNew = false, entryTimeStamp, updatedTimeStamp, typeCharacter) {
                this.count = 0;
                this.typeCharacter = "";
                this.isComposition = false;
                this.isTemp = false;
                this.isSynced = false;
                this.applicationId = _app__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.BASE_RANDOMIZER;
                this.x = 0;
                this.y = 0;
                this.id = id;
                this.userId = userId;
                this.typeId = typeId;
                this.ghostId = id;
                this.categoryId = categoryId;
                this.referentId = referentId;
                this.characterValue = `${characterValue}`;
                this.accessId = accessId;
                this.typeCharacter = typeCharacter;
                this.type = null;
                this.isNew = isNew;
                this.entryTimeStamp = entryTimeStamp;
                this.updatedTimeStamp = updatedTimeStamp;
              }
              getType() {
                console.log(this.typeId);
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/ConceptData.ts": (
          /*!*******************************************!*\
            !*** ./src/DataStructures/ConceptData.ts ***!
            \*******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              ConceptsData: () => (
                /* binding */
                ConceptsData
              )
              /* harmony export */
            });
            var _Database_indexeddb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Database/indexeddb */
              "./src/Database/indexeddb.ts"
            );
            var _BinaryTree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./BinaryTree */
              "./src/DataStructures/BinaryTree.ts"
            );
            var _BinaryCharacterTree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./BinaryCharacterTree */
              "./src/DataStructures/BinaryCharacterTree.ts"
            );
            var _BinaryTypeTree__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./BinaryTypeTree */
              "./src/DataStructures/BinaryTypeTree.ts"
            );
            var _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../Services/CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class ConceptsData {
              constructor() {
                this.name = "conceptsArray";
              }
              static CheckContains(concept) {
                var contains = false;
                for (var i2 = 0; i2 < this.conceptsArray.length; i2++) {
                  if (this.conceptsArray[i2].id == concept.id) {
                    contains = true;
                  }
                }
                return contains;
              }
              static AddNpc(id) {
                if (!this.NPC.includes(id)) {
                  if (this.NPC.length > 10) {
                    this.NPC = [];
                  }
                  this.NPC.push(id);
                }
              }
              static GetNpc(id) {
                if (this.NPC.includes(id)) {
                  return true;
                }
                return false;
              }
              static AddConceptToStorage(concept) {
                if (concept.id > 0) {
                  (0, _Database_indexeddb__WEBPACK_IMPORTED_MODULE_0__.UpdateToDatabase)("concept", concept);
                }
              }
              static GetConceptBulkData(ids, connectionArray, remainingIds) {
                return __awaiter(this, void 0, void 0, function* () {
                  yield _BinaryTree__WEBPACK_IMPORTED_MODULE_1__.BinaryTree.getConceptListFromIds(ids, connectionArray, remainingIds);
                });
              }
              static AddConcept(concept) {
                if (concept.id > 0) {
                  console.log("this is the added concept", concept);
                  _BinaryTree__WEBPACK_IMPORTED_MODULE_1__.BinaryTree.addConceptToTree(concept);
                  _BinaryTypeTree__WEBPACK_IMPORTED_MODULE_3__.BinaryTypeTree.addConceptToTree(concept);
                }
              }
              static AddConceptToMemory(concept) {
                if (concept.id > 0) {
                  _BinaryTree__WEBPACK_IMPORTED_MODULE_1__.BinaryTree.addConceptToTree(concept);
                  _BinaryTypeTree__WEBPACK_IMPORTED_MODULE_3__.BinaryTypeTree.addConceptToTree(concept);
                }
              }
              static AddConceptTemporary(concept) {
                var contains = this.CheckContains(concept);
                this.conceptDictionary[concept.id] = concept;
                if (contains) {
                  this.RemoveConcept(concept);
                }
                this.conceptsArray.push(concept);
              }
              static RemoveConcept(concept) {
                for (var i2 = 0; i2 < this.conceptsArray.length; i2++) {
                  if (this.conceptsArray[i2].id == concept.id) {
                    this.conceptsArray.splice(i2, 1);
                  }
                }
                (0, _Database_indexeddb__WEBPACK_IMPORTED_MODULE_0__.removeFromDatabase)("concept", concept.id);
              }
              static GetConcept(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  var myConcept = (0, _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_4__.CreateDefaultConcept)();
                  var node = yield _BinaryTree__WEBPACK_IMPORTED_MODULE_1__.BinaryTree.getNodeFromTree(id);
                  if (node === null || node === void 0 ? void 0 : node.value) {
                    var returnedConcept = node.value;
                    if (returnedConcept) {
                      myConcept = returnedConcept;
                    }
                  }
                  return myConcept;
                });
              }
              static GetConceptByCharacter(characterValue) {
                return __awaiter(this, void 0, void 0, function* () {
                  var concept = (0, _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_4__.CreateDefaultConcept)();
                  var Node = _BinaryCharacterTree__WEBPACK_IMPORTED_MODULE_2__.BinaryCharacterTree.getNodeFromTree(characterValue);
                  if (Node) {
                    concept = Node.value;
                  }
                  return concept;
                });
              }
              static GetConceptByCharacterUpdated(characterValue) {
                return __awaiter(this, void 0, void 0, function* () {
                  var concept = (0, _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_4__.CreateDefaultConcept)();
                  var Node = _BinaryCharacterTree__WEBPACK_IMPORTED_MODULE_2__.BinaryCharacterTree.getNodeFromTree(characterValue);
                  if (Node) {
                    concept = Node.value;
                  }
                  return concept;
                });
              }
              static GetConceptByCharacterAndTypeLocal(character_value, typeId) {
                return __awaiter(this, void 0, void 0, function* () {
                  var concept = (0, _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_4__.CreateDefaultConcept)();
                  concept = yield _BinaryTypeTree__WEBPACK_IMPORTED_MODULE_3__.BinaryTypeTree.getTypeVariantsWithCharacterValueNew(character_value, typeId);
                  return concept;
                });
              }
              static GetConceptByCharacterAndCategoryLocal(character_value, categoryId) {
                return __awaiter(this, void 0, void 0, function* () {
                  var concept = (0, _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_4__.CreateDefaultConcept)();
                  var Node = yield _BinaryCharacterTree__WEBPACK_IMPORTED_MODULE_2__.BinaryCharacterTree.getCharacterAndCategoryFromTree(character_value, categoryId);
                  if (Node) {
                    concept = Node.value;
                  }
                  return concept;
                });
              }
              static GetConceptsByTypeId(typeId) {
                var myConcept;
                let ConceptList = [];
                myConcept = null;
                for (var i2 = 0; i2 < this.conceptsArray.length; i2++) {
                  if (this.conceptsArray[i2].typeId == typeId) {
                    ConceptList.push(this.conceptsArray[i2]);
                  }
                }
                return ConceptList;
              }
              static GetConceptsByTypeIdAndUser(typeId, userId) {
                return __awaiter(this, void 0, void 0, function* () {
                  let ConceptList = [];
                  ConceptList = yield _BinaryTypeTree__WEBPACK_IMPORTED_MODULE_3__.BinaryTypeTree.getTypeVariantsFromTreeWithUserIdNew(typeId, userId);
                  return ConceptList;
                });
              }
              static GetBinaryCharacterTree() {
                return _BinaryCharacterTree__WEBPACK_IMPORTED_MODULE_2__.BinaryCharacterTree.characterRoot;
              }
              getName() {
                return this.name;
              }
            }
            ConceptsData.conceptsArray = [];
            ConceptsData.NPC = [];
            ConceptsData.conceptDictionary = [];
          }
        ),
        /***/
        "./src/DataStructures/Connection.ts": (
          /*!******************************************!*\
            !*** ./src/DataStructures/Connection.ts ***!
            \******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              Connection: () => (
                /* binding */
                Connection
              )
              /* harmony export */
            });
            var _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Services/CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var _BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            class Connection {
              constructor(id = 0, ofTheConceptId, toTheConceptId, userId, typeId, orderId, accessId) {
                this.count = 0;
                this.isTemp = false;
                this.toUpdate = false;
                this.applicationId = _BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.BASE_RANDOMIZER;
                this.type = (0, _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_0__.CreateDefaultConcept)();
                this.ofConcept = (0, _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_0__.CreateDefaultConcept)();
                this.toConcept = (0, _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_0__.CreateDefaultConcept)();
                this.id = id;
                this.ofTheConceptId = ofTheConceptId;
                this.toTheConceptId = toTheConceptId;
                this.userId = userId;
                this.typeId = typeId;
                this.ghostId = id;
                this.orderId = orderId;
                this.accessId = accessId;
                this.entryTimeStamp = /* @__PURE__ */ new Date();
                this.terminationDateTime = /* @__PURE__ */ new Date();
                this.localSyncTime = /* @__PURE__ */ new Date();
                this.typeCharacter = "";
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/ConnectionBinaryTree/ConnectionBinaryTree.ts": (
          /*!*************************************************************************!*\
            !*** ./src/DataStructures/ConnectionBinaryTree/ConnectionBinaryTree.ts ***!
            \*************************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              ConnectionBinaryTree: () => (
                /* binding */
                ConnectionBinaryTree
              )
              /* harmony export */
            });
            var _IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var _ConnectionNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./ConnectionNode */
              "./src/DataStructures/ConnectionBinaryTree/ConnectionNode.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class ConnectionBinaryTree {
              static addNodeToTree(node) {
                if (this.connectionroot == null) {
                  this.connectionroot = node;
                  return this.connectionroot;
                } else {
                  this.connectionroot = this.connectionroot.addNode(node, this.connectionroot, this.connectionroot.height);
                }
              }
              static addConnectionToTree(connection) {
                let node = new _ConnectionNode__WEBPACK_IMPORTED_MODULE_1__.ConnectionNode(connection.id, connection, null, null);
                this.addNodeToTree(node);
              }
              static traverse() {
                var _a;
                return (_a = this.connectionroot) === null || _a === void 0 ? void 0 : _a.traverse(this.connectionroot);
              }
              static waitForDataToLoad() {
                return __awaiter(this, void 0, void 0, function* () {
                  return new Promise((resolve, reject) => {
                    this.checkFlag(resolve);
                    setTimeout(() => {
                      reject("not");
                    }, 25e3);
                  });
                });
              }
              static checkFlag(resolve) {
                if (_IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__.IdentifierFlags.isConnectionLoaded) {
                  return resolve("done");
                } else {
                  setTimeout(ConnectionBinaryTree.checkFlag, 1e3, resolve);
                }
              }
              static removeNodeFromTree(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.connectionroot) {
                    this.connectionroot = this.connectionroot.removeNode(this.connectionroot, id);
                  }
                });
              }
              static getNodeFromTree(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.connectionroot) {
                    let Node = this.connectionroot.getFromNode(id, this.connectionroot);
                    return Node;
                  }
                  return this.connectionroot;
                });
              }
              static getConnectionListFromIds(ids, connectionArray, remainingIds) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.connectionroot) {
                    this.connectionroot.checkIfIdsInNode(this.connectionroot, ids, connectionArray, remainingIds);
                  }
                });
              }
            }
            ConnectionBinaryTree.connectionroot = null;
          }
        ),
        /***/
        "./src/DataStructures/ConnectionBinaryTree/ConnectionNode.ts": (
          /*!*******************************************************************!*\
            !*** ./src/DataStructures/ConnectionBinaryTree/ConnectionNode.ts ***!
            \*******************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              ConnectionNode: () => (
                /* binding */
                ConnectionNode
              )
              /* harmony export */
            });
            class ConnectionNode {
              constructor(key, value, leftNode, rightNode) {
                this.variants = [];
                this.height = 1;
                this.key = key;
                this.value = value;
                this.leftNode = leftNode;
                this.rightNode = rightNode;
                this.currentNode = null;
              }
              addCurrentNode(passedNode, node) {
                if (node == null) {
                  node = passedNode;
                  return node;
                }
                if (passedNode.value.typeId != node.value.typeId) {
                  node.currentNode = this.addCurrentNode(passedNode, node.currentNode);
                }
                return node;
              }
              addCurrentNodeType(passedNode, node) {
                if (node == null) {
                  node = passedNode;
                  return node;
                }
                let contains = false;
                if (passedNode.value.id == node.value.id) {
                  contains = true;
                }
                for (let i2 = 0; i2 < node.variants.length; i2++) {
                  if (node.variants[i2].value.id == passedNode.value.id) {
                    contains = true;
                  }
                }
                if (!contains) {
                  node.variants.push(passedNode);
                }
                return node;
              }
              addNode(passedNode, node, height) {
                if (node == null) {
                  node = passedNode;
                  return node;
                }
                let LeftNode = node.leftNode;
                let RightNode = node.rightNode;
                if (node.key > passedNode.key) {
                  node.leftNode = this.addNode(passedNode, LeftNode, height);
                } else if (node.key < passedNode.key) {
                  node.rightNode = this.addNode(passedNode, RightNode, height);
                } else {
                  return node;
                }
                node.height = 1 + Math.max(this.getHeight(node.leftNode), this.getHeight(node.rightNode));
                let balancingFactor = this.getBalanceFactor(node);
                if (balancingFactor > 1) {
                  if (node.leftNode) {
                    if (passedNode.key < node.leftNode.key) {
                      return this.rightRotate(node);
                    } else if (passedNode.key > node.leftNode.key) {
                      node.leftNode = this.leftRotate(node.leftNode);
                      return this.rightRotate(node);
                    }
                  }
                }
                if (balancingFactor < -1) {
                  if (node.rightNode) {
                    if (passedNode.key > node.rightNode.key) {
                      return this.leftRotate(node);
                    } else if (passedNode.key < node.rightNode.key) {
                      node.rightNode = this.rightRotate(node.rightNode);
                      return this.leftRotate(node);
                    }
                  }
                }
                return node;
              }
              addTypeNode(passedNode, node, height) {
                let debugFlag = false;
                if (passedNode.value.typeId != 0) {
                  if (node == null) {
                    if (debugFlag) {
                      console.log("equal here", node);
                    }
                    node = passedNode;
                    return node;
                  }
                  let LeftNode = node.leftNode;
                  let RightNode = node.rightNode;
                  if (node.key > passedNode.key) {
                    if (debugFlag) {
                      console.log("left  here", node);
                    }
                    node.leftNode = this.addTypeNode(passedNode, LeftNode, height);
                  } else if (node.key < passedNode.key) {
                    if (debugFlag) {
                      console.log("right here", node, RightNode);
                    }
                    node.rightNode = this.addTypeNode(passedNode, RightNode, height);
                  } else {
                    if (debugFlag) {
                      console.log("else here", node, passedNode);
                    }
                    if (node.key == passedNode.key && node.key != 0) {
                      node.addCurrentNodeType(passedNode, node);
                    }
                    return node;
                  }
                  node.height = 1 + Math.max(this.getHeight(node.leftNode), this.getHeight(node.rightNode));
                  if (debugFlag) {
                    console.log("height here", node.height);
                  }
                  let balancingFactor = this.getBalanceFactor(node);
                  if (debugFlag) {
                    console.log("balancingFactor here", balancingFactor);
                  }
                  if (balancingFactor > 1) {
                    if (node.leftNode) {
                      if (passedNode.key < node.leftNode.key) {
                        let returner = this.rightRotate(node);
                        if (debugFlag) {
                          console.log("returning here 1 ", returner);
                        }
                        return returner;
                      } else if (passedNode.key > node.leftNode.key) {
                        node.leftNode = this.leftRotate(node.leftNode);
                        let returner = this.rightRotate(node);
                        if (debugFlag) {
                          console.log("returning here 2 ", returner);
                        }
                        return returner;
                      }
                    }
                  }
                  if (balancingFactor < -1) {
                    if (node.rightNode) {
                      if (passedNode.key > node.rightNode.key) {
                        let returner = this.leftRotate(node);
                        if (debugFlag) {
                          console.log("returning here 3 ", returner);
                        }
                        return returner;
                      } else if (passedNode.key < node.rightNode.key) {
                        node.rightNode = this.rightRotate(node.rightNode);
                        let returner = this.leftRotate(node);
                        if (debugFlag) {
                          console.log("returning here4 ", returner, node);
                        }
                        return returner;
                      }
                    }
                  }
                } else {
                  if (debugFlag) {
                    console.log("what here", node);
                  }
                }
                if (debugFlag) {
                  console.log("returning here 6", node);
                }
                return node;
              }
              rightRotate(y) {
                if (y) {
                  let x = y.leftNode;
                  if (x) {
                    let T2 = x.rightNode;
                    y.leftNode = T2;
                    x.rightNode = y;
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(y.rightNode)) + 1;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode)) + 1;
                    return x;
                  }
                }
                return y;
              }
              leftRotate(x) {
                if (x) {
                  let y = x.rightNode;
                  if (y) {
                    let T2 = y.leftNode;
                    y.leftNode = x;
                    x.rightNode = T2;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode) + 1);
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(x.rightNode) + 1);
                    return y;
                  }
                }
                return x;
              }
              getHeight(node) {
                if (node) {
                  return node.height;
                }
                return 0;
              }
              getBalanceFactor(N) {
                if (N == null) {
                  return 0;
                }
                return this.getHeight(N.leftNode) - this.getHeight(N.rightNode);
              }
              getFromNode(id, node) {
                if (node) {
                  if (id == node.key) {
                    if (node.value.count) {
                      node.value.count++;
                    } else {
                      node.value.count = 1;
                    }
                    return node;
                  } else if (id < node.key) {
                    return this.getFromNode(id, node.leftNode);
                  } else if (id > node.key) {
                    return this.getFromNode(id, node.rightNode);
                  }
                  return node;
                }
                return node;
              }
              getCharacterFromNode(value, node) {
                if (node) {
                  if (value == node.key) {
                    return node;
                  } else if (value < node.key) {
                    return this.getCharacterFromNode(value, node.leftNode);
                  } else if (value > node.key) {
                    return this.getCharacterFromNode(value, node.rightNode);
                  }
                  return node;
                }
                return node;
              }
              checkIfIdsInNode(node, ids, connectionArray, remainingIds) {
                if (node) {
                  if (ids.includes(node.key)) {
                    connectionArray.push(node.value);
                    let index = ids.indexOf(node.key);
                    ids.splice(index, 1);
                  }
                  if (node.leftNode) {
                    this.checkIfIdsInNode(node.leftNode, ids, connectionArray, remainingIds);
                  }
                  if (node.rightNode) {
                    this.checkIfIdsInNode(node.rightNode, ids, connectionArray, remainingIds);
                  }
                }
              }
              traverse(node) {
                let count = 0;
                if (node) {
                  count = count + 1;
                  if (node === null || node === void 0 ? void 0 : node.leftNode) {
                    count += this.traverse(node.leftNode);
                  }
                  if (node.rightNode) {
                    count += this.traverse(node.rightNode);
                  }
                }
                return count;
              }
              removeNode(passedNode, id) {
                if (passedNode == null) {
                  return passedNode;
                }
                if (passedNode.key > id) {
                  passedNode.leftNode = this.removeNode(passedNode.leftNode, id);
                  return passedNode;
                } else if (passedNode.key < id) {
                  passedNode.rightNode = this.removeNode(passedNode.rightNode, id);
                  return passedNode;
                }
                let event = new Event(`${passedNode.value.ofTheConceptId}`);
                dispatchEvent(event);
                if (passedNode.leftNode == null) {
                  let temp = passedNode.rightNode;
                  passedNode = null;
                  return temp;
                } else if (passedNode.rightNode == null) {
                  let temp = passedNode.leftNode;
                  passedNode = null;
                  return temp;
                } else {
                  let immediateSuccessor = this.inOrderSuccessor(passedNode.rightNode);
                  passedNode.value = immediateSuccessor.value;
                  passedNode.key = immediateSuccessor.key;
                  passedNode.variants = immediateSuccessor.variants;
                  passedNode.currentNode = immediateSuccessor.currentNode;
                  passedNode.rightNode = this.removeNode(passedNode.rightNode, immediateSuccessor.key);
                  return passedNode;
                }
              }
              removeNodeWithVariants(passedNode, typeIdentifier, conceptId) {
                if (passedNode == null) {
                  return passedNode;
                }
                if (passedNode.key > typeIdentifier) {
                  passedNode.leftNode = this.removeNodeWithVariants(passedNode.leftNode, typeIdentifier, conceptId);
                  return passedNode;
                } else if (passedNode.key < typeIdentifier) {
                  passedNode.rightNode = this.removeNodeWithVariants(passedNode.rightNode, typeIdentifier, conceptId);
                  return passedNode;
                }
                if (passedNode.variants.length > 0) {
                  if (passedNode.value.id == conceptId) {
                    let newNode = passedNode.variants[0];
                    if (newNode) {
                      passedNode.value = newNode.value;
                      passedNode.key = newNode.key;
                      passedNode.currentNode = newNode.currentNode;
                      passedNode.variants.splice(0, 1);
                      return passedNode;
                    }
                  } else {
                    for (let i2 = 0; i2 < passedNode.variants.length; i2++) {
                      if (conceptId == passedNode.variants[i2].value.id) {
                        passedNode.variants.splice(i2, 1);
                        return passedNode;
                      }
                    }
                  }
                }
                if (passedNode.leftNode == null) {
                  let temp = passedNode.rightNode;
                  passedNode = null;
                  return temp;
                } else if (passedNode.rightNode == null) {
                  let temp = passedNode.leftNode;
                  passedNode = null;
                  return temp;
                } else {
                  let immediateSuccessor = this.inOrderSuccessor(passedNode.rightNode);
                  passedNode.value = immediateSuccessor.value;
                  passedNode.key = immediateSuccessor.key;
                  passedNode.variants = immediateSuccessor.variants;
                  passedNode.currentNode = immediateSuccessor.currentNode;
                  passedNode.rightNode = this.removeNodeWithVariants(passedNode.rightNode, immediateSuccessor.key, conceptId);
                  return passedNode;
                }
              }
              inOrderSuccessor(root) {
                while (root.leftNode != null) {
                  root = root.leftNode;
                }
                return root;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/ConnectionBinaryTree/ConnectionOfNode.ts": (
          /*!*********************************************************************!*\
            !*** ./src/DataStructures/ConnectionBinaryTree/ConnectionOfNode.ts ***!
            \*********************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              ConnectionOfNode: () => (
                /* binding */
                ConnectionOfNode
              )
              /* harmony export */
            });
            var _NodePrimitive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./NodePrimitive */
              "./src/DataStructures/ConnectionBinaryTree/NodePrimitive.ts"
            );
            class ConnectionOfNode extends _NodePrimitive__WEBPACK_IMPORTED_MODULE_0__.NodePrimitive {
              constructor(key, value, leftNode, rightNode) {
                super(key, value, leftNode, rightNode);
                this.key = "";
                this.value = [];
                this.height = 1;
                this.key = key;
                this.value = value;
                this.leftNode = leftNode;
                this.rightNode = rightNode;
              }
              addNode(passedNode, node, height) {
                if (node == null) {
                  node = passedNode;
                  return node;
                }
                let LeftNode = node.leftNode;
                let RightNode = node.rightNode;
                if (node.key > passedNode.key) {
                  node.leftNode = this.addNode(passedNode, LeftNode, height);
                } else if (node.key < passedNode.key) {
                  node.rightNode = this.addNode(passedNode, RightNode, height);
                } else {
                  return node;
                }
                node.height = 1 + Math.max(this.getHeight(node.leftNode), this.getHeight(node.rightNode));
                let balancingFactor = this.getBalanceFactor(node);
                if (balancingFactor > 1) {
                  if (node.leftNode) {
                    if (passedNode.key < node.leftNode.key) {
                      let returner = this.rightRotate(node);
                      return returner;
                    } else if (passedNode.key > node.leftNode.key) {
                      node.leftNode = this.leftRotate(node.leftNode);
                      let returner = this.rightRotate(node);
                      return returner;
                    }
                  }
                }
                if (balancingFactor < -1) {
                  if (node.rightNode) {
                    if (passedNode.key > node.rightNode.key) {
                      let returner = this.leftRotate(node);
                      return returner;
                    } else if (passedNode.key < node.rightNode.key) {
                      node.rightNode = this.rightRotate(node.rightNode);
                      let returner = this.leftRotate(node);
                      return returner;
                    }
                  }
                }
                return node;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/ConnectionBinaryTree/ConnectionOfTheTree.ts": (
          /*!************************************************************************!*\
            !*** ./src/DataStructures/ConnectionBinaryTree/ConnectionOfTheTree.ts ***!
            \************************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              ConnectionOfTheTree: () => (
                /* binding */
                ConnectionOfTheTree
              )
              /* harmony export */
            });
            var _ConnectionOfNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./ConnectionOfNode */
              "./src/DataStructures/ConnectionBinaryTree/ConnectionOfNode.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class ConnectionOfTheTree {
              static CreateCompositionKey(ofTheConceptId, typeId) {
                return ofTheConceptId;
              }
              static GetConnectionByOfTheConceptAndTypeId(ofTheConceptId, typeId) {
                let key = this.CreateCompositionKey(ofTheConceptId, typeId);
                if (this.node) {
                  let existingNode = this.node.getFromNode(key, this.node);
                  if (existingNode) {
                    return existingNode.value;
                  }
                }
                return null;
              }
              /**
               * This function lets you add a connection by composite key with of the concept id and type id.
               * This function checks if the connection already exists and then updates in the case that it does not
               * If the connection of the concept id and type id combination is encountered first time then a node is created.
               * @param connection connection that needs to be added.
               */
              static addConnection(connection) {
                if (connection.id > 0) {
                  let key = this.CreateCompositionKey(connection.ofTheConceptId, connection.typeId);
                  if (this.node) {
                    let event = new Event(`${key}`);
                    dispatchEvent(event);
                    let existingNode = this.node.getFromNode(key, this.node);
                    if (existingNode) {
                      let connectionList = existingNode === null || existingNode === void 0 ? void 0 : existingNode.value;
                      if (connectionList.length == 0) {
                        existingNode.value = [];
                      }
                      if (!connectionList.includes(connection.id)) {
                        connectionList.push(connection.id);
                      }
                    } else {
                      let list = [];
                      list.push(connection.id);
                      let connectionNode = new _ConnectionOfNode__WEBPACK_IMPORTED_MODULE_0__.ConnectionOfNode(key, list, null, null);
                      this.addNodeToTree(connectionNode);
                    }
                  } else {
                    let list = [];
                    list.push(connection.id);
                    let connectionNode = new _ConnectionOfNode__WEBPACK_IMPORTED_MODULE_0__.ConnectionOfNode(key, list, null, null);
                    this.addNodeToTree(connectionNode);
                  }
                } else {
                  console.log("cannot insert key id with  n 0 to the connection tree", connection);
                }
              }
              /**
               * This is a function to add the connectionNode to the existing tree
               * @param connectionOfNode This is the node that needs to be added to the tree.
               * @returns ConnectionOfNode
               */
              static addNodeToTree(connectionOfNode) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.node == null) {
                    this.node = connectionOfNode;
                    return this.node;
                  } else {
                    this.node = this.node.addNode(connectionOfNode, this.node, this.node.height);
                  }
                  return this.node;
                });
              }
              static removeNodeFromTree(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.node) {
                    this.node = this.node.removeNode(this.node, id);
                  }
                });
              }
            }
            ConnectionOfTheTree.node = null;
          }
        ),
        /***/
        "./src/DataStructures/ConnectionBinaryTree/ConnectionTypeTree.ts": (
          /*!***********************************************************************!*\
            !*** ./src/DataStructures/ConnectionBinaryTree/ConnectionTypeTree.ts ***!
            \***********************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              ConnectionTypeTree: () => (
                /* binding */
                ConnectionTypeTree
              )
              /* harmony export */
            });
            var _IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var _ConnectionNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./ConnectionNode */
              "./src/DataStructures/ConnectionBinaryTree/ConnectionNode.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class ConnectionTypeTree {
              static addNodeToTree(node) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.connectionTypeRoot == null) {
                    this.connectionTypeRoot = node;
                    return this.connectionTypeRoot;
                  } else {
                    this.connectionTypeRoot = this.connectionTypeRoot.addTypeNode(node, this.connectionTypeRoot, this.connectionTypeRoot.height);
                  }
                  return this.connectionTypeRoot;
                });
              }
              static waitForDataToLoad() {
                return __awaiter(this, void 0, void 0, function* () {
                  return new Promise((resolve, reject) => {
                    this.checkFlag(resolve);
                    setTimeout(() => {
                      reject("not");
                    }, 25e3);
                  });
                });
              }
              static checkFlag(resolve) {
                if (_IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__.IdentifierFlags.isConnectionTypeLoaded) {
                  return resolve("done");
                } else {
                  setTimeout(ConnectionTypeTree.checkFlag, 1e3, resolve);
                }
              }
              static addConnectionToTree(connection) {
                if (connection.typeId != 0) {
                  let node = new _ConnectionNode__WEBPACK_IMPORTED_MODULE_1__.ConnectionNode(connection.typeId, connection, null, null);
                  this.addNodeToTree(node);
                }
              }
              static removeTypeConcept(typeId, id) {
                if (this.connectionTypeRoot) {
                  this.connectionTypeRoot = this.connectionTypeRoot.removeNodeWithVariants(this.connectionTypeRoot, typeId, id);
                }
              }
              static getNodeFromTree(id) {
                if (this.connectionTypeRoot) {
                  let Node = this.connectionTypeRoot.getFromNode(id, this.connectionTypeRoot);
                  return Node;
                }
                return this.connectionTypeRoot;
              }
              static getTypeVariantsFromTree(typeId) {
                return __awaiter(this, void 0, void 0, function* () {
                  let connection = [];
                  let Node = this.getNodeFromTree(typeId);
                  if (Node) {
                    connection.push(Node === null || Node === void 0 ? void 0 : Node.value);
                    for (let i2 = 0; i2 < Node.variants.length; i2++) {
                      connection.push(Node.variants[i2].value);
                    }
                    return connection;
                  }
                });
              }
              static getTypeVariantsFromTreeWithUserId(typeId, userId) {
                return __awaiter(this, void 0, void 0, function* () {
                  var concepts = [];
                  var Node = this.getNodeFromTree(typeId);
                  if (Node) {
                    if (Node.value.userId == userId) {
                      concepts.push(Node === null || Node === void 0 ? void 0 : Node.value);
                    }
                    for (let i2 = 0; i2 < Node.variants.length; i2++) {
                      if (Node.variants[i2].value.userId == userId) {
                        concepts.push(Node.variants[i2].value);
                      }
                    }
                  }
                  return concepts;
                });
              }
            }
            ConnectionTypeTree.connectionTypeRoot = null;
          }
        ),
        /***/
        "./src/DataStructures/ConnectionBinaryTree/NodePrimitive.ts": (
          /*!******************************************************************!*\
            !*** ./src/DataStructures/ConnectionBinaryTree/NodePrimitive.ts ***!
            \******************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              NodePrimitive: () => (
                /* binding */
                NodePrimitive
              )
              /* harmony export */
            });
            class NodePrimitive {
              constructor(key, value, leftNode, rightNode) {
                this.key = "";
                this.value = [];
                this.height = 1;
                this.key = key;
                this.value = value;
                this.leftNode = leftNode;
                this.rightNode = rightNode;
              }
              getFromNode(id, node) {
                if (node) {
                  if (id == node.key) {
                    return node;
                  } else if (id < node.key) {
                    return this.getFromNode(id, node.leftNode);
                  } else if (id > node.key) {
                    return this.getFromNode(id, node.rightNode);
                  }
                  return node;
                }
                return node;
              }
              rightRotate(y) {
                if (y) {
                  let x = y.leftNode;
                  if (x) {
                    let T2 = x.rightNode;
                    y.leftNode = T2;
                    x.rightNode = y;
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(y.rightNode)) + 1;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode)) + 1;
                    return x;
                  }
                }
                return y;
              }
              leftRotate(x) {
                if (x) {
                  let y = x.rightNode;
                  if (y) {
                    let T2 = y.leftNode;
                    y.leftNode = x;
                    x.rightNode = T2;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode) + 1);
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(x.rightNode) + 1);
                    return y;
                  }
                }
                return x;
              }
              getHeight(node) {
                if (node) {
                  return node.height;
                }
                return 0;
              }
              getBalanceFactor(N) {
                if (N == null) {
                  return 0;
                }
                return this.getHeight(N.leftNode) - this.getHeight(N.rightNode);
              }
              removeNode(passedNode, id) {
                if (passedNode == null) {
                  return passedNode;
                }
                if (passedNode.key > id) {
                  passedNode.leftNode = this.removeNode(passedNode.leftNode, id);
                  return passedNode;
                } else if (passedNode.key < id) {
                  passedNode.rightNode = this.removeNode(passedNode.rightNode, id);
                  return passedNode;
                }
                if (passedNode.leftNode == null) {
                  let temp = passedNode.rightNode;
                  passedNode = null;
                  return temp;
                } else if (passedNode.rightNode == null) {
                  let temp = passedNode.leftNode;
                  passedNode = null;
                  return temp;
                } else {
                  let immediateSuccessor = this.inOrderSuccessor(passedNode.rightNode);
                  passedNode.value = immediateSuccessor.value;
                  passedNode.key = immediateSuccessor.key;
                  passedNode.variants = immediateSuccessor.variants;
                  passedNode.currentNode = immediateSuccessor.currentNode;
                  passedNode.rightNode = this.removeNode(passedNode.rightNode, immediateSuccessor.key);
                  return passedNode;
                }
              }
              inOrderSuccessor(root) {
                while (root.leftNode != null) {
                  root = root.leftNode;
                }
                return root;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/ConnectionData.ts": (
          /*!**********************************************!*\
            !*** ./src/DataStructures/ConnectionData.ts ***!
            \**********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              ConnectionData: () => (
                /* binding */
                ConnectionData
              )
              /* harmony export */
            });
            var _Database_indexeddb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Database/indexeddb */
              "./src/Database/indexeddb.ts"
            );
            var _Connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./Connection */
              "./src/DataStructures/Connection.ts"
            );
            var _ConnectionBinaryTree_ConnectionBinaryTree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./ConnectionBinaryTree/ConnectionBinaryTree */
              "./src/DataStructures/ConnectionBinaryTree/ConnectionBinaryTree.ts"
            );
            var _ConnectionBinaryTree_ConnectionOfTheTree__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./ConnectionBinaryTree/ConnectionOfTheTree */
              "./src/DataStructures/ConnectionBinaryTree/ConnectionOfTheTree.ts"
            );
            var _ConnectionBinaryTree_ConnectionTypeTree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ./ConnectionBinaryTree/ConnectionTypeTree */
              "./src/DataStructures/ConnectionBinaryTree/ConnectionTypeTree.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class ConnectionData {
              constructor() {
                this.name = "Connection Array";
              }
              static CheckContains(connection) {
                let contains = false;
                for (let i2 = 0; i2 < this.connectionArray.length; i2++) {
                  if (this.connectionArray[i2].id == connection.id) {
                    contains = true;
                  }
                }
                return contains;
              }
              static AddConnectionToStorage(connection) {
                (0, _Database_indexeddb__WEBPACK_IMPORTED_MODULE_0__.UpdateToDatabase)("connection", connection);
              }
              static AddConnection(connection) {
                _ConnectionBinaryTree_ConnectionBinaryTree__WEBPACK_IMPORTED_MODULE_2__.ConnectionBinaryTree.addConnectionToTree(connection);
                _ConnectionBinaryTree_ConnectionTypeTree__WEBPACK_IMPORTED_MODULE_4__.ConnectionTypeTree.addConnectionToTree(connection);
                _ConnectionBinaryTree_ConnectionOfTheTree__WEBPACK_IMPORTED_MODULE_3__.ConnectionOfTheTree.addConnection(connection);
              }
              static AddConnectionToMemory(connection) {
                if (!connection.isTemp) {
                  _ConnectionBinaryTree_ConnectionBinaryTree__WEBPACK_IMPORTED_MODULE_2__.ConnectionBinaryTree.addConnectionToTree(connection);
                  _ConnectionBinaryTree_ConnectionTypeTree__WEBPACK_IMPORTED_MODULE_4__.ConnectionTypeTree.addConnectionToTree(connection);
                  _ConnectionBinaryTree_ConnectionOfTheTree__WEBPACK_IMPORTED_MODULE_3__.ConnectionOfTheTree.addConnection(connection);
                }
              }
              static AddToDictionary(connection) {
                this.connectionDictionary[connection.id] = connection;
              }
              static RemoveConnection(connection) {
                if (connection.id != 0) {
                  (0, _Database_indexeddb__WEBPACK_IMPORTED_MODULE_0__.removeFromDatabase)("connection", connection.id);
                  _ConnectionBinaryTree_ConnectionBinaryTree__WEBPACK_IMPORTED_MODULE_2__.ConnectionBinaryTree.removeNodeFromTree(connection.id);
                  _ConnectionBinaryTree_ConnectionTypeTree__WEBPACK_IMPORTED_MODULE_4__.ConnectionTypeTree.removeTypeConcept(connection.typeId, connection.id);
                  _ConnectionBinaryTree_ConnectionOfTheTree__WEBPACK_IMPORTED_MODULE_3__.ConnectionOfTheTree.removeNodeFromTree(connection.id);
                }
              }
              static GetConnectionTypeOfTree() {
                _ConnectionBinaryTree_ConnectionOfTheTree__WEBPACK_IMPORTED_MODULE_3__.ConnectionOfTheTree.node;
              }
              static GetConnectionByOfTheConceptAndType(ofTheConceptId, typeId) {
                let connections = _ConnectionBinaryTree_ConnectionOfTheTree__WEBPACK_IMPORTED_MODULE_3__.ConnectionOfTheTree.GetConnectionByOfTheConceptAndTypeId(ofTheConceptId, typeId);
                if (connections) {
                  return connections;
                }
                return [];
              }
              static GetConnectionTree() {
                return _ConnectionBinaryTree_ConnectionBinaryTree__WEBPACK_IMPORTED_MODULE_2__.ConnectionBinaryTree.connectionroot;
              }
              static GetConnectionTypeTree() {
                return _ConnectionBinaryTree_ConnectionTypeTree__WEBPACK_IMPORTED_MODULE_4__.ConnectionTypeTree.connectionTypeRoot;
              }
              static GetConnectionBulkData(ids, connectionArray, remainingIds) {
                return __awaiter(this, void 0, void 0, function* () {
                  yield _ConnectionBinaryTree_ConnectionBinaryTree__WEBPACK_IMPORTED_MODULE_2__.ConnectionBinaryTree.getConnectionListFromIds(ids, connectionArray, remainingIds);
                });
              }
              static GetConnection(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  let myConnection = new _Connection__WEBPACK_IMPORTED_MODULE_1__.Connection(0, 0, 0, 0, 0, 0, 0);
                  let node = yield _ConnectionBinaryTree_ConnectionBinaryTree__WEBPACK_IMPORTED_MODULE_2__.ConnectionBinaryTree.getNodeFromTree(id);
                  if (node === null || node === void 0 ? void 0 : node.value) {
                    let returnedConcept = node.value;
                    if (returnedConcept) {
                      myConnection = returnedConcept;
                    }
                  }
                  return myConnection;
                });
              }
              static GetConnectionsOfCompositionLocal(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  let connections = [];
                  let node = yield _ConnectionBinaryTree_ConnectionTypeTree__WEBPACK_IMPORTED_MODULE_4__.ConnectionTypeTree.getNodeFromTree(id);
                  if (node === null || node === void 0 ? void 0 : node.value) {
                    let returnedConnection = node.value;
                    if (returnedConnection) {
                      let myConnection = returnedConnection;
                      connections.push(myConnection);
                      for (let i2 = 0; i2 < node.variants.length; i2++) {
                        connections.push(node.variants[i2].value);
                      }
                    }
                  }
                  return connections;
                });
              }
              static GetConnectionsOfConcept(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  let connectionIds = [];
                  let connections = [];
                  connectionIds = ConnectionData.GetConnectionByOfTheConceptAndType(id, id);
                  for (let i2 = 0; i2 < connectionIds.length; i2++) {
                    let conn = yield _ConnectionBinaryTree_ConnectionBinaryTree__WEBPACK_IMPORTED_MODULE_2__.ConnectionBinaryTree.getNodeFromTree(connectionIds[i2]);
                    if (conn) {
                      connections.push(conn.value);
                    }
                  }
                  return connections;
                });
              }
              getName() {
                return this.name;
              }
            }
            ConnectionData.connectionArray = [];
            ConnectionData.connectionDictionary = [];
          }
        ),
        /***/
        "./src/DataStructures/FilterSearch.ts": (
          /*!********************************************!*\
            !*** ./src/DataStructures/FilterSearch.ts ***!
            \********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              FilterSearch: () => (
                /* binding */
                FilterSearch
              )
              /* harmony export */
            });
            class FilterSearch {
              constructor() {
                this.type = "";
                this.search = "";
                this.logicoperator = "=";
                this.index = 0;
                this.composition = true;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/IdentifierFlags.ts": (
          /*!***********************************************!*\
            !*** ./src/DataStructures/IdentifierFlags.ts ***!
            \***********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              IdentifierFlags: () => (
                /* binding */
                IdentifierFlags
              )
              /* harmony export */
            });
            class IdentifierFlags {
            }
            IdentifierFlags.isTypeLoaded = false;
            IdentifierFlags.isCharacterLoaded = false;
            IdentifierFlags.isDataLoaded = false;
            IdentifierFlags.isLocalDataLoaded = false;
            IdentifierFlags.isLocalCharacterLoaded = false;
            IdentifierFlags.isLocalTypeLoaded = false;
            IdentifierFlags.isConnectionLoaded = false;
            IdentifierFlags.isConnectionTypeLoaded = false;
            IdentifierFlags.isLocalConnectionLoaded = false;
          }
        ),
        /***/
        "./src/DataStructures/Local/LConcept.ts": (
          /*!**********************************************!*\
            !*** ./src/DataStructures/Local/LConcept.ts ***!
            \**********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              LConcept: () => (
                /* binding */
                LConcept
              )
              /* harmony export */
            });
            var _BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            class LConcept {
              constructor(id, userId, typeId, categoryId, accessId, characterValue, typeCharacter, isNew = false, entryTimeStamp, updatedTimeStamp, referentId) {
                this.structureType = "lconcept";
                this.isComposition = false;
                this.isTemp = false;
                this.isSynced = false;
                this.applicationId = _BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.BASE_RANDOMIZER;
                this.id = id;
                this.userId = userId;
                this.typeId = typeId;
                this.ghostId = id;
                this.categoryId = categoryId;
                this.characterValue = characterValue;
                this.accessId = accessId;
                this.type = null;
                this.isNew = isNew;
                this.typeCharacter = typeCharacter;
                this.entryTimeStamp = entryTimeStamp;
                this.updatedTimeStamp = updatedTimeStamp;
                this.isSynced = false;
                this.referentId = referentId;
              }
              getType() {
                console.log(this.typeId);
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/Local/LConnection.ts": (
          /*!*************************************************!*\
            !*** ./src/DataStructures/Local/LConnection.ts ***!
            \*************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              LConnection: () => (
                /* binding */
                LConnection
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var _BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            class LConnection {
              constructor(id, ofTheConceptId, toTheConceptId, typeId, orderId, accessId) {
                this.isTemp = false;
                this.applicationId = _BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.BASE_RANDOMIZER;
                this.type = (0, _app__WEBPACK_IMPORTED_MODULE_0__.CreateDefaultConcept)();
                this.id = id;
                this.ofTheConceptId = ofTheConceptId;
                this.toTheConceptId = toTheConceptId;
                this.typeId = typeId;
                this.ghostId = id;
                this.orderId = orderId;
                this.typeCharacter = "";
                this.accessId = accessId;
                this.typeCharacter = "";
                this.entryTimeStamp = /* @__PURE__ */ new Date();
                this.terminationDateTime = /* @__PURE__ */ new Date();
                this.localSyncTime = /* @__PURE__ */ new Date();
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/Local/LNode.ts": (
          /*!*******************************************!*\
            !*** ./src/DataStructures/Local/LNode.ts ***!
            \*******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              LNode: () => (
                /* binding */
                LNode
              )
              /* harmony export */
            });
            class LNode {
              constructor(key, value, leftNode, rightNode) {
                this.variants = [];
                this.height = 1;
                this.key = key;
                this.value = value;
                this.leftNode = leftNode;
                this.rightNode = rightNode;
                this.currentNode = null;
              }
              addCurrentNode(passedNode, node) {
                if (node == null) {
                  node = passedNode;
                  return node;
                }
                if (passedNode.value.typeId != node.value.typeId) {
                  node.currentNode = this.addCurrentNode(passedNode, node.currentNode);
                }
                return node;
              }
              addCurrentNodeType(passedNode, node) {
                if (node == null) {
                  node = passedNode;
                  return node;
                }
                var contains = false;
                for (let i2 = 0; i2 < node.variants.length; i2++) {
                  if (node.variants[i2].value.id == passedNode.value.id) {
                    contains = true;
                  }
                }
                if (!contains) {
                  node.variants.push(passedNode);
                }
                return node;
              }
              addNode(passedNode, node, height) {
                if (node == null) {
                  node = passedNode;
                  return node;
                }
                var LeftNode = node.leftNode;
                var RightNode = node.rightNode;
                if (node.key > passedNode.key) {
                  node.leftNode = this.addNode(passedNode, LeftNode, height);
                } else if (node.key < passedNode.key) {
                  node.rightNode = this.addNode(passedNode, RightNode, height);
                } else {
                  return node;
                }
                node.height = 1 + Math.max(this.getHeight(node.leftNode), this.getHeight(node.rightNode));
                let balancingFactor = this.getBalanceFactor(node);
                if (balancingFactor > 1) {
                  if (node.leftNode) {
                    if (passedNode.key < node.leftNode.key) {
                      return this.rightRotate(node);
                    } else if (passedNode.key > node.leftNode.key) {
                      node.leftNode = this.leftRotate(node.leftNode);
                      return this.rightRotate(node);
                    }
                  }
                }
                if (balancingFactor < -1) {
                  if (node.rightNode) {
                    if (passedNode.key > node.rightNode.key) {
                      return this.leftRotate(node);
                    } else if (passedNode.key < node.rightNode.key) {
                      node.rightNode = this.rightRotate(node.rightNode);
                      return this.leftRotate(node);
                    }
                  }
                }
                return node;
              }
              addCharacterNode(passedNode, node, height) {
                var debugFlag = false;
                if (passedNode.value.characterValue != "") {
                  if (node == null) {
                    if (debugFlag) {
                      console.log("equal here", node);
                    }
                    node = passedNode;
                    return node;
                  }
                  var LeftNode = node.leftNode;
                  var RightNode = node.rightNode;
                  if (node.key > passedNode.key) {
                    if (debugFlag) {
                      console.log("left  here", node);
                    }
                    node.leftNode = this.addCharacterNode(passedNode, LeftNode, height);
                  } else if (node.key < passedNode.key) {
                    if (debugFlag) {
                      console.log("right here", node, RightNode);
                    }
                    node.rightNode = this.addCharacterNode(passedNode, RightNode, height);
                  } else {
                    if (debugFlag) {
                      console.log("else here", node, passedNode);
                    }
                    if (node.key == passedNode.key && node.key != "" && node.value.id != passedNode.value.id) {
                      node.addCurrentNodeType(passedNode, node);
                    }
                    return node;
                  }
                  node.height = 1 + Math.max(this.getHeight(node.leftNode), this.getHeight(node.rightNode));
                  if (debugFlag) {
                    console.log("height here", node.height);
                  }
                  let balancingFactor = this.getBalanceFactor(node);
                  if (debugFlag) {
                    console.log("balancingFactor here", balancingFactor);
                  }
                  if (balancingFactor > 1) {
                    if (node.leftNode) {
                      if (passedNode.key < node.leftNode.key) {
                        var returner = this.rightRotate(node);
                        if (debugFlag) {
                          console.log("returning here 1 ", returner);
                        }
                        return returner;
                      } else if (passedNode.key > node.leftNode.key) {
                        node.leftNode = this.leftRotate(node.leftNode);
                        var returner = this.rightRotate(node);
                        if (debugFlag) {
                          console.log("returning here 2 ", returner);
                        }
                        return returner;
                      }
                    }
                  }
                  if (balancingFactor < -1) {
                    if (node.rightNode) {
                      if (passedNode.key > node.rightNode.key) {
                        var returner = this.leftRotate(node);
                        if (debugFlag) {
                          console.log("returning here 3 ", returner);
                        }
                        return returner;
                      } else if (passedNode.key < node.rightNode.key) {
                        node.rightNode = this.rightRotate(node.rightNode);
                        var returner = this.leftRotate(node);
                        if (debugFlag) {
                          console.log("returning here4 ", returner, node);
                        }
                        return returner;
                      }
                    }
                  }
                } else {
                  if (debugFlag) {
                    console.log("what here", node);
                  }
                }
                if (debugFlag) {
                  console.log("returning here 6", node);
                }
                return node;
              }
              addTypeNode(passedNode, node, height) {
                var debugFlag = false;
                if (passedNode.value.typeId != 0) {
                  if (node == null) {
                    if (debugFlag) {
                      console.log("equal here", node);
                    }
                    node = passedNode;
                    return node;
                  }
                  var LeftNode = node.leftNode;
                  var RightNode = node.rightNode;
                  if (node.key > passedNode.key) {
                    if (debugFlag) {
                      console.log("left  here", node);
                    }
                    node.leftNode = this.addTypeNode(passedNode, LeftNode, height);
                  } else if (node.key < passedNode.key) {
                    if (debugFlag) {
                      console.log("right here", node, RightNode);
                    }
                    node.rightNode = this.addTypeNode(passedNode, RightNode, height);
                  } else {
                    if (debugFlag) {
                      console.log("else here", node, passedNode);
                    }
                    if (node.key == passedNode.key && node.key != 0 && node.value.id != passedNode.value.id) {
                      node.addCurrentNodeType(passedNode, node);
                    }
                    return node;
                  }
                  node.height = 1 + Math.max(this.getHeight(node.leftNode), this.getHeight(node.rightNode));
                  if (debugFlag) {
                    console.log("height here", node.height);
                  }
                  let balancingFactor = this.getBalanceFactor(node);
                  if (debugFlag) {
                    console.log("balancingFactor here", balancingFactor);
                  }
                  if (balancingFactor > 1) {
                    if (node.leftNode) {
                      if (passedNode.key < node.leftNode.key) {
                        var returner = this.rightRotate(node);
                        if (debugFlag) {
                          console.log("returning here 1 ", returner);
                        }
                        return returner;
                      } else if (passedNode.key > node.leftNode.key) {
                        node.leftNode = this.leftRotate(node.leftNode);
                        var returner = this.rightRotate(node);
                        if (debugFlag) {
                          console.log("returning here 2 ", returner);
                        }
                        return returner;
                      }
                    }
                  }
                  if (balancingFactor < -1) {
                    if (node.rightNode) {
                      if (passedNode.key > node.rightNode.key) {
                        var returner = this.leftRotate(node);
                        if (debugFlag) {
                          console.log("returning here 3 ", returner);
                        }
                        return returner;
                      } else if (passedNode.key < node.rightNode.key) {
                        node.rightNode = this.rightRotate(node.rightNode);
                        var returner = this.leftRotate(node);
                        if (debugFlag) {
                          console.log("returning here4 ", returner, node);
                        }
                        return returner;
                      }
                    }
                  }
                } else {
                  if (debugFlag) {
                    console.log("what here", node);
                  }
                }
                if (debugFlag) {
                  console.log("returning here 6", node);
                }
                return node;
              }
              rightRotate(y) {
                if (y) {
                  let x = y.leftNode;
                  if (x) {
                    let T2 = x.rightNode;
                    y.leftNode = T2;
                    x.rightNode = y;
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(y.rightNode)) + 1;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode)) + 1;
                    return x;
                  }
                }
                return y;
              }
              leftRotate(x) {
                if (x) {
                  let y = x.rightNode;
                  if (y) {
                    let T2 = y.leftNode;
                    y.leftNode = x;
                    x.rightNode = T2;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode) + 1);
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(x.rightNode) + 1);
                    return y;
                  }
                }
                return x;
              }
              getHeight(node) {
                if (node) {
                  return node.height;
                }
                return 0;
              }
              getBalanceFactor(N) {
                if (N == null) {
                  return 0;
                }
                return this.getHeight(N.leftNode) - this.getHeight(N.rightNode);
              }
              getFromNode(id, node) {
                if (node) {
                  if (id == node.key) {
                    return node;
                  } else if (id < node.key) {
                    return this.getFromNode(id, node.leftNode);
                  } else if (id > node.key) {
                    return this.getFromNode(id, node.rightNode);
                  }
                  return node;
                }
                return node;
              }
              updateNodeSyncStatus(id, value, node) {
                if (node) {
                  if (id == node.key) {
                    let lconcept = node.value;
                    lconcept.isSynced = value;
                    node.value = lconcept;
                    return node;
                  } else if (id < node.key) {
                    return this.updateNodeSyncStatus(id, value, node.leftNode);
                  } else if (id > node.key) {
                    return this.updateNodeSyncStatus(id, value, node.rightNode);
                  }
                  return node;
                }
                return node;
              }
              getCharacterFromNode(value, node) {
                if (node) {
                  if (value == node.key) {
                    return node;
                  } else if (value < node.key) {
                    return this.getCharacterFromNode(value, node.leftNode);
                  } else if (value > node.key) {
                    return this.getCharacterFromNode(value, node.rightNode);
                  }
                  return node;
                }
                return node;
              }
              getFromNodeWithCharacterAndType(value, typeId, node) {
                value = `${value}`;
                if (node) {
                  if (value == node.key) {
                    if (value == node.value.characterValue && typeId == node.value.typeId) {
                      return node;
                    } else {
                      for (let i2 = 0; i2 < node.variants.length; i2++) {
                        if (node.variants[i2].value.typeId == typeId) {
                          return node.variants[i2];
                        }
                      }
                    }
                  } else if (value < node.key) {
                    return this.getFromNodeWithCharacterAndType(value, typeId, node.leftNode);
                  } else if (value > node.key) {
                    return this.getFromNodeWithCharacterAndType(value, typeId, node.rightNode);
                  }
                  return null;
                }
                return node;
              }
              getFromNodeWithCharacterAndCategory(value, categoryId, node) {
                value = `${value}`;
                if (node) {
                  if (value == node.key) {
                    if (value == node.value.characterValue && categoryId == node.value.categoryId) {
                      return node;
                    } else {
                      for (let i2 = 0; i2 < node.variants.length; i2++) {
                        if (node.variants[i2].value.categoryId == categoryId) {
                          return node.variants[i2];
                        }
                      }
                    }
                  } else if (value < node.key) {
                    return this.getFromNodeWithCharacterAndCategory(value, categoryId, node.leftNode);
                  } else if (value > node.key) {
                    return this.getFromNodeWithCharacterAndCategory(value, categoryId, node.rightNode);
                  }
                  return null;
                }
                return node;
              }
              removeNode(passedNode, id) {
                if (passedNode == null) {
                  return passedNode;
                }
                if (passedNode.key > id) {
                  passedNode.leftNode = this.removeNode(passedNode.leftNode, id);
                  return passedNode;
                } else if (passedNode.key < id) {
                  passedNode.rightNode = this.removeNode(passedNode.rightNode, id);
                  return passedNode;
                }
                if (passedNode.leftNode == null) {
                  let temp = passedNode.rightNode;
                  passedNode = null;
                  return temp;
                } else if (passedNode.rightNode == null) {
                  let temp = passedNode.leftNode;
                  passedNode = null;
                  return temp;
                } else {
                  var immediateSuccessor = this.inOrderSuccessor(passedNode.rightNode);
                  passedNode.value = immediateSuccessor.value;
                  passedNode.key = immediateSuccessor.key;
                  passedNode.variants = immediateSuccessor.variants;
                  passedNode.currentNode = immediateSuccessor.currentNode;
                  passedNode.rightNode = this.removeNode(passedNode.rightNode, immediateSuccessor.key);
                  return passedNode;
                }
              }
              removeNodeWithVariants(passedNode, typeIdentifier, conceptId) {
                if (passedNode == null) {
                  return passedNode;
                }
                if (passedNode.key > typeIdentifier) {
                  passedNode.leftNode = this.removeNodeWithVariants(passedNode.leftNode, typeIdentifier, conceptId);
                  return passedNode;
                } else if (passedNode.key < typeIdentifier) {
                  passedNode.rightNode = this.removeNodeWithVariants(passedNode.rightNode, typeIdentifier, conceptId);
                  return passedNode;
                }
                if (passedNode.variants.length > 0) {
                  if (passedNode.value.id == conceptId) {
                    var newNode = passedNode.variants[0];
                    if (newNode) {
                      passedNode.value = newNode.value;
                      passedNode.key = newNode.key;
                      passedNode.currentNode = newNode.currentNode;
                      passedNode.variants.splice(0, 1);
                      return passedNode;
                    }
                  } else {
                    for (let i2 = 0; i2 < passedNode.variants.length; i2++) {
                      if (conceptId == passedNode.variants[i2].value.id) {
                        passedNode.variants.splice(i2, 1);
                        return passedNode;
                      }
                    }
                  }
                }
                if (passedNode.leftNode == null) {
                  let temp = passedNode.rightNode;
                  passedNode = null;
                  return temp;
                } else if (passedNode.rightNode == null) {
                  let temp = passedNode.leftNode;
                  passedNode = null;
                  return temp;
                } else {
                  var immediateSuccessor = this.inOrderSuccessor(passedNode.rightNode);
                  passedNode.value = immediateSuccessor.value;
                  passedNode.key = immediateSuccessor.key;
                  passedNode.variants = immediateSuccessor.variants;
                  passedNode.currentNode = immediateSuccessor.currentNode;
                  passedNode.rightNode = this.removeNodeWithVariants(passedNode.rightNode, immediateSuccessor.key, conceptId);
                  return passedNode;
                }
              }
              countNodeBelow(root) {
                if (root == null) {
                  return 0;
                }
                return 1 + this.countNodeBelow(root.leftNode) + this.countNodeBelow(root.rightNode);
              }
              inOrderSuccessor(root) {
                while (root.leftNode != null) {
                  root = root.leftNode;
                }
                return root;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/Local/LocalBinaryCharacterTree.ts": (
          /*!**************************************************************!*\
            !*** ./src/DataStructures/Local/LocalBinaryCharacterTree.ts ***!
            \**************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              LocalBinaryCharacterTree: () => (
                /* binding */
                LocalBinaryCharacterTree
              )
              /* harmony export */
            });
            var _IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./../IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var _Local_LNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./../Local/LNode */
              "./src/DataStructures/Local/LNode.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class LocalBinaryCharacterTree {
              static waitForDataToLoad() {
                return __awaiter(this, void 0, void 0, function* () {
                  return new Promise((resolve, reject) => {
                    this.checkFlag(resolve);
                    setTimeout(() => {
                      reject("not");
                    }, 25e3);
                  });
                });
              }
              static checkFlag(resolve) {
                if (_IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__.IdentifierFlags.isLocalCharacterLoaded) {
                  return resolve("done");
                } else {
                  setTimeout(LocalBinaryCharacterTree.checkFlag, 1e3, resolve);
                }
              }
              static addNodeToTree(node) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.LocalCharacterRoot == null) {
                    this.LocalCharacterRoot = node;
                    return this.LocalCharacterRoot;
                  } else {
                    this.LocalCharacterRoot = this.LocalCharacterRoot.addCharacterNode(node, this.LocalCharacterRoot, this.LocalCharacterRoot.height);
                  }
                  return this.LocalCharacterRoot;
                });
              }
              static addConceptToTree(concept) {
                if (concept.characterValue != "") {
                  var node = new _Local_LNode__WEBPACK_IMPORTED_MODULE_1__.LNode(concept.characterValue, concept, null, null);
                  this.addNodeToTree(node);
                }
              }
              static getNodeFromTree(value) {
                if (this.LocalCharacterRoot) {
                  var Node = this.LocalCharacterRoot.getCharacterFromNode(value, this.LocalCharacterRoot);
                  return Node;
                }
                return this.LocalCharacterRoot;
              }
              static getCharacterAndTypeFromTree(value, typeId) {
                return __awaiter(this, void 0, void 0, function* () {
                  try {
                    var data = yield this.waitForDataToLoad();
                  } catch (exception) {
                    return null;
                  }
                  if (this.LocalCharacterRoot) {
                    var Node = this.LocalCharacterRoot.getFromNodeWithCharacterAndType(value, typeId, this.LocalCharacterRoot);
                    return Node;
                  }
                  return this.LocalCharacterRoot;
                });
              }
              static getCharacterAndCategoryFromTree(value, categoryId) {
                return __awaiter(this, void 0, void 0, function* () {
                  try {
                    var data = yield this.waitForDataToLoad();
                  } catch (exception) {
                    return null;
                  }
                  if (this.LocalCharacterRoot) {
                    var Node = this.LocalCharacterRoot.getFromNodeWithCharacterAndCategory(value, categoryId, this.LocalCharacterRoot);
                    return Node;
                  }
                  return this.LocalCharacterRoot;
                });
              }
              static removeConceptType(character, id) {
                if (this.LocalCharacterRoot) {
                  this.LocalCharacterRoot = this.LocalCharacterRoot.removeNodeWithVariants(this.LocalCharacterRoot, character, id);
                }
              }
            }
            LocalBinaryCharacterTree.LocalCharacterRoot = null;
          }
        ),
        /***/
        "./src/DataStructures/Local/LocalBinaryTree.ts": (
          /*!*****************************************************!*\
            !*** ./src/DataStructures/Local/LocalBinaryTree.ts ***!
            \*****************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              LocalBinaryTree: () => (
                /* binding */
                LocalBinaryTree
              )
              /* harmony export */
            });
            var _IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var _Local_LNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./../Local/LNode */
              "./src/DataStructures/Local/LNode.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class LocalBinaryTree {
              static addNodeToTree(node) {
                if (this.root == null) {
                  this.root = node;
                  return this.root;
                } else {
                  this.root = this.root.addNode(node, this.root, this.root.height);
                }
              }
              static addConceptToTree(concept) {
                var node = new _Local_LNode__WEBPACK_IMPORTED_MODULE_1__.LNode(concept.id, concept, null, null);
                var characterNode = new _Local_LNode__WEBPACK_IMPORTED_MODULE_1__.LNode(concept.characterValue, concept, null, null);
                this.addNodeToTree(node);
              }
              static waitForDataToLoad() {
                return __awaiter(this, void 0, void 0, function* () {
                  return new Promise((resolve, reject) => {
                    this.checkFlag(resolve);
                    setTimeout(() => {
                      reject("not");
                    }, 25e3);
                  });
                });
              }
              static checkFlag(resolve) {
                if (_IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__.IdentifierFlags.isLocalDataLoaded) {
                  return resolve("done");
                } else {
                  setTimeout(LocalBinaryTree.checkFlag, 1e3, resolve);
                }
              }
              static getNodeFromTree(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  try {
                    var data = yield this.waitForDataToLoad();
                  } catch (exception) {
                    return null;
                  }
                  if (this.root) {
                    var Node = this.root.getFromNode(id, this.root);
                    return Node;
                  }
                  return null;
                });
              }
              static getCharacterAndTypeFromTree(value, typeId) {
                if (this.root) {
                  var Node = this.root.getFromNodeWithCharacterAndType(value, typeId, this.root);
                  return Node;
                }
                return this.root;
              }
              static updateSyncStatus(id) {
                if (this.root) {
                  var Node = this.root.updateNodeSyncStatus(id, true, this.root);
                  return Node;
                }
                return this.root;
              }
              static removeNodeFromTree(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.root) {
                    this.root = this.root.removeNode(this.root, id);
                  }
                });
              }
            }
            LocalBinaryTree.root = null;
          }
        ),
        /***/
        "./src/DataStructures/Local/LocalBinaryTypeTree.ts": (
          /*!*********************************************************!*\
            !*** ./src/DataStructures/Local/LocalBinaryTypeTree.ts ***!
            \*********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              LocalBinaryTypeTree: () => (
                /* binding */
                LocalBinaryTypeTree
              )
              /* harmony export */
            });
            var _IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./../IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var _LNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./LNode */
              "./src/DataStructures/Local/LNode.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class LocalBinaryTypeTree {
              static addNodeToTree(node) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.LocalTypeRoot == null) {
                    this.LocalTypeRoot = node;
                    return this.LocalTypeRoot;
                  } else {
                    this.LocalTypeRoot = this.LocalTypeRoot.addTypeNode(node, this.LocalTypeRoot, this.LocalTypeRoot.height);
                  }
                  return this.LocalTypeRoot;
                });
              }
              static addConceptToTree(concept) {
                if (concept.typeId != 0) {
                  var node = new _LNode__WEBPACK_IMPORTED_MODULE_1__.LNode(concept.typeId, concept, null, null);
                  this.addNodeToTree(node);
                }
              }
              static removeConceptType(typeId, id) {
                if (this.LocalTypeRoot) {
                  this.LocalTypeRoot = this.LocalTypeRoot.removeNodeWithVariants(this.LocalTypeRoot, typeId, id);
                }
              }
              static getNodeFromTree(id) {
                if (this.LocalTypeRoot) {
                  var Node = this.LocalTypeRoot.getFromNode(id, this.LocalTypeRoot);
                  return Node;
                }
                return this.LocalTypeRoot;
              }
              static getTypeVariantsFromTree(typeId) {
                var Node = this.getNodeFromTree(typeId);
                var concepts = [];
                if (Node) {
                  concepts.push(Node === null || Node === void 0 ? void 0 : Node.value);
                  for (let i2 = 0; i2 < Node.variants.length; i2++) {
                    concepts.push(Node.variants[i2].value);
                  }
                  return concepts;
                }
              }
              static waitForDataToLoad() {
                return __awaiter(this, void 0, void 0, function* () {
                  return new Promise((resolve, reject) => {
                    this.checkFlag(resolve);
                    setTimeout(() => {
                      reject("not");
                    }, 25e3);
                  });
                });
              }
              static checkFlag(resolve) {
                if (_IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__.IdentifierFlags.isLocalTypeLoaded) {
                  return resolve("done");
                } else {
                  setTimeout(LocalBinaryTypeTree.checkFlag, 1e3, resolve);
                }
              }
              static getTypeVariantsFromTreeWithUserId(typeId, userId) {
                return __awaiter(this, void 0, void 0, function* () {
                  var concepts = [];
                  try {
                    var data = yield this.waitForDataToLoad();
                  } catch (exception) {
                    return concepts;
                  }
                  var Node = this.getNodeFromTree(typeId);
                  if (Node) {
                    console.log("this is the node to type", Node);
                    if (Node.value.userId == userId || Node.value.userId == 999) {
                      concepts.push(Node === null || Node === void 0 ? void 0 : Node.value);
                    }
                    for (let i2 = 0; i2 < Node.variants.length; i2++) {
                      if (Node.variants[i2].value.userId == userId || Node.value.userId == 999) {
                        concepts.push(Node.variants[i2].value);
                      }
                    }
                  }
                  return concepts;
                });
              }
            }
            LocalBinaryTypeTree.LocalTypeRoot = null;
          }
        ),
        /***/
        "./src/DataStructures/Local/LocalConceptData.ts": (
          /*!******************************************************!*\
            !*** ./src/DataStructures/Local/LocalConceptData.ts ***!
            \******************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              LocalConceptsData: () => (
                /* binding */
                LocalConceptsData
              )
              /* harmony export */
            });
            var _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../Database/indexdblocal */
              "./src/Database/indexdblocal.ts"
            );
            var _LocalBinaryTree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./LocalBinaryTree */
              "./src/DataStructures/Local/LocalBinaryTree.ts"
            );
            var _LocalBinaryCharacterTree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./LocalBinaryCharacterTree */
              "./src/DataStructures/Local/LocalBinaryCharacterTree.ts"
            );
            var _LocalBinaryTypeTree__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./LocalBinaryTypeTree */
              "./src/DataStructures/Local/LocalBinaryTypeTree.ts"
            );
            var _Services_Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../../Services/Local/CreateDefaultLConcept */
              "./src/Services/Local/CreateDefaultLConcept.ts"
            );
            var _ConceptData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__2(
              /*! ../ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _LocalGhostIdTree__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__2(
              /*! ./LocalGhostIdTree */
              "./src/DataStructures/Local/LocalGhostIdTree.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class LocalConceptsData {
              constructor() {
                this.name = "conceptsArray";
              }
              static AddConcept(concept) {
                if (concept.id != 0) {
                  (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_0__.UpdateToDatabase)("localconcept", concept);
                  _LocalBinaryTree__WEBPACK_IMPORTED_MODULE_1__.LocalBinaryTree.addConceptToTree(concept);
                  _LocalBinaryCharacterTree__WEBPACK_IMPORTED_MODULE_2__.LocalBinaryCharacterTree.addConceptToTree(concept);
                  _LocalBinaryTypeTree__WEBPACK_IMPORTED_MODULE_3__.LocalBinaryTypeTree.addConceptToTree(concept);
                  this.localconceptsArray.push(concept);
                }
              }
              static AddPermanentConcept(concept) {
                if (concept.id != 0) {
                  _LocalBinaryTree__WEBPACK_IMPORTED_MODULE_1__.LocalBinaryTree.removeNodeFromTree(concept.ghostId);
                  _LocalBinaryCharacterTree__WEBPACK_IMPORTED_MODULE_2__.LocalBinaryCharacterTree.removeConceptType(concept.characterValue, concept.ghostId);
                  _LocalBinaryTypeTree__WEBPACK_IMPORTED_MODULE_3__.LocalBinaryTypeTree.removeConceptType(concept.typeId, concept.ghostId);
                  _LocalGhostIdTree__WEBPACK_IMPORTED_MODULE_6__.LocalGhostIdTree.addConceptToTree(concept);
                  let removeData = (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_0__.removeFromDatabase)("localconcept", concept.ghostId);
                  _ConceptData__WEBPACK_IMPORTED_MODULE_5__.ConceptsData.AddConcept(concept);
                }
              }
              static RemoveConcept(concept) {
                return __awaiter(this, void 0, void 0, function* () {
                  try {
                    if (concept.id != 0) {
                      _LocalBinaryTree__WEBPACK_IMPORTED_MODULE_1__.LocalBinaryTree.removeNodeFromTree(concept.ghostId);
                      _LocalBinaryCharacterTree__WEBPACK_IMPORTED_MODULE_2__.LocalBinaryCharacterTree.removeConceptType(concept.characterValue, concept.ghostId);
                      _LocalBinaryTypeTree__WEBPACK_IMPORTED_MODULE_3__.LocalBinaryTypeTree.removeConceptType(concept.typeId, concept.ghostId);
                      yield (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_0__.removeFromDatabase)("localconcept", concept.ghostId);
                    }
                  } catch (error) {
                    throw error;
                  }
                });
              }
              static AddConceptToMemory(concept) {
                if (concept.id != 0) {
                  _LocalBinaryTree__WEBPACK_IMPORTED_MODULE_1__.LocalBinaryTree.addConceptToTree(concept);
                  _LocalBinaryCharacterTree__WEBPACK_IMPORTED_MODULE_2__.LocalBinaryCharacterTree.addConceptToTree(concept);
                  _LocalBinaryTypeTree__WEBPACK_IMPORTED_MODULE_3__.LocalBinaryTypeTree.addConceptToTree(concept);
                }
              }
              static GetConcept(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  var myConcept = (0, _Services_Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_4__.CreateDefaultLConcept)();
                  var node = yield _LocalBinaryTree__WEBPACK_IMPORTED_MODULE_1__.LocalBinaryTree.getNodeFromTree(id);
                  if (node === null || node === void 0 ? void 0 : node.value) {
                    var returnedConcept = node.value;
                    if (returnedConcept) {
                      myConcept = returnedConcept;
                    }
                  }
                  return myConcept;
                });
              }
              static UpdateConceptSyncStatus(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  _LocalBinaryTree__WEBPACK_IMPORTED_MODULE_1__.LocalBinaryTree.updateSyncStatus(id);
                });
              }
              static GetConceptByGhostId(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  var myConcept = (0, _Services_Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_4__.CreateDefaultLConcept)();
                  var node = yield _LocalGhostIdTree__WEBPACK_IMPORTED_MODULE_6__.LocalGhostIdTree.getNodeFromTree(id);
                  if (node === null || node === void 0 ? void 0 : node.value) {
                    var returnedConcept = node.value;
                    if (returnedConcept) {
                      myConcept = returnedConcept;
                    }
                  }
                  return myConcept;
                });
              }
              static GetConceptByCharacter(characterValue) {
                return __awaiter(this, void 0, void 0, function* () {
                  var concept = (0, _Services_Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_4__.CreateDefaultLConcept)();
                  var Node = _LocalBinaryCharacterTree__WEBPACK_IMPORTED_MODULE_2__.LocalBinaryCharacterTree.getNodeFromTree(characterValue);
                  if (Node) {
                    concept = Node.value;
                  }
                  return concept;
                });
              }
              static GetConceptByCharacterAndTypeLocal(character_value, typeId) {
                return __awaiter(this, void 0, void 0, function* () {
                  var concept = (0, _Services_Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_4__.CreateDefaultLConcept)();
                  var Node = yield _LocalBinaryCharacterTree__WEBPACK_IMPORTED_MODULE_2__.LocalBinaryCharacterTree.getCharacterAndTypeFromTree(character_value, typeId);
                  if (Node) {
                    concept = Node.value;
                  }
                  return concept;
                });
              }
              static GetConceptByCharacterAndCategoryLocal(character_value, categoryId) {
                return __awaiter(this, void 0, void 0, function* () {
                  var concept = (0, _Services_Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_4__.CreateDefaultLConcept)();
                  var Node = yield _LocalBinaryCharacterTree__WEBPACK_IMPORTED_MODULE_2__.LocalBinaryCharacterTree.getCharacterAndCategoryFromTree(character_value, categoryId);
                  if (Node) {
                    concept = Node.value;
                  }
                  return concept;
                });
              }
              static GetConceptsByTypeId(typeId) {
                var myConcept;
                let ConceptList = [];
                myConcept = null;
                for (var i2 = 0; i2 < this.localconceptsArray.length; i2++) {
                  if (this.localconceptsArray[i2].typeId == typeId) {
                    ConceptList.push(this.localconceptsArray[i2]);
                  }
                }
                return ConceptList;
              }
              static GetConceptsByTypeIdAndUser(typeId, userId) {
                return __awaiter(this, void 0, void 0, function* () {
                  var myConcept;
                  let ConceptList = [];
                  ConceptList = yield _LocalBinaryTypeTree__WEBPACK_IMPORTED_MODULE_3__.LocalBinaryTypeTree.getTypeVariantsFromTreeWithUserId(typeId, userId);
                  return ConceptList;
                });
              }
              getName() {
                return this.name;
              }
            }
            LocalConceptsData.localconceptsArray = [];
          }
        ),
        /***/
        "./src/DataStructures/Local/LocalConnectionData.ts": (
          /*!*********************************************************!*\
            !*** ./src/DataStructures/Local/LocalConnectionData.ts ***!
            \*********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              LocalConnectionData: () => (
                /* binding */
                LocalConnectionData
              )
              /* harmony export */
            });
            var _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../Database/indexdblocal */
              "./src/Database/indexdblocal.ts"
            );
            var _Services_Local_ConvertFromLConnectionToConnection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Services/Local/ConvertFromLConnectionToConnection */
              "./src/Services/Local/ConvertFromLConnectionToConnection.ts"
            );
            var _ConnectionData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../ConnectionData */
              "./src/DataStructures/ConnectionData.ts"
            );
            var _IdentifierFlags__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class LocalConnectionData {
              constructor() {
                this.name = "Connection Array";
              }
              static CheckContains(connection) {
                var contains = false;
                for (var i2 = 0; i2 < this.connectionArray.length; i2++) {
                  if (this.connectionArray[i2].id == connection.id) {
                    contains = true;
                  }
                }
                return contains;
              }
              static AddConnection(connection) {
                var contains = this.CheckContains(connection);
                if (contains) {
                  this.RemoveConnection(connection);
                }
                if (connection.id != 0) {
                  (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_0__.UpdateToDatabase)("localconnection", connection);
                }
                this.connectionArray.push(connection);
              }
              static AddConnectionToMemory(connection) {
                var contains = this.CheckContains(connection);
                if (contains) {
                  this.RemoveConnection(connection);
                }
                this.connectionArray.push(connection);
              }
              static AddToDictionary(connection) {
                this.connectionDictionary[connection.id] = connection;
              }
              static RemoveConnection(connection) {
                console.log("this is removing", connection);
                for (var i2 = 0; i2 < this.connectionArray.length; i2++) {
                  if (this.connectionArray[i2].id == connection.id) {
                    this.connectionArray.splice(i2, 1);
                  }
                }
                if (connection.id != 0) {
                }
              }
              static AddPermanentConnection(connection) {
                if (connection.id > 0) {
                  (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_0__.removeFromDatabase)("localconnection", connection.ghostId);
                  _ConnectionData__WEBPACK_IMPORTED_MODULE_2__.ConnectionData.AddConnection((0, _Services_Local_ConvertFromLConnectionToConnection__WEBPACK_IMPORTED_MODULE_1__.ConvertFromLConnectionToConnection)(connection));
                }
              }
              static GetConnection(id) {
                var myConcept;
                myConcept = null;
                for (var i2 = 0; i2 < this.connectionArray.length; i2++) {
                  if (this.connectionArray[i2].id == id) {
                    myConcept = this.connectionArray[i2];
                  }
                }
                return myConcept;
              }
              static waitForDataToLoad() {
                return __awaiter(this, void 0, void 0, function* () {
                  return new Promise((resolve, reject) => {
                    this.checkFlag(resolve);
                    setTimeout(() => {
                      reject("not");
                    }, 25e3);
                  });
                });
              }
              static checkFlag(resolve) {
                if (_IdentifierFlags__WEBPACK_IMPORTED_MODULE_3__.IdentifierFlags.isLocalConnectionLoaded) {
                  return resolve("done");
                } else {
                  setTimeout(LocalConnectionData.checkFlag, 1e3, resolve);
                }
              }
              static GetConnectionsOfCompositionLocal(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  var connectionList = [];
                  try {
                    var data = yield this.waitForDataToLoad();
                    for (var i2 = 0; i2 < this.connectionArray.length; i2++) {
                      if (this.connectionArray[i2].typeId == id) {
                        connectionList.push(this.connectionArray[i2]);
                      }
                    }
                    return connectionList;
                  } catch (exception) {
                    return connectionList;
                  }
                });
              }
              static GetConnectionOfCompositionAndTypeLocal(typeId, ofTheConceptId) {
                return __awaiter(this, void 0, void 0, function* () {
                  var connectionList = [];
                  try {
                    var data = yield this.waitForDataToLoad();
                    console.log("this is the connections", this.connectionArray, typeId, ofTheConceptId);
                    for (var i2 = 0; i2 < this.connectionArray.length; i2++) {
                      if (this.connectionArray[i2].typeId == typeId && this.connectionArray[i2].ofTheConceptId == ofTheConceptId) {
                        connectionList.push(this.connectionArray[i2]);
                      }
                    }
                    return connectionList;
                  } catch (exception) {
                    return connectionList;
                  }
                });
              }
              getName() {
                return this.name;
              }
            }
            LocalConnectionData.connectionArray = [];
            LocalConnectionData.connectionDictionary = [];
          }
        ),
        /***/
        "./src/DataStructures/Local/LocalGhostIdTree.ts": (
          /*!******************************************************!*\
            !*** ./src/DataStructures/Local/LocalGhostIdTree.ts ***!
            \******************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              LocalGhostIdTree: () => (
                /* binding */
                LocalGhostIdTree
              )
              /* harmony export */
            });
            var _IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var _Local_LNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./../Local/LNode */
              "./src/DataStructures/Local/LNode.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class LocalGhostIdTree {
              static addNodeToTree(node) {
                if (this.root == null) {
                  this.root = node;
                  return this.root;
                } else {
                  this.root = this.root.addNode(node, this.root, this.root.height);
                }
              }
              static addConceptToTree(concept) {
                var node = new _Local_LNode__WEBPACK_IMPORTED_MODULE_1__.LNode(concept.ghostId, concept, null, null);
                this.addNodeToTree(node);
              }
              static waitForDataToLoad() {
                return __awaiter(this, void 0, void 0, function* () {
                  return new Promise((resolve, reject) => {
                    this.checkFlag(resolve);
                    setTimeout(() => {
                      reject("not");
                    }, 25e3);
                  });
                });
              }
              static checkFlag(resolve) {
                if (_IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__.IdentifierFlags.isLocalDataLoaded) {
                  return resolve("done");
                } else {
                  setTimeout(LocalGhostIdTree.checkFlag, 1e3, resolve);
                }
              }
              static getNodeFromTree(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  try {
                    var data = yield this.waitForDataToLoad();
                  } catch (exception) {
                    return null;
                  }
                  if (this.root) {
                    var Node = this.root.getFromNode(id, this.root);
                    return Node;
                  }
                  return null;
                });
              }
              static removeNodeFromTree(id) {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.root) {
                    this.root = this.root.removeNode(this.root, id);
                  }
                });
              }
            }
            LocalGhostIdTree.root = null;
          }
        ),
        /***/
        "./src/DataStructures/Local/LocalId.ts": (
          /*!*********************************************!*\
            !*** ./src/DataStructures/Local/LocalId.ts ***!
            \*********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              LocalId: () => (
                /* binding */
                LocalId
              )
              /* harmony export */
            });
            var _Services_Local_CreateLocalBinaryTreeFromData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../Services/Local/CreateLocalBinaryTreeFromData */
              "./src/Services/Local/CreateLocalBinaryTreeFromData.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class LocalId {
              static AddConceptId(id) {
                this.localId = id.value;
              }
              /**
               *
               * This function will get the local concept id from the indexdb
               * @returns the local concept id
               */
              static getConceptId() {
                return __awaiter(this, void 0, void 0, function* () {
                  try {
                    if (this.localId) {
                      if (this.ReservedLocalId.length < 5) {
                        yield (0, _Services_Local_CreateLocalBinaryTreeFromData__WEBPACK_IMPORTED_MODULE_0__.PopulateTheLocalConceptsToMemory)().then(() => {
                          let finalLocalId = this.localId;
                          for (let j = 1; j < 10; j++) {
                            let localId = this.localId - j;
                            this.ReservedLocalId.push(localId);
                            finalLocalId = localId;
                          }
                        }).catch((event) => {
                          console.log(" getid: cannot get the id from indexdb");
                          return -Math.floor(Math.random() * 1e8);
                        });
                        let id = this.ReservedLocalId[0];
                        this.ReservedLocalId.shift();
                        return id;
                      } else {
                        let id = this.ReservedLocalId[0];
                        this.ReservedLocalId.shift();
                        return id;
                      }
                    } else {
                      yield (0, _Services_Local_CreateLocalBinaryTreeFromData__WEBPACK_IMPORTED_MODULE_0__.PopulateTheLocalConceptsToMemory)().then(() => {
                        let finalLocalId = this.localId;
                        for (let j = 1; j < 10; j++) {
                          let localId = this.localId - j;
                          this.ReservedLocalId.push(localId);
                          finalLocalId = localId;
                        }
                      });
                      return this.getConceptId();
                    }
                  } catch (error) {
                    console.log(" getid: this is the eror in concept", error);
                    return -Math.floor(Math.random() * 1e8);
                  }
                });
              }
              /**
               *
               * @param object This is the object that needs to be updated
               */
              static AddConnectionId(object) {
                this.localConnectionId = object.value;
              }
              static getConnectionId() {
                return __awaiter(this, void 0, void 0, function* () {
                  try {
                    if (this.localConnectionId) {
                      if (this.ReservedConnectionId.length < 5) {
                        yield (0, _Services_Local_CreateLocalBinaryTreeFromData__WEBPACK_IMPORTED_MODULE_0__.PopulateTheLocalConnectionToMemory)().then(() => {
                          let finalLocalId = this.localConnectionId;
                          for (let j = 1; j < 10; j++) {
                            let localConId = this.localConnectionId - j;
                            this.ReservedConnectionId.push(localConId);
                            finalLocalId = localConId;
                          }
                        }).catch((event) => {
                          console.log("this is the new event", event);
                          return -Math.floor(Math.random() * 1e8);
                        });
                        let id = this.ReservedConnectionId[0];
                        this.ReservedConnectionId.shift();
                        return id;
                      } else {
                        let id = this.ReservedConnectionId[0];
                        this.ReservedConnectionId.shift();
                        return id;
                      }
                    } else {
                      yield (0, _Services_Local_CreateLocalBinaryTreeFromData__WEBPACK_IMPORTED_MODULE_0__.PopulateTheLocalConnectionToMemory)().then(() => {
                        let finalLocalId = this.localConnectionId;
                        for (let j = 1; j < 10; j++) {
                          let localConId = this.localConnectionId - j;
                          this.ReservedConnectionId.push(localConId);
                          finalLocalId = localConId;
                        }
                      });
                      return this.getConnectionId();
                    }
                  } catch (error) {
                    return -Math.floor(Math.random() * 1e8);
                  }
                });
              }
            }
            LocalId.ReservedLocalId = [];
            LocalId.ReservedConnectionId = [];
          }
        ),
        /***/
        "./src/DataStructures/Local/LocalSyncData.ts": (
          /*!***************************************************!*\
            !*** ./src/DataStructures/Local/LocalSyncData.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              LocalSyncData: () => (
                /* binding */
                LocalSyncData
              )
              /* harmony export */
            });
            var _Api_Create_CreateTheGhostConceptApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../Api/Create/CreateTheGhostConceptApi */
              "./src/Api/Create/CreateTheGhostConceptApi.ts"
            );
            var _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Database/indexdblocal */
              "./src/Database/indexdblocal.ts"
            );
            var _LocalConceptData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./LocalConceptData */
              "./src/DataStructures/Local/LocalConceptData.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var _LocalConnectionData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ./LocalConnectionData */
              "./src/DataStructures/Local/LocalConnectionData.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class LocalSyncData {
              static CheckContains(concept) {
                var contains = false;
                for (var i2 = 0; i2 < this.conceptsSyncArray.length; i2++) {
                  if (this.conceptsSyncArray[i2].id == concept.id) {
                    contains = true;
                  }
                }
                return contains;
              }
              static SyncDataDelete(id) {
                for (var i2 = 0; i2 < this.conceptsSyncArray.length; i2++) {
                  if (id == this.conceptsSyncArray[i2].id) {
                    this.conceptsSyncArray.splice(i2, 1);
                  }
                }
                for (var i2 = 0; i2 < this.connectionSyncArray.length; i2++) {
                  if (this.connectionSyncArray[i2].ofTheConceptId == id || this.connectionSyncArray[i2].toTheConceptId == id || this.connectionSyncArray[i2].typeId == id) {
                    this.connectionSyncArray.splice(i2, 1);
                  }
                }
              }
              static CheckContainsConnection(connection) {
                var contains = false;
                for (var i2 = 0; i2 < this.connectionSyncArray.length; i2++) {
                  if (this.connectionSyncArray[i2].id == connection.id) {
                    contains = true;
                  }
                }
                return contains;
              }
              static AddConcept(concept) {
                try {
                  let contains = false;
                  let existingConcept = LocalSyncData.CheckIfTheConceptIdExists(concept.id, this.conceptsSyncArray);
                  if (existingConcept.id != 0) {
                    contains = true;
                  }
                  if (!contains) {
                    this.conceptsSyncArray.push(concept);
                  }
                } catch (error) {
                  throw error;
                }
              }
              static RemoveConcept(concept) {
                for (var i2 = 0; i2 < this.conceptsSyncArray.length; i2++) {
                  if (this.conceptsSyncArray[i2].id == concept.id) {
                    this.conceptsSyncArray.splice(i2, 1);
                  }
                }
              }
              static SyncDataOnline() {
                return __awaiter(this, void 0, void 0, function* () {
                  try {
                    let conceptsArray = this.conceptsSyncArray.slice();
                    let connectionsArray = this.connectionSyncArray.slice();
                    this.connectionSyncArray = [];
                    this.conceptsSyncArray = [];
                    let toSyncConcepts = [];
                    for (let i2 = 0; i2 < conceptsArray.length; i2++) {
                      toSyncConcepts.push(conceptsArray[i2]);
                      yield _LocalConceptData__WEBPACK_IMPORTED_MODULE_2__.LocalConceptsData.UpdateConceptSyncStatus(conceptsArray[i2].id);
                    }
                    yield this.UpdateConceptListToIncludeRelatedConcepts(connectionsArray, toSyncConcepts);
                    let result = yield (0, _Api_Create_CreateTheGhostConceptApi__WEBPACK_IMPORTED_MODULE_0__.CreateTheGhostConceptApi)(toSyncConcepts, connectionsArray);
                    let concepts = result.concepts;
                    let connections = result.connections;
                    for (let i2 = 0; i2 < concepts.length; i2++) {
                      _LocalConceptData__WEBPACK_IMPORTED_MODULE_2__.LocalConceptsData.AddPermanentConcept(concepts[i2]);
                    }
                    for (let i2 = 0; i2 < connections.length; i2++) {
                      _LocalConnectionData__WEBPACK_IMPORTED_MODULE_4__.LocalConnectionData.AddPermanentConnection(connections[i2]);
                    }
                    return conceptsArray;
                  } catch (error) {
                    throw error;
                  }
                });
              }
              //  static async  SyncDataOnline(){
              //     if(this.conceptsSyncArray.length > 0){
              //         let conceptsArray = this.conceptsSyncArray.slice();
              //         this.conceptsSyncArray = [];
              //         let concepts = await CreateTheGhostConceptApi(conceptsArray);
              //         for(let i =0 ; i< concepts.length; i++){
              //             LocalSyncData.ghostIdMap.set(concepts[i].ghostId,concepts[i].id);
              //             LocalConceptsData.AddPermanentConcept(concepts[i]);
              //         }
              //     }
              //      if(this.connectionSyncArray.length > 0){
              //         // for(let i =0 ; i<this.connectionSyncArray.length ; i++){
              //         //     console.log("create the connection in backend", this.connectionSyncArray[i].ofTheConceptId + "====" + this.connectionSyncArray[i].toTheConceptId);
              //         // }
              //         let connectionsArray = this.connectionSyncArray.slice();
              //         this.ConvertGhostIdsInConnections(connectionsArray);
              //         this.connectionSyncArray = [];
              //         await CreateTheGhostConnectionApi(connectionsArray);
              //     }
              //     return "done";
              //  }
              static ConvertGhostIdsInConnections(connectionArray) {
                var _a, _b, _c;
                for (let i2 = 0; i2 < connectionArray.length; i2++) {
                  let ofTheConceptId = connectionArray[i2].ofTheConceptId;
                  let toTheConceptId = connectionArray[i2].toTheConceptId;
                  let typeId = connectionArray[i2].typeId;
                  let newOfTheConceptId = (_a = LocalSyncData.ghostIdMap.get(ofTheConceptId)) !== null && _a !== void 0 ? _a : ofTheConceptId;
                  let newToTheConceptId = (_b = LocalSyncData.ghostIdMap.get(toTheConceptId)) !== null && _b !== void 0 ? _b : toTheConceptId;
                  let newTypeId = (_c = LocalSyncData.ghostIdMap.get(typeId)) !== null && _c !== void 0 ? _c : typeId;
                  connectionArray[i2].ofTheConceptId = newOfTheConceptId;
                  connectionArray[i2].toTheConceptId = newToTheConceptId;
                  connectionArray[i2].typeId = newTypeId;
                }
              }
              static UpdateConceptListToIncludeRelatedConcepts(connectionArray, conceptsArray) {
                return __awaiter(this, void 0, void 0, function* () {
                  for (let i2 = 0; i2 < connectionArray.length; i2++) {
                    let ofTheConceptId = connectionArray[i2].ofTheConceptId;
                    let toTheConceptId = connectionArray[i2].toTheConceptId;
                    let typeId = connectionArray[i2].typeId;
                    if (ofTheConceptId < 0) {
                      let ofTheConcept = this.CheckIfTheConceptIdExists(ofTheConceptId, conceptsArray);
                      if (ofTheConcept.id == 0) {
                        ofTheConcept = yield _LocalConceptData__WEBPACK_IMPORTED_MODULE_2__.LocalConceptsData.GetConceptByGhostId(ofTheConceptId);
                        if (ofTheConcept.id != 0) {
                          if (ofTheConcept.id != ofTheConcept.ghostId) {
                            connectionArray[i2].ofTheConceptId = ofTheConcept.id;
                          }
                        } else {
                          ofTheConcept = yield _LocalConceptData__WEBPACK_IMPORTED_MODULE_2__.LocalConceptsData.GetConcept(ofTheConceptId);
                          this.AddConceptIfDoesNotExist(ofTheConcept, conceptsArray);
                        }
                      }
                    }
                    if (toTheConceptId < 0) {
                      let toTheConcept = this.CheckIfTheConceptIdExists(toTheConceptId, conceptsArray);
                      if (toTheConcept.id == 0) {
                        toTheConcept = yield _LocalConceptData__WEBPACK_IMPORTED_MODULE_2__.LocalConceptsData.GetConceptByGhostId(toTheConceptId);
                        if (toTheConcept.id != 0) {
                          if (toTheConcept.id != toTheConcept.ghostId) {
                            connectionArray[i2].toTheConceptId = toTheConcept.id;
                          }
                        } else {
                          toTheConcept = yield _LocalConceptData__WEBPACK_IMPORTED_MODULE_2__.LocalConceptsData.GetConcept(toTheConceptId);
                          this.AddConceptIfDoesNotExist(toTheConcept, conceptsArray);
                        }
                      }
                    }
                    if (typeId < 0) {
                      let type = this.CheckIfTheConceptIdExists(typeId, conceptsArray);
                      if (type.id == 0) {
                        type = yield _LocalConceptData__WEBPACK_IMPORTED_MODULE_2__.LocalConceptsData.GetConceptByGhostId(typeId);
                        if (type.id != 0) {
                          if (type.id != type.ghostId) {
                            connectionArray[i2].typeId = type.id;
                          }
                        } else {
                          type = yield _LocalConceptData__WEBPACK_IMPORTED_MODULE_2__.LocalConceptsData.GetConcept(typeId);
                          this.AddConceptIfDoesNotExist(type, conceptsArray);
                        }
                      }
                    }
                  }
                });
              }
              static AddConceptIfDoesNotExist(concept, conceptList = []) {
                let exists = false;
                for (let i2 = 0; i2 < conceptList.length; i2++) {
                  if (concept.ghostId == conceptList[i2].ghostId) {
                    exists = true;
                  }
                }
                if (!exists) {
                  conceptList.push(concept);
                }
              }
              static CheckIfTheConceptIdExists(id, conceptList = []) {
                let returnConcept = (0, _app__WEBPACK_IMPORTED_MODULE_3__.CreateDefaultLConcept)();
                for (let i2 = 0; i2 < conceptList.length; i2++) {
                  if (id == conceptList[i2].ghostId || id == conceptList[i2].id) {
                    returnConcept = conceptList[i2];
                  }
                }
                return returnConcept;
              }
              static AddConnection(connection) {
                this.connectionSyncArray.push(connection);
              }
              static RemoveConnection(connection) {
                for (var i2 = 0; i2 < this.connectionSyncArray.length; i2++) {
                  if (this.connectionSyncArray[i2].id == connection.id) {
                    this.connectionSyncArray.splice(i2, 1);
                  }
                }
              }
              static syncDataLocalDb() {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.conceptsSyncArray.length > 0) {
                    for (let i2 = 0; i2 < this.conceptsSyncArray.length; i2++) {
                      (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_1__.UpdateToDatabase)("localconcept", this.conceptsSyncArray[i2]);
                    }
                    this.conceptsSyncArray = [];
                  }
                  if (this.connectionSyncArray.length > 0) {
                    for (let i2 = 0; i2 < this.connectionSyncArray.length; i2++) {
                      (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_1__.UpdateToDatabase)("localconnection", this.connectionSyncArray[i2]);
                    }
                    this.connectionSyncArray = [];
                  }
                  return "done";
                });
              }
            }
            LocalSyncData.conceptsSyncArray = [];
            LocalSyncData.connectionSyncArray = [];
            LocalSyncData.ghostIdMap = /* @__PURE__ */ new Map();
          }
        ),
        /***/
        "./src/DataStructures/Node.ts": (
          /*!************************************!*\
            !*** ./src/DataStructures/Node.ts ***!
            \************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              Node: () => (
                /* binding */
                Node
              )
              /* harmony export */
            });
            class Node {
              constructor(key, value, leftNode, rightNode) {
                this.variants = [];
                this.height = 1;
                this.key = key;
                this.value = value;
                this.leftNode = leftNode;
                this.rightNode = rightNode;
                this.currentNode = null;
              }
              addCurrentNode(passedNode, node) {
                if (node == null) {
                  node = passedNode;
                  return node;
                }
                if (passedNode.value.typeId != node.value.typeId) {
                  node.currentNode = this.addCurrentNode(passedNode, node.currentNode);
                }
                return node;
              }
              addCurrentNodeType(passedNode, node) {
                if (node == null) {
                  node = passedNode;
                  return node;
                }
                let contains = false;
                for (let i2 = 0; i2 < node.variants.length; i2++) {
                  if (node.variants[i2].value.id == passedNode.value.id) {
                    contains = true;
                  }
                }
                if (!contains) {
                  node.variants.push(passedNode);
                }
                return node;
              }
              addNode(passedNode, node, height) {
                if (node == null) {
                  node = passedNode;
                  return node;
                }
                let LeftNode = node.leftNode;
                let RightNode = node.rightNode;
                if (node.key > passedNode.key) {
                  node.leftNode = this.addNode(passedNode, LeftNode, height);
                } else if (node.key < passedNode.key) {
                  node.rightNode = this.addNode(passedNode, RightNode, height);
                } else {
                  return node;
                }
                node.height = 1 + Math.max(this.getHeight(node.leftNode), this.getHeight(node.rightNode));
                let balancingFactor = this.getBalanceFactor(node);
                if (balancingFactor > 1) {
                  if (node.leftNode) {
                    if (passedNode.key < node.leftNode.key) {
                      return this.rightRotate(node);
                    } else if (passedNode.key > node.leftNode.key) {
                      node.leftNode = this.leftRotate(node.leftNode);
                      return this.rightRotate(node);
                    }
                  }
                }
                if (balancingFactor < -1) {
                  if (node.rightNode) {
                    if (passedNode.key > node.rightNode.key) {
                      return this.leftRotate(node);
                    } else if (passedNode.key < node.rightNode.key) {
                      node.rightNode = this.rightRotate(node.rightNode);
                      return this.leftRotate(node);
                    }
                  }
                }
                return node;
              }
              checkIfIdsInNode(node, ids, connectionArray, remainingIds) {
                if (node) {
                  if (ids.includes(node.key)) {
                    connectionArray.push(node.value);
                    let index = ids.indexOf(node.key);
                    ids.splice(index, 1);
                  }
                  if (node.leftNode) {
                    this.checkIfIdsInNode(node.leftNode, ids, connectionArray, remainingIds);
                  }
                  if (node.rightNode) {
                    this.checkIfIdsInNode(node.rightNode, ids, connectionArray, remainingIds);
                  }
                }
              }
              addCharacterNode(passedNode, node, height) {
                let debugFlag = false;
                if (passedNode.value.characterValue != "") {
                  if (node == null) {
                    if (debugFlag) {
                      console.log("equal here", node);
                    }
                    node = passedNode;
                    return node;
                  }
                  let LeftNode = node.leftNode;
                  let RightNode = node.rightNode;
                  if (node.key > passedNode.key) {
                    if (debugFlag) {
                      console.log("left  here", node);
                    }
                    node.leftNode = this.addCharacterNode(passedNode, LeftNode, height);
                  } else if (node.key < passedNode.key) {
                    if (debugFlag) {
                      console.log("right here", node, RightNode);
                    }
                    node.rightNode = this.addCharacterNode(passedNode, RightNode, height);
                  } else {
                    if (debugFlag) {
                      console.log("else here", node, passedNode);
                    }
                    if (node.key == passedNode.key && node.key != "" && node.value.id != passedNode.value.id) {
                      node.addCurrentNodeType(passedNode, node);
                    }
                    return node;
                  }
                  node.height = 1 + Math.max(this.getHeight(node.leftNode), this.getHeight(node.rightNode));
                  if (debugFlag) {
                    console.log("height here", node.height);
                  }
                  let balancingFactor = this.getBalanceFactor(node);
                  if (debugFlag) {
                    console.log("balancingFactor here", balancingFactor);
                  }
                  if (balancingFactor > 1) {
                    if (node.leftNode) {
                      if (passedNode.key < node.leftNode.key) {
                        let returner = this.rightRotate(node);
                        if (debugFlag) {
                          console.log("returning here 1 ", returner);
                        }
                        return returner;
                      } else if (passedNode.key > node.leftNode.key) {
                        node.leftNode = this.leftRotate(node.leftNode);
                        let returner = this.rightRotate(node);
                        if (debugFlag) {
                          console.log("returning here 2 ", returner);
                        }
                        return returner;
                      }
                    }
                  }
                  if (balancingFactor < -1) {
                    if (node.rightNode) {
                      if (passedNode.key > node.rightNode.key) {
                        let returner = this.leftRotate(node);
                        if (debugFlag) {
                          console.log("returning here 3 ", returner);
                        }
                        return returner;
                      } else if (passedNode.key < node.rightNode.key) {
                        node.rightNode = this.rightRotate(node.rightNode);
                        let returner = this.leftRotate(node);
                        if (debugFlag) {
                          console.log("returning here4 ", returner, node);
                        }
                        return returner;
                      }
                    }
                  }
                } else {
                  if (debugFlag) {
                    console.log("what here", node);
                  }
                }
                if (debugFlag) {
                  console.log("returning here 6", node);
                }
                return node;
              }
              addTypeNode(passedNode, node, height) {
                let debugFlag = false;
                if (passedNode.value.typeId != 0) {
                  if (node == null) {
                    if (debugFlag) {
                      console.log("equal here", node);
                    }
                    console.log("adding the type node to the tree", passedNode);
                    node = passedNode;
                    return node;
                  }
                  let LeftNode = node.leftNode;
                  let RightNode = node.rightNode;
                  if (node.key > passedNode.key) {
                    if (debugFlag) {
                      console.log("left  here", node);
                    }
                    node.leftNode = this.addTypeNode(passedNode, LeftNode, height);
                  } else if (node.key < passedNode.key) {
                    if (debugFlag) {
                      console.log("right here", node, RightNode);
                    }
                    node.rightNode = this.addTypeNode(passedNode, RightNode, height);
                  } else {
                    if (debugFlag) {
                      console.log("else here", node, passedNode);
                    }
                    console.log("adding the type node to the tree down", passedNode);
                    if (node.key == passedNode.key && node.key != 0 && node.value.id != passedNode.value.id) {
                      node.addCurrentNodeType(passedNode, node);
                    }
                    console.log("adding the type node to the tree last", node);
                    return node;
                  }
                  node.height = 1 + Math.max(this.getHeight(node.leftNode), this.getHeight(node.rightNode));
                  if (debugFlag) {
                    console.log("height here", node.height);
                  }
                  let balancingFactor = this.getBalanceFactor(node);
                  if (debugFlag) {
                    console.log("balancingFactor here", balancingFactor);
                  }
                  if (balancingFactor > 1) {
                    if (node.leftNode) {
                      if (passedNode.key < node.leftNode.key) {
                        let returner = this.rightRotate(node);
                        if (debugFlag) {
                          console.log("returning here 1 ", returner);
                        }
                        return returner;
                      } else if (passedNode.key > node.leftNode.key) {
                        node.leftNode = this.leftRotate(node.leftNode);
                        let returner = this.rightRotate(node);
                        if (debugFlag) {
                          console.log("returning here 2 ", returner);
                        }
                        return returner;
                      }
                    }
                  }
                  if (balancingFactor < -1) {
                    if (node.rightNode) {
                      if (passedNode.key > node.rightNode.key) {
                        let returner = this.leftRotate(node);
                        if (debugFlag) {
                          console.log("returning here 3 ", returner);
                        }
                        return returner;
                      } else if (passedNode.key < node.rightNode.key) {
                        node.rightNode = this.rightRotate(node.rightNode);
                        let returner = this.leftRotate(node);
                        if (debugFlag) {
                          console.log("returning here4 ", returner, node);
                        }
                        return returner;
                      }
                    }
                  }
                } else {
                  if (debugFlag) {
                    console.log("what here", node);
                  }
                }
                if (debugFlag) {
                  console.log("returning here 6", node);
                }
                return node;
              }
              rightRotate(y) {
                if (y) {
                  let x = y.leftNode;
                  if (x) {
                    let T2 = x.rightNode;
                    y.leftNode = T2;
                    x.rightNode = y;
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(y.rightNode)) + 1;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode)) + 1;
                    return x;
                  }
                }
                return y;
              }
              leftRotate(x) {
                if (x) {
                  let y = x.rightNode;
                  if (y) {
                    let T2 = y.leftNode;
                    y.leftNode = x;
                    x.rightNode = T2;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode) + 1);
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(x.rightNode) + 1);
                    return y;
                  }
                }
                return x;
              }
              getHeight(node) {
                if (node) {
                  return node.height;
                }
                return 0;
              }
              getBalanceFactor(N) {
                if (N == null) {
                  return 0;
                }
                return this.getHeight(N.leftNode) - this.getHeight(N.rightNode);
              }
              getFromNode(id, node) {
                if (node) {
                  if (id == node.key) {
                    return node;
                  } else if (id < node.key) {
                    return this.getFromNode(id, node.leftNode);
                  } else if (id > node.key) {
                    return this.getFromNode(id, node.rightNode);
                  }
                  return node;
                }
                return node;
              }
              getCharacterFromNode(value, node) {
                if (node) {
                  if (value == node.key) {
                    return node;
                  } else if (value < node.key) {
                    return this.getCharacterFromNode(value, node.leftNode);
                  } else if (value > node.key) {
                    return this.getCharacterFromNode(value, node.rightNode);
                  }
                  return node;
                }
                return node;
              }
              getCharacterFromNodeUpdated(value, node) {
                var _a;
                if (node) {
                  if (value == node.key || ((_a = node.value) === null || _a === void 0 ? void 0 : _a.typeId) == 51) {
                    return node;
                  } else if (value < node.key) {
                    return this.getCharacterFromNode(value, node.leftNode);
                  } else if (value > node.key) {
                    return this.getCharacterFromNode(value, node.rightNode);
                  }
                  return node;
                }
                return node;
              }
              getFromNodeWithCharacterAndType(value, typeId, node) {
                value = `${value}`;
                if (node) {
                  if (value == node.key) {
                    if (value == node.value.characterValue && typeId == node.value.typeId) {
                      return node;
                    } else {
                      for (let i2 = 0; i2 < node.variants.length; i2++) {
                        if (node.variants[i2].value.typeId == typeId) {
                          return node.variants[i2];
                        }
                      }
                    }
                  } else if (value < node.key) {
                    return this.getFromNodeWithCharacterAndType(value, typeId, node.leftNode);
                  } else if (value > node.key) {
                    return this.getFromNodeWithCharacterAndType(value, typeId, node.rightNode);
                  }
                  return null;
                }
                return node;
              }
              getFromNodeWithCharacterAndCategory(value, categoryId, node) {
                value = `${value}`;
                if (node) {
                  if (value == node.key) {
                    if (value == node.value.characterValue && categoryId == node.value.categoryId) {
                      return node;
                    } else {
                      for (let i2 = 0; i2 < node.variants.length; i2++) {
                        if (node.variants[i2].value.categoryId == categoryId) {
                          return node.variants[i2];
                        }
                      }
                    }
                  } else if (value < node.key) {
                    return this.getFromNodeWithCharacterAndCategory(value, categoryId, node.leftNode);
                  } else if (value > node.key) {
                    return this.getFromNodeWithCharacterAndCategory(value, categoryId, node.rightNode);
                  }
                  return null;
                }
                return node;
              }
              removeNode(passedNode, id) {
                if (passedNode == null) {
                  return passedNode;
                }
                if (passedNode.key > id) {
                  passedNode.leftNode = this.removeNode(passedNode.leftNode, id);
                  return passedNode;
                } else if (passedNode.key < id) {
                  passedNode.rightNode = this.removeNode(passedNode.rightNode, id);
                  return passedNode;
                }
                if (passedNode.leftNode == null) {
                  let temp = passedNode.rightNode;
                  passedNode = null;
                  return temp;
                } else if (passedNode.rightNode == null) {
                  let temp = passedNode.leftNode;
                  passedNode = null;
                  return temp;
                } else {
                  let immediateSuccessor = this.inOrderSuccessor(passedNode.rightNode);
                  passedNode.value = immediateSuccessor.value;
                  passedNode.key = immediateSuccessor.key;
                  passedNode.variants = immediateSuccessor.variants;
                  passedNode.currentNode = immediateSuccessor.currentNode;
                  passedNode.rightNode = this.removeNode(passedNode.rightNode, immediateSuccessor.key);
                  return passedNode;
                }
              }
              removeNodeWithVariants(passedNode, typeIdentifier, conceptId) {
                if (passedNode == null) {
                  return passedNode;
                }
                if (passedNode.key > typeIdentifier) {
                  passedNode.leftNode = this.removeNodeWithVariants(passedNode.leftNode, typeIdentifier, conceptId);
                  return passedNode;
                } else if (passedNode.key < typeIdentifier) {
                  passedNode.rightNode = this.removeNodeWithVariants(passedNode.rightNode, typeIdentifier, conceptId);
                  return passedNode;
                }
                if (passedNode.variants.length > 0) {
                  if (passedNode.value.id == conceptId) {
                    let newNode = passedNode.variants[0];
                    if (newNode) {
                      passedNode.value = newNode.value;
                      passedNode.key = newNode.key;
                      passedNode.currentNode = newNode.currentNode;
                      passedNode.variants.splice(0, 1);
                      return passedNode;
                    }
                  } else {
                    for (let i2 = 0; i2 < passedNode.variants.length; i2++) {
                      if (conceptId == passedNode.variants[i2].value.id) {
                        passedNode.variants.splice(i2, 1);
                        return passedNode;
                      }
                    }
                  }
                }
                if (passedNode.leftNode == null) {
                  let temp = passedNode.rightNode;
                  passedNode = null;
                  return temp;
                } else if (passedNode.rightNode == null) {
                  let temp = passedNode.leftNode;
                  passedNode = null;
                  return temp;
                } else {
                  let immediateSuccessor = this.inOrderSuccessor(passedNode.rightNode);
                  passedNode.value = immediateSuccessor.value;
                  passedNode.key = immediateSuccessor.key;
                  passedNode.variants = immediateSuccessor.variants;
                  passedNode.currentNode = immediateSuccessor.currentNode;
                  passedNode.rightNode = this.removeNodeWithVariants(passedNode.rightNode, immediateSuccessor.key, conceptId);
                  return passedNode;
                }
              }
              countNodeBelow(root) {
                if (root == null) {
                  return 0;
                }
                return 1 + this.countNodeBelow(root.leftNode) + this.countNodeBelow(root.rightNode);
              }
              inOrderSuccessor(root) {
                while (root.leftNode != null) {
                  root = root.leftNode;
                }
                return root;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/PatcherStructure.ts": (
          /*!************************************************!*\
            !*** ./src/DataStructures/PatcherStructure.ts ***!
            \************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              PatcherStructure: () => (
                /* binding */
                PatcherStructure
              )
              /* harmony export */
            });
            class PatcherStructure {
              constructor() {
                this.compositionId = 0;
                this.userId = 999;
                this.sessionId = 999;
                this.accessId = 4;
                this.ofTheCompositionId = 0;
                this.patchObject = {};
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/ReservedIds.ts": (
          /*!*******************************************!*\
            !*** ./src/DataStructures/ReservedIds.ts ***!
            \*******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              ReservedConnectionIds: () => (
                /* binding */
                ReservedConnectionIds
              ),
              /* harmony export */
              ReservedIds: () => (
                /* binding */
                ReservedIds
              )
              /* harmony export */
            });
            var _Api_GetReservedConnectionIds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetReservedConnectionIds */
              "./src/Api/GetReservedConnectionIds.ts"
            );
            var _Api_GetReservedIds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Api/GetReservedIds */
              "./src/Api/GetReservedIds.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class ReservedIds {
              static getId() {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.ids.length < 5) {
                    var ids = yield (0, _Api_GetReservedIds__WEBPACK_IMPORTED_MODULE_1__.GetReservedIds)();
                  }
                  var id = this.ids[0];
                  this.ids.shift();
                  return id;
                });
              }
              static AddId(id) {
                if (!this.ids.includes(id)) {
                  this.ids.push(id);
                }
              }
            }
            ReservedIds.ids = [];
            class ReservedConnectionIds {
              static getId() {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.connectionIds.length < 5) {
                    var connectionIds = yield (0, _Api_GetReservedConnectionIds__WEBPACK_IMPORTED_MODULE_0__.GetReservedConnectionIds)();
                  }
                  var id = this.connectionIds[0];
                  this.connectionIds.shift();
                  return id;
                });
              }
              static AddId(id) {
                if (!this.connectionIds.includes(id)) {
                  this.connectionIds.push(id);
                }
              }
            }
            ReservedConnectionIds.connectionIds = [];
          }
        ),
        /***/
        "./src/DataStructures/Responses/ErrorResponse.ts": (
          /*!*******************************************************!*\
            !*** ./src/DataStructures/Responses/ErrorResponse.ts ***!
            \*******************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              FreeSchemaResponse: () => (
                /* binding */
                FreeSchemaResponse
              )
              /* harmony export */
            });
            var _BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            class FreeSchemaResponse {
              /**
               *
               * @param message this is the message for the response
               * @param ok  this is the status can be true or false boolean in case that request succeds or fails
               * @param status this is the standard http codes 200 for ok, 500 for internal error etc.
               * @param data  this is the standard data that can be anything.
               */
              constructor(message, ok, status, data) {
                this.url = _BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.BASE_URL;
                this.message = message;
                this.ok = ok;
                this.status = status;
                this.data = data;
              }
              /**
               * This function gets the message of the error
               * @returns
               */
              getMessage() {
                return this.message;
              }
              /**
               *
               * @param message This allows you to set a message variable in the FreeSchemaResponse
               * @returns
               */
              setMessage(message) {
                this.message = message;
                return this;
              }
              /**
               *
               * @returns status code of the FreeSchemaResponse
               */
              getStatus() {
                return this.status;
              }
              /**
               *
               * @param status standard http error codes (200 ok , 401 unauthorized, 500 internal server error etc.)
               * @returns
               */
              setStatus(status) {
                this.status = status;
                return this;
              }
              /**
               *
               * @returns returns the data for the request
               */
              getData() {
                return this.data;
              }
              /**
               *
               * @param data any type of data can be given here
               * @returns FreeSchemaReponse
               */
              setData(data) {
                this.data = data;
                return this;
              }
              /**
               *
               * @returns the status of the FreeSchemaReponse (either true or false)
               */
              getOk() {
                return this.ok;
              }
              /**
               *
               * @param status if the status is true then the response was successful else the success was not achieved.
               * @returns returns the FreeSchemaResponse
               */
              setOk(ok) {
                this.ok = ok;
                return this;
              }
              /**
               *
               * @returns the url that caused the error
               */
              getUrl() {
                return this.url;
              }
              /**
               *
               * @param url the url from which the error or response originates
               * @returns FreeSchemaResponse
               */
              setUrl(url) {
                this.url = url;
                return this;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/Returner.ts": (
          /*!****************************************!*\
            !*** ./src/DataStructures/Returner.ts ***!
            \****************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              Returner: () => (
                /* binding */
                Returner
              )
              /* harmony export */
            });
            class Returner {
              constructor(id, userId, referentId, isNew) {
                this.id = id;
                this.userId = userId;
                this.referentId = referentId;
                this.isNew = isNew;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/SearchQuery.ts": (
          /*!*******************************************!*\
            !*** ./src/DataStructures/SearchQuery.ts ***!
            \*******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SearchQuery: () => (
                /* binding */
                SearchQuery
              )
              /* harmony export */
            });
            class SearchQuery {
              constructor() {
                this.composition = 0;
                this.type = "";
                this.linker = "";
                this.inpage = 10;
                this.page = 1;
                this.listLinkers = [];
                this.fullLinkers = [];
                this.textSearch = "";
                this.logic = "or";
                this.reverse = false;
                this.doFilter = false;
                this.filterSearches = [];
                this.selectors = [];
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/Search/SearchStructure.ts": (
          /*!******************************************************!*\
            !*** ./src/DataStructures/Search/SearchStructure.ts ***!
            \******************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SearchStructure: () => (
                /* binding */
                SearchStructure
              )
              /* harmony export */
            });
            class SearchStructure {
              constructor() {
                this.type = "";
                this.search = "";
                this.composition = "";
                this.internalComposition = "";
                this.userId = 999;
                this.inpage = 10;
                this.page = 1;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/Security/TokenStorage.ts": (
          /*!*****************************************************!*\
            !*** ./src/DataStructures/Security/TokenStorage.ts ***!
            \*****************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              TokenStorage: () => (
                /* binding */
                TokenStorage
              )
              /* harmony export */
            });
            class TokenStorage {
            }
            TokenStorage.BearerAccessToken = "";
          }
        ),
        /***/
        "./src/DataStructures/Session/SessionData.ts": (
          /*!***************************************************!*\
            !*** ./src/DataStructures/Session/SessionData.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SessionData: () => (
                /* binding */
                SessionData
              )
              /* harmony export */
            });
            class SessionData {
              constructor() {
                this.id = "0";
                this.remote_address = "";
                this.server_port = "";
                this.server_address = "";
                this.server_name = "";
                this.server_software = "";
                this.http_user_agent = "";
                this.self = "";
                this.port = "";
                this.userId = "";
                this.email = "";
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/SettingData.ts": (
          /*!*******************************************!*\
            !*** ./src/DataStructures/SettingData.ts ***!
            \*******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SettingData: () => (
                /* binding */
                SettingData
              )
              /* harmony export */
            });
            class SettingData {
              constructor(isOnlineSync) {
                this.id = 1;
                this.isOnlineSync = false;
                this.isOnlineSync = isOnlineSync;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/Settings.ts": (
          /*!****************************************!*\
            !*** ./src/DataStructures/Settings.ts ***!
            \****************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              Settings: () => (
                /* binding */
                Settings
              )
              /* harmony export */
            });
            class Settings {
            }
            Settings.isUpdated = false;
            Settings.isOnlineSync = false;
          }
        ),
        /***/
        "./src/DataStructures/SyncData.ts": (
          /*!****************************************!*\
            !*** ./src/DataStructures/SyncData.ts ***!
            \****************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SyncData: () => (
                /* binding */
                SyncData
              )
              /* harmony export */
            });
            var _Database_indexeddb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./../Database/indexeddb */
              "./src/Database/indexeddb.ts"
            );
            var _Api_Create_CreateTheConceptApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Api/Create/CreateTheConceptApi */
              "./src/Api/Create/CreateTheConceptApi.ts"
            );
            var _Api_Create_CreateTheConnectionApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Api/Create/CreateTheConnectionApi */
              "./src/Api/Create/CreateTheConnectionApi.ts"
            );
            var _ConceptData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _ConnectionData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ./ConnectionData */
              "./src/DataStructures/ConnectionData.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class SyncData {
              static CheckContains(concept) {
                var contains = false;
                for (var i2 = 0; i2 < this.conceptsSyncArray.length; i2++) {
                  if (this.conceptsSyncArray[i2].id == concept.id) {
                    contains = true;
                  }
                }
                return contains;
              }
              static SyncDataDelete(id) {
                for (var i2 = 0; i2 < this.conceptsSyncArray.length; i2++) {
                  if (id == this.conceptsSyncArray[i2].id) {
                    this.conceptsSyncArray.splice(i2, 1);
                  }
                }
                for (var i2 = 0; i2 < this.connectionSyncArray.length; i2++) {
                  if (this.connectionSyncArray[i2].ofTheConceptId == id || this.connectionSyncArray[i2].toTheConceptId == id || this.connectionSyncArray[i2].typeId == id) {
                    this.connectionSyncArray.splice(i2, 1);
                  }
                }
              }
              static CheckContainsConnection(connection) {
                var contains = false;
                for (var i2 = 0; i2 < this.connectionSyncArray.length; i2++) {
                  if (this.connectionSyncArray[i2].id == connection.id) {
                    contains = true;
                  }
                }
                return contains;
              }
              static AddConcept(concept) {
                var contains = false;
                if (!contains) {
                  this.conceptsSyncArray.push(concept);
                }
              }
              static RemoveConcept(concept) {
                for (var i2 = 0; i2 < this.conceptsSyncArray.length; i2++) {
                  if (this.conceptsSyncArray[i2].id == concept.id) {
                    this.conceptsSyncArray.splice(i2, 1);
                  }
                }
              }
              static AddConnection(connection) {
                this.connectionSyncArray.push(connection);
              }
              static RemoveConnection(connection) {
                for (var i2 = 0; i2 < this.connectionSyncArray.length; i2++) {
                  if (this.connectionSyncArray[i2].id == connection.id) {
                    this.connectionSyncArray.splice(i2, 1);
                  }
                }
              }
              static SyncDataOnline() {
                return __awaiter(this, void 0, void 0, function* () {
                  for (let i2 = 0; i2 < this.conceptsSyncArray.length; i2++) {
                    _ConceptData__WEBPACK_IMPORTED_MODULE_3__.ConceptsData.AddConcept(this.conceptsSyncArray[i2]);
                  }
                  for (let i2 = 0; i2 < this.connectionSyncArray.length; i2++) {
                    _ConnectionData__WEBPACK_IMPORTED_MODULE_4__.ConnectionData.AddConnection(this.connectionSyncArray[i2]);
                  }
                  if (this.conceptsSyncArray.length > 0) {
                    let conceptsArray = this.conceptsSyncArray.slice();
                    this.conceptsSyncArray = [];
                    (0, _Api_Create_CreateTheConceptApi__WEBPACK_IMPORTED_MODULE_1__.CreateTheConceptApi)(conceptsArray);
                  }
                  if (this.connectionSyncArray.length > 0) {
                    let connectionsArray = this.connectionSyncArray.slice();
                    this.connectionSyncArray = [];
                    yield (0, _Api_Create_CreateTheConnectionApi__WEBPACK_IMPORTED_MODULE_2__.CreateTheConnectionApi)(connectionsArray);
                  }
                  return "done";
                });
              }
              static syncDataLocalDb() {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.conceptsSyncArray.length > 0) {
                    for (let i2 = 0; i2 < this.conceptsSyncArray.length; i2++) {
                      (0, _Database_indexeddb__WEBPACK_IMPORTED_MODULE_0__.storeToDatabase)("localconcept", this.conceptsSyncArray[i2]);
                    }
                    this.conceptsSyncArray = [];
                  }
                  if (this.connectionSyncArray.length > 0) {
                    for (let i2 = 0; i2 < this.connectionSyncArray.length; i2++) {
                      (0, _Database_indexeddb__WEBPACK_IMPORTED_MODULE_0__.storeToDatabase)("localconnection", this.connectionSyncArray[i2]);
                    }
                    this.connectionSyncArray = [];
                  }
                  return "done";
                });
              }
            }
            SyncData.conceptsSyncArray = [];
            SyncData.connectionSyncArray = [];
          }
        ),
        /***/
        "./src/DataStructures/TheCharacter.ts": (
          /*!********************************************!*\
            !*** ./src/DataStructures/TheCharacter.ts ***!
            \********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              TheCharacter: () => (
                /* binding */
                TheCharacter
              )
              /* harmony export */
            });
            class TheCharacter {
              constructor(userId, data, securityId, securityUserId, accessId, accessUserId, sessionId, sessionUserId, entryTimestamp, isNew) {
                this.id = 0;
                this.isNew = false;
                this.userId = userId;
                this.data = `${data}`;
                this.securityId = securityId;
                this.securityUserId = securityUserId;
                this.accessId = accessId;
                this.accessUserId = accessUserId;
                this.sessionId = sessionId;
                this.sessionUserId = sessionUserId;
                this.isNew = isNew;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/TheTexts.ts": (
          /*!****************************************!*\
            !*** ./src/DataStructures/TheTexts.ts ***!
            \****************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              TheTexts: () => (
                /* binding */
                TheTexts
              )
              /* harmony export */
            });
            class TheTexts {
              constructor(userId, data, securityId, securityUserId, accessId, accessUserId, sessionId, sessionUserId, entryTimestamp, isNew) {
                this.id = 0;
                this.userId = userId;
                this.data = data;
                this.securityId = securityId;
                this.securityUserId = securityUserId;
                this.accessId = accessId;
                this.accessUserId = accessUserId;
                this.sessionId = sessionId;
                this.sessionUserId = sessionUserId;
                this.entryTimestamp = entryTimestamp;
                this.isNew = isNew;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/TypeNode.ts": (
          /*!****************************************!*\
            !*** ./src/DataStructures/TypeNode.ts ***!
            \****************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              TypeNode: () => (
                /* binding */
                TypeNode
              )
              /* harmony export */
            });
            class TypeNode {
              constructor(key, value) {
                this.value = [];
                this.height = 1;
                this.key = key;
                this.value.push(value);
                this.leftNode = null;
                this.rightNode = null;
                this.currentNode = null;
              }
              addType(node, key, value) {
                var _a, _b, _c, _d;
                if (node == null) {
                  return new TypeNode(key, value);
                }
                if (key < node.key) {
                  node.leftNode = this.addType(node.leftNode, key, value);
                } else if (key > node.key) {
                  node.rightNode = this.addType(node.rightNode, key, value);
                } else {
                  node.value.push(value);
                  return node;
                }
                node.height = Math.max(this.getHeight(node.leftNode), this.getHeight(node.rightNode)) + 1;
                const balance = this.getBalanceFactor(node);
                if (balance > 1 && key < ((_a = node.leftNode) === null || _a === void 0 ? void 0 : _a.key)) {
                  return this.rightRotate(node);
                }
                if (balance < -1 && key > ((_b = node.rightNode) === null || _b === void 0 ? void 0 : _b.key)) {
                  return this.leftRotate(node);
                }
                if (balance > 1 && key > ((_c = node.leftNode) === null || _c === void 0 ? void 0 : _c.key)) {
                  node.leftNode = this.leftRotate(node.leftNode);
                  return this.rightRotate(node);
                }
                if (balance < -1 && key < ((_d = node.rightNode) === null || _d === void 0 ? void 0 : _d.key)) {
                  node.rightNode = this.rightRotate(node.rightNode);
                  return this.leftRotate(node);
                }
                return node;
              }
              rightRotate(y) {
                if (y) {
                  let x = y.leftNode;
                  if (x) {
                    let T2 = x.rightNode;
                    y.leftNode = T2;
                    x.rightNode = y;
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(y.rightNode)) + 1;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode)) + 1;
                    return x;
                  }
                }
                return y;
              }
              leftRotate(x) {
                if (x) {
                  let y = x.rightNode;
                  if (y) {
                    let T2 = y.leftNode;
                    y.leftNode = x;
                    x.rightNode = T2;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode) + 1);
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(x.rightNode) + 1);
                    return y;
                  }
                }
                return x;
              }
              getHeight(node) {
                if (node) {
                  return node.height;
                }
                return 0;
              }
              getBalanceFactor(N) {
                if (N == null) {
                  return 0;
                }
                return this.getHeight(N.leftNode) - this.getHeight(N.rightNode);
              }
              getFromNode(id, node) {
                if (node) {
                  if (id == node.key) {
                    return node;
                  } else if (id < node.key) {
                    return this.getFromNode(id, node.leftNode);
                  } else if (id > node.key) {
                    return this.getFromNode(id, node.rightNode);
                  }
                  return node;
                }
                return node;
              }
              removeNodeWithVariants(passedNode, key, conceptId) {
                if (passedNode == null) {
                  return passedNode;
                }
                if (passedNode.key > key) {
                  passedNode.leftNode = this.removeNodeWithVariants(passedNode.leftNode, key, conceptId);
                  return passedNode;
                } else if (passedNode.key < key) {
                  passedNode.rightNode = this.removeNodeWithVariants(passedNode.rightNode, key, conceptId);
                  return passedNode;
                }
                if (passedNode.value.length > 0) {
                  for (let i2 = 0; i2 < passedNode.value.length; i2++) {
                    if (conceptId == passedNode.value[i2]) {
                      passedNode.value.splice(i2, 1);
                      return passedNode;
                    }
                  }
                }
                if (passedNode.leftNode == null) {
                  let temp = passedNode.rightNode;
                  passedNode = null;
                  return temp;
                } else if (passedNode.rightNode == null) {
                  let temp = passedNode.leftNode;
                  passedNode = null;
                  return temp;
                } else {
                  let immediateSuccessor = this.inOrderSuccessor(passedNode.rightNode);
                  passedNode.value = immediateSuccessor.value;
                  passedNode.key = immediateSuccessor.key;
                  passedNode.currentNode = immediateSuccessor.currentNode;
                  passedNode.rightNode = this.removeNodeWithVariants(passedNode.rightNode, immediateSuccessor.key, conceptId);
                  return passedNode;
                }
              }
              countNodeBelow(root) {
                if (root == null) {
                  return 0;
                }
                return 1 + this.countNodeBelow(root.leftNode) + this.countNodeBelow(root.rightNode);
              }
              inOrderSuccessor(root) {
                while (root.leftNode != null) {
                  root = root.leftNode;
                }
                return root;
              }
            }
          }
        ),
        /***/
        "./src/DataStructures/User/UserBinaryTree.ts": (
          /*!***************************************************!*\
            !*** ./src/DataStructures/User/UserBinaryTree.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              UserBinaryTree: () => (
                /* binding */
                UserBinaryTree
              )
              /* harmony export */
            });
            var _UserNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./UserNode */
              "./src/DataStructures/User/UserNode.ts"
            );
            var _IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./../IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class UserBinaryTree {
              static compositeKey(userId, sessionId) {
                let userHex = ("0000" + userId.toString(16).toUpperCase()).slice(-4);
                let sessionHex = ("0000" + sessionId.toString(16).toUpperCase()).slice(-4);
                return userHex + sessionHex;
              }
              static addNodeToTree(node) {
                if (this.root == null) {
                  this.root = node;
                  return this.root;
                } else {
                  this.root = this.root.addNode(node, this.root, this.root.height);
                }
              }
              static waitForDataToLoad() {
                return __awaiter(this, void 0, void 0, function* () {
                  return new Promise((resolve, reject) => {
                    this.checkFlag(resolve);
                    setTimeout(() => {
                      reject("not");
                    }, 25e3);
                  });
                });
              }
              static checkFlag(resolve) {
                if (_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__.IdentifierFlags.isDataLoaded) {
                  return resolve("done");
                } else {
                  setTimeout(UserBinaryTree.checkFlag, 1e3, resolve);
                }
              }
              static addConceptToTree(concept, userId, sessionId = 999) {
                let key = this.compositeKey(userId, sessionId);
                var node = new _UserNode__WEBPACK_IMPORTED_MODULE_0__.UserNode(key, concept, null, null);
                this.addNodeToTree(node);
              }
              static getNodeFromTree(userId, sessionId) {
                return __awaiter(this, void 0, void 0, function* () {
                  try {
                    var data = yield this.waitForDataToLoad();
                  } catch (exception) {
                    return null;
                  }
                  let key = this.compositeKey(userId, sessionId);
                  if (this.root) {
                    var Node = this.root.getFromNode(key, this.root);
                    return Node;
                  }
                  return null;
                });
              }
              static removeNodeFromTree(userId_1) {
                return __awaiter(this, arguments, void 0, function* (userId, sessionId = 999) {
                  if (this.root) {
                    let key = this.compositeKey(userId, sessionId);
                    this.root = this.root.removeNode(this.root, key);
                  }
                });
              }
              static countNumberOfNodes() {
                if (this.root) {
                  return this.root.countNodeBelow(this.root);
                }
                return 0;
              }
            }
            UserBinaryTree.root = null;
          }
        ),
        /***/
        "./src/DataStructures/User/UserNode.ts": (
          /*!*********************************************!*\
            !*** ./src/DataStructures/User/UserNode.ts ***!
            \*********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              UserNode: () => (
                /* binding */
                UserNode
              )
              /* harmony export */
            });
            class UserNode {
              constructor(key, value, leftNode, rightNode) {
                this.value = [];
                this.height = 1;
                this.key = key;
                this.value.push(value);
                this.leftNode = leftNode;
                this.rightNode = rightNode;
              }
              addNode(passedNode, node, height) {
                if (node == null) {
                  node = passedNode;
                  return node;
                }
                var LeftNode = node.leftNode;
                var RightNode = node.rightNode;
                if (node.key > passedNode.key) {
                  node.leftNode = this.addNode(passedNode, LeftNode, height);
                } else if (node.key < passedNode.key) {
                  node.rightNode = this.addNode(passedNode, RightNode, height);
                } else {
                  node.value.push(...passedNode.value);
                  return node;
                }
                node.height = 1 + Math.max(this.getHeight(node.leftNode), this.getHeight(node.rightNode));
                let balancingFactor = this.getBalanceFactor(node);
                if (balancingFactor > 1) {
                  if (node.leftNode) {
                    if (passedNode.key < node.leftNode.key) {
                      return this.rightRotate(node);
                    } else if (passedNode.key > node.leftNode.key) {
                      node.leftNode = this.leftRotate(node.leftNode);
                      return this.rightRotate(node);
                    }
                  }
                }
                if (balancingFactor < -1) {
                  if (node.rightNode) {
                    if (passedNode.key > node.rightNode.key) {
                      return this.leftRotate(node);
                    } else if (passedNode.key < node.rightNode.key) {
                      node.rightNode = this.rightRotate(node.rightNode);
                      return this.leftRotate(node);
                    }
                  }
                }
                return node;
              }
              rightRotate(y) {
                if (y) {
                  let x = y.leftNode;
                  if (x) {
                    let T2 = x.rightNode;
                    y.leftNode = T2;
                    x.rightNode = y;
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(y.rightNode)) + 1;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode)) + 1;
                    return x;
                  }
                }
                return y;
              }
              leftRotate(x) {
                if (x) {
                  let y = x.rightNode;
                  if (y) {
                    let T2 = y.leftNode;
                    y.leftNode = x;
                    x.rightNode = T2;
                    x.height = Math.max(this.getHeight(x.leftNode), this.getHeight(x.rightNode) + 1);
                    y.height = Math.max(this.getHeight(y.leftNode), this.getHeight(x.rightNode) + 1);
                    return y;
                  }
                }
                return x;
              }
              getHeight(node) {
                if (node) {
                  return node.height;
                }
                return 0;
              }
              getBalanceFactor(N) {
                if (N == null) {
                  return 0;
                }
                return this.getHeight(N.leftNode) - this.getHeight(N.rightNode);
              }
              getFromNode(id, node) {
                if (node) {
                  if (id == node.key) {
                    return node;
                  } else if (id < node.key) {
                    return this.getFromNode(id, node.leftNode);
                  } else if (id > node.key) {
                    return this.getFromNode(id, node.rightNode);
                  }
                  return node;
                }
                return node;
              }
              removeNode(passedNode, id) {
                if (passedNode == null) {
                  return passedNode;
                }
                if (passedNode.key > id) {
                  passedNode.leftNode = this.removeNode(passedNode.leftNode, id);
                  return passedNode;
                } else if (passedNode.key < id) {
                  passedNode.rightNode = this.removeNode(passedNode.rightNode, id);
                  return passedNode;
                }
                if (passedNode.leftNode == null) {
                  let temp = passedNode.rightNode;
                  passedNode = null;
                  return temp;
                } else if (passedNode.rightNode == null) {
                  let temp = passedNode.leftNode;
                  passedNode = null;
                  return temp;
                } else {
                  var immediateSuccessor = this.inOrderSuccessor(passedNode.rightNode);
                  passedNode.value = immediateSuccessor.value;
                  passedNode.key = immediateSuccessor.key;
                  passedNode.rightNode = this.removeNode(passedNode.rightNode, immediateSuccessor.key);
                  return passedNode;
                }
              }
              countNodeBelow(root) {
                if (root == null) {
                  return 0;
                }
                return 1 + this.countNodeBelow(root.leftNode) + this.countNodeBelow(root.rightNode);
              }
              inOrderSuccessor(root) {
                while (root.leftNode != null) {
                  root = root.leftNode;
                }
                return root;
              }
            }
          }
        ),
        /***/
        "./src/Database/NoIndexDb.ts": (
          /*!***********************************!*\
            !*** ./src/Database/NoIndexDb.ts ***!
            \***********************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              AiUpdateFlag: () => (
                /* binding */
                AiUpdateFlag
              ),
              /* harmony export */
              GetStatsFromDatabase: () => (
                /* binding */
                GetStatsFromDatabase
              ),
              /* harmony export */
              getAllFromLocalDb: () => (
                /* binding */
                getAllFromLocalDb
              ),
              /* harmony export */
              getFromDatabaseWithType: () => (
                /* binding */
                getFromDatabaseWithType
              ),
              /* harmony export */
              getObjectsFromIndexDb: () => (
                /* binding */
                getObjectsFromIndexDb
              ),
              /* harmony export */
              openDatabase: () => (
                /* binding */
                openDatabase
              ),
              /* harmony export */
              removeFromDatabase: () => (
                /* binding */
                removeFromDatabase
              ),
              /* harmony export */
              storeToDatabase: () => (
                /* binding */
                storeToDatabase
              )
              /* harmony export */
            });
            var _DataStructures_SettingData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/SettingData */
              "./src/DataStructures/SettingData.ts"
            );
            var _indexeddb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./indexeddb */
              "./src/Database/indexeddb.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function openDatabase(databaseName) {
              return _indexeddb__WEBPACK_IMPORTED_MODULE_1__.IndexDb.db;
            }
            function storeToDatabase(databaseName, object) {
            }
            function GetStatsFromDatabase() {
              var settingsData = new _DataStructures_SettingData__WEBPACK_IMPORTED_MODULE_0__.SettingData(true);
              return settingsData;
            }
            function AiUpdateFlag(object) {
            }
            function getFromDatabaseWithType(databaseName, type, id) {
              return __awaiter(this, void 0, void 0, function* () {
              });
            }
            function getObjectsFromIndexDb(databaseName) {
              return __awaiter(this, void 0, void 0, function* () {
              });
            }
            function removeFromDatabase(databaseName, id) {
            }
            function getAllFromLocalDb(databaseName) {
              return __awaiter(this, void 0, void 0, function* () {
              });
            }
          }
        ),
        /***/
        "./src/Database/indexdblocal.ts": (
          /*!**************************************!*\
            !*** ./src/Database/indexdblocal.ts ***!
            \**************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetLockStatus: () => (
                /* binding */
                GetLockStatus
              ),
              /* harmony export */
              LocalIndexDb: () => (
                /* binding */
                LocalIndexDb
              ),
              /* harmony export */
              LockTheDatabase: () => (
                /* binding */
                LockTheDatabase
              ),
              /* harmony export */
              UnlockDatabase: () => (
                /* binding */
                UnlockDatabase
              ),
              /* harmony export */
              UpdateToDatabase: () => (
                /* binding */
                UpdateToDatabase
              ),
              /* harmony export */
              getObjectsFromLocalIndexDb: () => (
                /* binding */
                getObjectsFromLocalIndexDb
              ),
              /* harmony export */
              openDatabase: () => (
                /* binding */
                openDatabase
              ),
              /* harmony export */
              removeFromDatabase: () => (
                /* binding */
                removeFromDatabase
              ),
              /* harmony export */
              storeToDatabase: () => (
                /* binding */
                storeToDatabase
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            var version = 9;
            class LocalIndexDb {
            }
            function openDatabase(databaseName) {
              return new Promise(function(resolve, reject) {
                if (LocalIndexDb.db) {
                  resolve(LocalIndexDb.db);
                }
                let localDbName = _app__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.BASE_URL + "_FreeSchemaLocal" + _app__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.BASE_APPLICATION;
                const request = indexedDB.open(localDbName, version);
                request.onerror = (event) => {
                  console.error("Why didn't you allow my web app to use IndexedDB?!", event);
                  indexedDB.deleteDatabase(localDbName);
                  openDatabase(databaseName);
                  reject(event);
                };
                request.onsuccess = function(event) {
                  var target = event.target;
                  LocalIndexDb.db = target.result;
                  resolve(LocalIndexDb.db);
                };
                request.onupgradeneeded = (event) => {
                  var target = event.target;
                  var db = target.result;
                  var conceptDb = "localconcept";
                  var connectionDb = "localconnection";
                  var idDb = "localid";
                  console.log("this is the version upgrade", version);
                  if (db.objectStoreNames.contains(conceptDb)) {
                    db.deleteObjectStore(conceptDb);
                  }
                  if (db.objectStoreNames.contains(connectionDb)) {
                    db.deleteObjectStore(connectionDb);
                  }
                  if (db.objectStoreNames.contains(idDb)) {
                    db.deleteObjectStore(idDb);
                  }
                  if (!db.objectStoreNames.contains(conceptDb)) {
                    let objectStore = db.createObjectStore(conceptDb, { keyPath: "id" });
                    objectStore.transaction.oncomplete = (event2) => {
                    };
                  }
                  if (!db.objectStoreNames.contains(connectionDb)) {
                    let objectStore = db.createObjectStore(connectionDb, { keyPath: "id" });
                    objectStore.transaction.oncomplete = (event2) => {
                    };
                  }
                  if (!db.objectStoreNames.contains(idDb)) {
                    let objectStore = db.createObjectStore(idDb, { keyPath: "id" });
                    objectStore.transaction.oncomplete = (event2) => {
                      storeToDatabase(idDb, { "id": 0, "value": -100 });
                      storeToDatabase(idDb, { "id": 1, "value": -200 });
                      storeToDatabase(idDb, { "id": 3, "value": _app__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.BASE_RANDOMIZER });
                    };
                  }
                  resolve(db);
                };
              });
            }
            function LockTheDatabase(databaseName) {
              return __awaiter(this, void 0, void 0, function* () {
                console.log("lock : locked db");
                yield UpdateToDatabase(databaseName, { "id": 4, "value": true });
              });
            }
            function UnlockDatabase(databaseName) {
              return __awaiter(this, void 0, void 0, function* () {
                yield UpdateToDatabase(databaseName, { "id": 4, "value": false });
                console.log("lock :locked opened");
              });
            }
            function GetLockStatus(databaseName) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let list = yield getObjectsFromLocalIndexDb(databaseName);
                  console.log("lock :for lock locked", list);
                  if (Array.isArray(list)) {
                    console.log("lock : This is the list vallue", list[4].value);
                    return list[4].value;
                  }
                  console.log("lock : This is not a list", Array.isArray(list));
                  return false;
                } catch (error) {
                  console.log("lock : this is the error", error);
                }
              });
            }
            function getObjectsFromLocalIndexDb(databaseName) {
              return __awaiter(this, void 0, void 0, function* () {
                return new Promise(function(resolve, reject) {
                  openDatabase(databaseName).then((db) => {
                    var concept;
                    var ConceptList = [];
                    let transaction = db.transaction(databaseName, "readwrite");
                    let objectStore = transaction.objectStore(databaseName);
                    var allobjects = objectStore.getAll();
                    allobjects.onsuccess = () => {
                      const students = allobjects.result;
                      for (var i2 = 0; i2 < students.length; i2++) {
                        ConceptList.push(students[i2]);
                      }
                      resolve(ConceptList);
                    };
                  }).catch((event) => {
                    let errorObject = {
                      "status": 400,
                      "ok": false,
                      "message": "Cannot get objects from database because you cannot open the Local database",
                      "data": event
                    };
                    reject(errorObject);
                  });
                });
              });
            }
            function storeToDatabase(databaseName, object) {
              return new Promise(function(resolve, reject) {
                openDatabase(databaseName).then((db) => {
                  let transaction = db.transaction(databaseName, "readwrite");
                  let objStore = transaction.objectStore(databaseName);
                  const request = objStore.add(object);
                  request.onsuccess = (event) => {
                    resolve(object);
                  };
                  request.onerror = (event) => {
                    let errorObject = {
                      "status": 400,
                      "ok": false,
                      "message": "Cannot store to the Local database " + databaseName,
                      "data": event,
                      "body": object
                    };
                    reject(errorObject);
                  };
                }).catch((event) => {
                  let errorObject = {
                    "status": 400,
                    "ok": false,
                    "message": "Cannot store to database because you cannot open the Local database",
                    "data": event
                  };
                  reject(errorObject);
                });
              });
            }
            function UpdateToDatabase(databaseName, object) {
              return new Promise(function(resolve, reject) {
                console.log("this is wriring to the database local", object);
                openDatabase(databaseName).then((db) => {
                  let transaction = db.transaction(databaseName, "readwrite");
                  let objStore = transaction.objectStore(databaseName);
                  const request = objStore.put(object);
                  request.onsuccess = (event) => {
                    resolve(object);
                  };
                  request.onerror = (event) => {
                    let errorObject = {
                      "status": 400,
                      "ok": false,
                      "message": "Cannot Update to the Local database" + databaseName,
                      "data": event,
                      "body": object
                    };
                    reject(errorObject);
                  };
                }).catch((event) => {
                  let errorObject = {
                    "status": 400,
                    "ok": false,
                    "message": "Cannot update to database because you cannot open the Local database",
                    "data": event
                  };
                  reject(errorObject);
                });
              });
            }
            function removeFromDatabase(databaseName, id) {
              return new Promise(function(resolve, reject) {
                openDatabase(databaseName).then((db) => {
                  let transaction = db.transaction(databaseName, "readwrite");
                  let objectStore = transaction.objectStore(databaseName);
                  let getRequest = objectStore.delete(id);
                  getRequest.onsuccess = function(event) {
                    resolve(id);
                  };
                  getRequest.onerror = function(event) {
                    let errorObject = {
                      "status": 400,
                      "ok": false,
                      "message": "Cannot Update to the Local database" + databaseName,
                      "data": event,
                      "body": id
                    };
                    reject(errorObject);
                  };
                }).catch((event) => {
                  let errorObject = {
                    "status": 400,
                    "ok": false,
                    "message": "Cannot remove object from database because you cannot open the Local database",
                    "data": event
                  };
                  reject(errorObject);
                });
              });
            }
          }
        ),
        /***/
        "./src/Database/indexeddb.ts": (
          /*!***********************************!*\
            !*** ./src/Database/indexeddb.ts ***!
            \***********************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              AiUpdateFlag: () => (
                /* binding */
                AiUpdateFlag
              ),
              /* harmony export */
              GetLastSettingsFromDatabase: () => (
                /* binding */
                GetLastSettingsFromDatabase
              ),
              /* harmony export */
              IndexDb: () => (
                /* binding */
                IndexDb
              ),
              /* harmony export */
              UpdateToDatabase: () => (
                /* binding */
                UpdateToDatabase
              ),
              /* harmony export */
              getObjectsFromIndexDb: () => (
                /* binding */
                getObjectsFromIndexDb
              ),
              /* harmony export */
              openDatabase: () => (
                /* binding */
                openDatabase
              ),
              /* harmony export */
              removeFromDatabase: () => (
                /* binding */
                removeFromDatabase
              ),
              /* harmony export */
              storeToDatabase: () => (
                /* binding */
                storeToDatabase
              )
              /* harmony export */
            });
            var _DataStructures_SettingData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/SettingData */
              "./src/DataStructures/SettingData.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            var version = 9;
            class IndexDb {
            }
            function openDatabase(databaseName) {
              return new Promise(function(resolve, reject) {
                if (IndexDb.db) {
                  resolve(IndexDb.db);
                }
                let dbName = _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.BASE_URL + "_FreeSchema" + _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_1__.BaseUrl.BASE_APPLICATION;
                const request = indexedDB.open(dbName, version);
                request.onerror = (event) => {
                  console.error("Why didn't you allow my web app to use IndexedDB?!", event);
                  indexedDB.deleteDatabase(dbName);
                  openDatabase(databaseName);
                  reject(event);
                };
                request.onsuccess = function(event) {
                  let target = event.target;
                  IndexDb.db = target.result;
                  resolve(IndexDb.db);
                };
                request.onupgradeneeded = (event) => {
                  let target = event.target;
                  let db = target.result;
                  let conceptDb = "concept";
                  let connectionDb = "connection";
                  let settings = "settings";
                  console.log("this is the version update for index", version);
                  if (db.objectStoreNames.contains(conceptDb)) {
                    db.deleteObjectStore(conceptDb);
                  }
                  if (db.objectStoreNames.contains(connectionDb)) {
                    db.deleteObjectStore(connectionDb);
                  }
                  if (db.objectStoreNames.contains(settings)) {
                    db.deleteObjectStore(settings);
                  }
                  if (!db.objectStoreNames.contains(conceptDb)) {
                    let objectStore = db.createObjectStore(conceptDb, { keyPath: "id" });
                    objectStore.transaction.oncomplete = (event2) => {
                    };
                  }
                  if (!db.objectStoreNames.contains(connectionDb)) {
                    let objectStore = db.createObjectStore(connectionDb, { keyPath: "id" });
                    objectStore.transaction.oncomplete = (event2) => {
                    };
                  }
                  if (!db.objectStoreNames.contains(settings)) {
                    let objectStore = db.createObjectStore(settings, { keyPath: "id" });
                    objectStore.transaction.oncomplete = (event2) => {
                    };
                  }
                  resolve(db);
                };
              });
            }
            function storeToDatabase(databaseName, object) {
              return new Promise(function(resolve, reject) {
                console.log("this is storing to the database", object);
                openDatabase(databaseName).then((db) => {
                  if (object.id != 0) {
                    let transaction = db.transaction(databaseName, "readwrite");
                    let objStore = transaction.objectStore(databaseName);
                    const request = objStore.add(object);
                    request.onsuccess = (event) => {
                      resolve(object);
                    };
                    request.onerror = (event) => {
                      let errorObject = {
                        "status": 400,
                        "ok": false,
                        "message": "Cannot store to the database" + databaseName,
                        "data": event,
                        "body": object
                      };
                      reject(errorObject);
                    };
                  }
                }).catch((event) => {
                  let errorObject = {
                    "status": 400,
                    "ok": false,
                    "message": "Cannot store to the database because you cannot open the database",
                    "data": event
                  };
                  reject(errorObject);
                });
              });
            }
            function UpdateToDatabase(databaseName, object) {
              return new Promise(function(resolve, reject) {
                console.log("this is wriring to the database", object);
                openDatabase(databaseName).then((db) => {
                  let transaction = db.transaction(databaseName, "readwrite");
                  let objStore = transaction.objectStore(databaseName);
                  const request = objStore.put(object);
                  request.onsuccess = (event) => {
                    resolve(object);
                  };
                  request.onerror = (event) => {
                    let errorObject = {
                      "status": 400,
                      "ok": false,
                      "message": "Cannot Update to the database" + databaseName,
                      "data": event,
                      "body": object
                    };
                    reject(errorObject);
                  };
                }).catch((event) => {
                  let errorObject = {
                    "status": 400,
                    "ok": false,
                    "message": "Cannot update to database because you cannot open the database",
                    "data": event
                  };
                  reject(errorObject);
                });
              });
            }
            function GetLastSettingsFromDatabase() {
              return new Promise(function(resolve, reject) {
                let databaseName = "settings";
                openDatabase(databaseName).then((db) => {
                  let transaction = db.transaction(databaseName, "readwrite");
                  let objectStore = transaction.objectStore(databaseName);
                  let allobjects = objectStore.getAll();
                  allobjects.onsuccess = () => {
                    let settingsData = new _DataStructures_SettingData__WEBPACK_IMPORTED_MODULE_0__.SettingData(false);
                    let settingsArray = allobjects.result;
                    for (let i2 = 0; i2 < settingsArray.length; i2++) {
                      settingsData = settingsArray[i2];
                      settingsData = settingsData;
                    }
                    resolve(settingsData);
                  };
                  allobjects.onerror = (event) => {
                    reject(event);
                  };
                }).catch((event) => {
                  let errorObject = {
                    "status": 400,
                    "ok": false,
                    "message": "Cannot get last object from database because you cannot open the database",
                    "data": event
                  };
                  reject(errorObject);
                });
              });
            }
            function AiUpdateFlag(object) {
              return new Promise(function(resolve, reject) {
                let databaseName = "settings";
                openDatabase(databaseName).then((db) => {
                  let transaction = db.transaction(databaseName, "readwrite");
                  let objStore = transaction.objectStore(databaseName);
                  const request = objStore.put(object);
                  request.onsuccess = (event) => {
                    resolve(object);
                  };
                  request.onerror = (event) => {
                    let errorObject = {
                      "status": 400,
                      "ok": false,
                      "message": "Cannot update AI flag",
                      "data": event,
                      "body": object
                    };
                    reject(errorObject);
                  };
                }).catch((event) => {
                  let errorObject = {
                    "status": 400,
                    "ok": false,
                    "message": "Cannot update AI flag because you cannot open the database",
                    "data": event
                  };
                  reject(errorObject);
                });
              });
            }
            function getObjectsFromIndexDb(databaseName) {
              return __awaiter(this, void 0, void 0, function* () {
                return new Promise(function(resolve, reject) {
                  openDatabase(databaseName).then((db) => {
                    let ConceptList = [];
                    let transaction = db.transaction(databaseName, "readwrite");
                    let objectStore = transaction.objectStore(databaseName);
                    let allobjects = objectStore.getAll();
                    allobjects.onsuccess = () => {
                      const students = allobjects.result;
                      for (let i2 = 0; i2 < students.length; i2++) {
                        ConceptList.push(students[i2]);
                      }
                      resolve(ConceptList);
                    };
                  }).catch((event) => {
                    let errorObject = {
                      "status": 400,
                      "ok": false,
                      "message": "Cannot get objects from the database because you cannot open the database",
                      "data": event
                    };
                    reject(errorObject);
                  });
                });
              });
            }
            function removeFromDatabase(databaseName, id) {
              return new Promise(function(resolve, reject) {
                openDatabase(databaseName).then((db) => {
                  let transaction = db.transaction(databaseName, "readwrite");
                  let objectStore = transaction.objectStore(databaseName);
                  const request = objectStore.delete(Number(id));
                  request.onsuccess = function(event) {
                    resolve(id);
                  };
                  request.onerror = (event) => {
                    let errorObject = {
                      "status": 400,
                      "ok": false,
                      "message": "Cannot remove from the database" + databaseName,
                      "data": event
                    };
                    reject(errorObject);
                  };
                }).catch((event) => {
                  let errorObject = {
                    "status": 400,
                    "ok": false,
                    "message": "Cannot remove from the database because you cannot open the database",
                    "data": event,
                    "body": id
                  };
                  reject(errorObject);
                });
              });
            }
          }
        ),
        /***/
        "./src/Helpers/CheckIfExists.ts": (
          /*!**************************************!*\
            !*** ./src/Helpers/CheckIfExists.ts ***!
            \**************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CheckAllConnectionsConnectedInConnectionArray: () => (
                /* binding */
                CheckAllConnectionsConnectedInConnectionArray
              ),
              /* harmony export */
              CheckAllConnectionsConnectedInLConnectionArray: () => (
                /* binding */
                CheckAllConnectionsConnectedInLConnectionArray
              ),
              /* harmony export */
              CheckIfConceptsExistsInArray: () => (
                /* binding */
                CheckIfConceptsExistsInArray
              ),
              /* harmony export */
              CheckIfConnectionExistsInArray: () => (
                /* binding */
                CheckIfConnectionExistsInArray
              ),
              /* harmony export */
              CheckIfToTheConceptExistsInConnectionArray: () => (
                /* binding */
                CheckIfToTheConceptExistsInConnectionArray
              ),
              /* harmony export */
              CheckIfTypeConceptsExistsInArray: () => (
                /* binding */
                CheckIfTypeConceptsExistsInArray
              ),
              /* harmony export */
              CheckIfTypeLConceptsExistsInArray: () => (
                /* binding */
                CheckIfTypeLConceptsExistsInArray
              )
              /* harmony export */
            });
            var _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/Connection */
              "./src/DataStructures/Connection.ts"
            );
            var _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Services/CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            function CheckIfConceptsExistsInArray(conceptList = [], concept) {
              let foundConcept = (0, _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_1__.CreateDefaultConcept)();
              if (Array.isArray(conceptList)) {
                const check = conceptList.find((c) => c.id === concept.id);
                if (check) {
                  foundConcept = check;
                }
              }
              return foundConcept;
            }
            function CheckIfTypeConceptsExistsInArray(conceptList = [], concept) {
              var _a, _b;
              let foundConcepts = [];
              let newConceptType = (_a = concept.type) === null || _a === void 0 ? void 0 : _a.characterValue;
              if (!(newConceptType === null || newConceptType === void 0 ? void 0 : newConceptType.startsWith("the_"))) {
                newConceptType = "the_" + newConceptType;
              }
              if (Array.isArray(conceptList)) {
                for (let i2 = 0; i2 < conceptList.length; i2++) {
                  let startsWith = (_b = conceptList[i2].type) === null || _b === void 0 ? void 0 : _b.characterValue;
                  if (!(startsWith === null || startsWith === void 0 ? void 0 : startsWith.startsWith("the_"))) {
                    startsWith = "the_" + startsWith;
                  }
                  if (concept.typeId == conceptList[i2].typeId || newConceptType == startsWith) {
                    foundConcepts.push(conceptList[i2]);
                  }
                }
              }
              return foundConcepts;
            }
            function CheckIfTypeLConceptsExistsInArray(conceptList = [], concept) {
              let foundConcepts = [];
              let newConceptType = concept.typeCharacter;
              if (!(newConceptType === null || newConceptType === void 0 ? void 0 : newConceptType.startsWith("the_"))) {
                newConceptType = "the_" + newConceptType;
              }
              if (Array.isArray(conceptList)) {
                for (let i2 = 0; i2 < conceptList.length; i2++) {
                  let startsWith = conceptList[i2].typeCharacter;
                  if (!(startsWith === null || startsWith === void 0 ? void 0 : startsWith.startsWith("the_"))) {
                    startsWith = "the_" + startsWith;
                  }
                  if (concept.typeId == conceptList[i2].typeId || newConceptType == startsWith) {
                    foundConcepts.push(conceptList[i2]);
                  }
                }
              }
              return foundConcepts;
            }
            function CheckIfConnectionExistsInArray(connectionList = [], connection) {
              let foundConnection = new _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__.Connection(0, 0, 0, 0, 0, 0, 0);
              if (Array.isArray(connectionList)) {
                const check = connectionList.find((c) => c.id === connection.id);
                if (check) {
                  foundConnection = check;
                }
              }
              return foundConnection;
            }
            function CheckIfToTheConceptExistsInConnectionArray(connectionList = [], conceptId) {
              let foundConnection = new _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__.Connection(0, 0, 0, 0, 0, 0, 0);
              if (Array.isArray(connectionList)) {
                const check = connectionList.find((c) => c.toTheConceptId === conceptId);
                if (check) {
                  foundConnection = check;
                }
                const toCheck = connectionList.find((c) => c.ofTheConceptId === conceptId);
                if (toCheck) {
                  foundConnection = toCheck;
                }
              }
              return foundConnection;
            }
            function CheckAllConnectionsConnectedInConnectionArray(connectionList = [], conceptId) {
              let foundConnections = [];
              if (Array.isArray(connectionList)) {
                const check = connectionList.find((c) => c.toTheConceptId == conceptId);
                if (check) {
                  foundConnections.push(check);
                }
                const toCheck = connectionList.find((c) => c.ofTheConceptId == conceptId);
                if (toCheck) {
                  foundConnections.push(toCheck);
                }
              }
              return foundConnections;
            }
            function CheckAllConnectionsConnectedInLConnectionArray(connectionList = [], conceptId) {
              let foundConnections = [];
              if (Array.isArray(connectionList)) {
                const check = connectionList.find((c) => c.toTheConceptId == conceptId);
                if (check) {
                  foundConnections.push(check);
                }
                const toCheck = connectionList.find((c) => c.ofTheConceptId == conceptId);
                if (toCheck) {
                  foundConnections.push(toCheck);
                }
              }
              return foundConnections;
            }
          }
        ),
        /***/
        "./src/Helpers/RemoveFromArray.ts": (
          /*!****************************************!*\
            !*** ./src/Helpers/RemoveFromArray.ts ***!
            \****************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              RemoveConceptFromList: () => (
                /* binding */
                RemoveConceptFromList
              ),
              /* harmony export */
              RemoveConnectionFromList: () => (
                /* binding */
                RemoveConnectionFromList
              ),
              /* harmony export */
              RemoveLConnectionFromList: () => (
                /* binding */
                RemoveLConnectionFromList
              )
              /* harmony export */
            });
            function RemoveConceptFromList(conceptList = [], concept) {
              if (Array.isArray(conceptList)) {
                conceptList.splice(conceptList.findIndex(function(i2) {
                  return i2.id === concept.id;
                }), 1);
              }
            }
            function RemoveConnectionFromList(connectionList = [], connection) {
              if (Array.isArray(connectionList)) {
                connectionList.splice(connectionList.findIndex(function(i2) {
                  return i2.id === connection.id;
                }), 1);
              }
            }
            function RemoveLConnectionFromList(connectionList = [], connection) {
              if (Array.isArray(connectionList)) {
                connectionList.splice(connectionList.findIndex(function(i2) {
                  return i2.id === connection.id;
                }), 1);
              }
            }
          }
        ),
        /***/
        "./src/Helpers/UniqueInsert.ts": (
          /*!*************************************!*\
            !*** ./src/Helpers/UniqueInsert.ts ***!
            \*************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                InsertUniqueNumber
              )
              /* harmony export */
            });
            function InsertUniqueNumber(Array2, toInsert) {
              if (Array2.indexOf(toInsert) === -1) {
                Array2.push(toInsert);
              }
              return Array2;
            }
          }
        ),
        /***/
        "./src/Services/CheckForConnectionDeletion.ts": (
          /*!****************************************************!*\
            !*** ./src/Services/CheckForConnectionDeletion.ts ***!
            \****************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CheckForConnectionDeletion: () => (
                /* binding */
                CheckForConnectionDeletion
              ),
              /* harmony export */
              CheckForConnectionDeletionWithIds: () => (
                /* binding */
                CheckForConnectionDeletionWithIds
              )
              /* harmony export */
            });
            function CheckForConnectionDeletion(newConnections = [], oldConnections = []) {
            }
            function CheckForConnectionDeletionWithIds(newConnectionIds = [], oldConnections = []) {
            }
          }
        ),
        /***/
        "./src/Services/Common/DelayFunction.ts": (
          /*!**********************************************!*\
            !*** ./src/Services/Common/DelayFunction.ts ***!
            \**********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              DelayFunctionExecution: () => (
                /* binding */
                DelayFunctionExecution
              )
              /* harmony export */
            });
            function DelayFunctionExecution(ms, callback) {
              return new Promise((resolve, reject) => {
                setTimeout(() => {
                  resolve(callback);
                }, ms);
              });
            }
          }
        ),
        /***/
        "./src/Services/Common/ErrorPosting.ts": (
          /*!*********************************************!*\
            !*** ./src/Services/Common/ErrorPosting.ts ***!
            \*********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              HandleHttpError: () => (
                /* binding */
                HandleHttpError
              ),
              /* harmony export */
              HandleInternalError: () => (
                /* binding */
                HandleInternalError
              )
              /* harmony export */
            });
            var _DataStructures_Responses_ErrorResponse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Responses/ErrorResponse */
              "./src/DataStructures/Responses/ErrorResponse.ts"
            );
            function HandleHttpError(response) {
              if (response.status == 401 || response.status == 406) {
                let errorResponse = new _DataStructures_Responses_ErrorResponse__WEBPACK_IMPORTED_MODULE_0__.FreeSchemaResponse(response.statusText, false, response.status, "");
                errorResponse.setUrl(response.url);
                throw errorResponse;
              } else if (response.status == 500) {
                let errorResponse = new _DataStructures_Responses_ErrorResponse__WEBPACK_IMPORTED_MODULE_0__.FreeSchemaResponse(response.statusText, false, response.status, "");
                errorResponse.setUrl(response.url);
                throw errorResponse;
              }
            }
            function HandleInternalError(error, url = "") {
              if (error.status) {
                let errorResponse = new _DataStructures_Responses_ErrorResponse__WEBPACK_IMPORTED_MODULE_0__.FreeSchemaResponse(error.message, false, error.status, error.stack);
                errorResponse.setUrl(url);
                throw errorResponse;
              } else {
                let errorResponse = new _DataStructures_Responses_ErrorResponse__WEBPACK_IMPORTED_MODULE_0__.FreeSchemaResponse(error.message, false, 500, error.stack);
                errorResponse.setUrl(url);
                throw errorResponse;
              }
              throw error;
            }
          }
        ),
        /***/
        "./src/Services/Composition/BuildComposition.ts": (
          /*!******************************************************!*\
            !*** ./src/Services/Composition/BuildComposition.ts ***!
            \******************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              recursiveFetchNew: () => (
                /* binding */
                recursiveFetchNew
              )
              /* harmony export */
            });
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Services/CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var _Services_GetTheConcept__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Services/GetTheConcept */
              "./src/Services/GetTheConcept.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function recursiveFetchNew(id_1, connectionList_1, conceptList_1, compositionList_1) {
              return __awaiter(this, arguments, void 0, function* (id, connectionList, conceptList, compositionList, visitedConcepts = []) {
                var _a, _b;
                let output = {};
                const arroutput = [];
                if (id == 0) {
                  return "";
                }
                let concept = getConceptFromList(conceptList, id);
                if ((concept == null || concept.id == 0) && id != null && id != void 0) {
                  const conceptString = yield (0, _Services_GetTheConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(id);
                  concept = conceptString;
                }
                if (concept.id != 0) {
                  if (concept.type == null) {
                    const toConceptTypeId = concept.typeId;
                    let toConceptType = getConceptFromList(conceptList, toConceptTypeId);
                    concept.type = toConceptType;
                    if (toConceptType == null && toConceptTypeId != null && toConceptTypeId != void 0) {
                      const conceptString = yield (0, _Services_GetTheConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(toConceptTypeId);
                      toConceptType = conceptString;
                      concept.type = toConceptType;
                    }
                  }
                }
                if (!compositionList.includes(id)) {
                  return concept === null || concept === void 0 ? void 0 : concept.characterValue;
                } else {
                  if (visitedConcepts.includes(id)) {
                    return "";
                  } else {
                    visitedConcepts.push(id);
                  }
                  for (let i2 = 0; i2 < connectionList.length; i2++) {
                    if (connectionList[i2].ofTheConceptId == id) {
                      const toConceptId = connectionList[i2].toTheConceptId;
                      if (compositionList.includes(id)) {
                        let toConcept = getConceptFromList(conceptList, toConceptId);
                        if ((toConcept == null || toConcept.id == 0) && toConceptId != null && toConceptId != void 0) {
                          const conceptString = yield (0, _Services_GetTheConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(toConceptId);
                          toConcept = conceptString;
                        }
                        if (toConcept.id != 0) {
                          if ((toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) == null) {
                            const toConceptTypeId = toConcept.typeId;
                            let toConceptType = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.GetConcept(toConceptTypeId);
                            toConcept.type = toConceptType;
                            if (toConceptType == null && toConceptTypeId != null && toConceptTypeId != void 0) {
                              const conceptString = yield (0, _Services_GetTheConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(toConceptTypeId);
                              toConceptType = conceptString;
                              toConcept.type = toConceptType;
                            }
                          }
                        }
                        const regex = "the_";
                        const localmainString = (_b = (_a = toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                        const localKey = localmainString.replace(regex, "");
                        if (isNaN(Number(localKey))) {
                          if (localKey) {
                            const result = yield recursiveFetchNew(toConceptId, connectionList, conceptList, compositionList, visitedConcepts);
                            output[localKey] = result;
                          }
                        } else {
                          const result = yield recursiveFetchNew(toConceptId, connectionList, conceptList, compositionList, visitedConcepts);
                          arroutput[localKey] = result;
                          output = arroutput;
                        }
                      }
                    }
                  }
                }
                return output;
              });
            }
            function getConceptFromList(conceptList, conceptId) {
              let concept = (0, _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_1__.CreateDefaultConcept)();
              for (let i2 = 0; i2 < conceptList.length; i2++) {
                if (conceptId == conceptList[i2].id) {
                  concept = conceptList[i2];
                  return concept;
                }
              }
              return concept;
            }
          }
        ),
        /***/
        "./src/Services/Composition/CompositionCache.ts": (
          /*!******************************************************!*\
            !*** ./src/Services/Composition/CompositionCache.ts ***!
            \******************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetCompositionWithCache: () => (
                /* binding */
                GetCompositionWithCache
              ),
              /* harmony export */
              GetCompositionWithDataIdBulk: () => (
                /* binding */
                GetCompositionWithDataIdBulk
              ),
              /* harmony export */
              GetCompositionWithDataIdWithCache: () => (
                /* binding */
                GetCompositionWithDataIdWithCache
              )
              /* harmony export */
            });
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Api/GetAllConnectionsOfComposition */
              "./src/Api/GetAllConnectionsOfComposition.ts"
            );
            var _Api_GetConnectionBulk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Api/GetConnectionBulk */
              "./src/Api/GetConnectionBulk.ts"
            );
            var _Api_GetConcept__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../../Api/GetConcept */
              "./src/Api/GetConcept.ts"
            );
            var _BuildComposition__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ./BuildComposition */
              "./src/Services/Composition/BuildComposition.ts"
            );
            var _GetComposition__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__2(
              /*! ../GetComposition */
              "./src/Services/GetComposition.ts"
            );
            var _DataStructures_Composition_Composition__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__2(
              /*! ../../DataStructures/Composition/Composition */
              "./src/DataStructures/Composition/Composition.ts"
            );
            var _DataStructures_Composition_CompositionBinaryTree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__2(
              /*! ../../DataStructures/Composition/CompositionBinaryTree */
              "./src/DataStructures/Composition/CompositionBinaryTree.ts"
            );
            var _Api_GetConceptBulk__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__2(
              /*! ../../Api/GetConceptBulk */
              "./src/Api/GetConceptBulk.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetCompositionWithCache(id_1) {
              return __awaiter(this, arguments, void 0, function* (id, connectionListPassed = []) {
                var _a, _b;
                let connectionList = [];
                const conceptIdList = [];
                let returnOutput = {};
                let output = {};
                const x = yield _DataStructures_Composition_CompositionBinaryTree__WEBPACK_IMPORTED_MODULE_7__.CompositionBinaryTree.getNodeFromTree(id);
                const compositionList = [];
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  const conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_3__.GetConcept)(id);
                  concept = conceptString;
                }
                if (x == null) {
                  let connectionListString = [];
                  if (connectionListPassed.length > 0) {
                    connectionListString = getMyConnections(id, connectionListPassed);
                  } else {
                    connectionListString = yield (0, _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_1__.GetAllConnectionsOfComposition)(id);
                  }
                  connectionList = connectionListString;
                  for (let i2 = 0; i2 < connectionList.length; i2++) {
                    if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                      compositionList.push(connectionList[i2].ofTheConceptId);
                      conceptIdList.push(connectionList[i2].ofTheConceptId);
                    }
                    if (!conceptIdList.includes(connectionList[i2].toTheConceptId)) {
                      conceptIdList.push(connectionList[i2].toTheConceptId);
                    }
                  }
                  SaveToCompositionCache(concept, connectionList, conceptIdList, compositionList);
                  let visitedConcepts = [];
                  output = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.recursiveFetch)(id, connectionList, compositionList, visitedConcepts);
                  const mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                  returnOutput[mainString] = output;
                } else {
                  output = x.value.GetDataCache();
                  returnOutput = output;
                }
                if (concept.id == 0) {
                  return "";
                }
                return returnOutput;
              });
            }
            function getMyConnections(id, connectionList) {
              const connections = [];
              for (let i2 = 0; i2 < connectionList.length; i2++) {
                if (connectionList[i2].typeId == id) {
                  connections.push(connectionList[i2]);
                }
              }
              return connections;
            }
            function GetCompositionWithDataIdWithCache(id_1) {
              return __awaiter(this, arguments, void 0, function* (id, connectionListPassed = []) {
                var _a, _b;
                let FinalReturn = {};
                let connectionList = [];
                const conceptIdList = [];
                let output;
                const returnOutput = {};
                const x = yield _DataStructures_Composition_CompositionBinaryTree__WEBPACK_IMPORTED_MODULE_7__.CompositionBinaryTree.getNodeFromTree(id);
                const compositionList = [];
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  const conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_3__.GetConcept)(id);
                  concept = conceptString;
                }
                if (x == null) {
                  let connectionListString = [];
                  if (connectionListPassed.length > 0) {
                    connectionListString = getMyConnections(id, connectionListPassed);
                  } else {
                    connectionListString = yield (0, _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_1__.GetAllConnectionsOfComposition)(id);
                  }
                  connectionList = connectionListString;
                  for (let i2 = 0; i2 < connectionList.length; i2++) {
                    if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                      compositionList.push(connectionList[i2].ofTheConceptId);
                      conceptIdList.push(connectionList[i2].ofTheConceptId);
                    }
                    if (!conceptIdList.includes(connectionList[i2].toTheConceptId)) {
                      conceptIdList.push(connectionList[i2].toTheConceptId);
                    }
                  }
                  SaveToCompositionCache(concept, connectionList, conceptIdList, compositionList);
                  output = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.recursiveFetch)(id, connectionList, compositionList);
                  const mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                  returnOutput[mainString] = output;
                  FinalReturn["created_at"] = concept.entryTimeStamp;
                  FinalReturn["data"] = returnOutput;
                  FinalReturn["id"] = id;
                } else {
                  output = x.value.GetDataCache();
                  FinalReturn = output;
                }
                if (concept.id == 0) {
                  return "";
                }
                return FinalReturn;
              });
            }
            function GetCompositionWithDataIdBulk(ids, connections) {
              return __awaiter(this, void 0, void 0, function* () {
                let connectionList = [];
                const compositions = [];
                const newConnections = yield (0, _Api_GetConnectionBulk__WEBPACK_IMPORTED_MODULE_2__.GetConnectionBulk)(connections);
                connectionList = newConnections;
                for (let i2 = 0; i2 < ids.length; i2++) {
                  const output = yield GetCompositionWithDataIdWithCache(ids[i2], connectionList);
                  if (output) {
                    compositions.push(output);
                  }
                }
                return compositions;
              });
            }
            function SaveToCompositionCache(concept, connections, conceptIdList, numbers) {
              return __awaiter(this, void 0, void 0, function* () {
                const composition = new _DataStructures_Composition_Composition__WEBPACK_IMPORTED_MODULE_6__.Composition();
                const concepts = yield BulkConceptGetter(conceptIdList);
                composition.connections = connections;
                composition.concepts = concepts;
                composition.id = concept.id;
                composition.subcompositions = numbers;
                composition.mainConcept = concept;
                let visitedConcepts = [];
                const output = yield (0, _BuildComposition__WEBPACK_IMPORTED_MODULE_4__.recursiveFetchNew)(concept.id, connections, concepts, numbers, visitedConcepts);
                composition.cached = output;
                _DataStructures_Composition_CompositionBinaryTree__WEBPACK_IMPORTED_MODULE_7__.CompositionBinaryTree.addCompositionToTree(composition);
              });
            }
            function BulkConceptGetter(conceptIds) {
              return __awaiter(this, void 0, void 0, function* () {
                let conceptList = [];
                const bulkConceptFetch = [];
                for (let i2 = 0; i2 < (conceptIds === null || conceptIds === void 0 ? void 0 : conceptIds.length); i2++) {
                  const conceptUse = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_0__.ConceptsData.GetConcept(conceptIds[i2]);
                  if (conceptUse.id == 0) {
                    bulkConceptFetch.push(conceptIds[i2]);
                  } else {
                    conceptList.push(conceptUse);
                  }
                }
                if ((bulkConceptFetch === null || bulkConceptFetch === void 0 ? void 0 : bulkConceptFetch.length) == 0) {
                  return conceptList;
                } else {
                  conceptList = yield (0, _Api_GetConceptBulk__WEBPACK_IMPORTED_MODULE_8__.BulkConceptGetterApi)(bulkConceptFetch);
                }
                return conceptList;
              });
            }
          }
        ),
        /***/
        "./src/Services/Composition/CreateCompositionCache.ts": (
          /*!************************************************************!*\
            !*** ./src/Services/Composition/CreateCompositionCache.ts ***!
            \************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateTheCompositionWithCache: () => (
                /* binding */
                CreateTheCompositionWithCache
              )
              /* harmony export */
            });
            var _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var _DataStructures_Composition_Composition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/Composition/Composition */
              "./src/DataStructures/Composition/Composition.ts"
            );
            var _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../MakeTheInstanceConcept */
              "./src/Services/MakeTheInstanceConcept.ts"
            );
            var _Services_CreateTheConnection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../../Services/CreateTheConnection */
              "./src/Services/CreateTheConnection.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateTheCompositionWithCache(json_1) {
              return __awaiter(this, arguments, void 0, function* (json, ofTheConceptId = null, ofTheConceptUserId = null, mainKey = null, userId = null, accessId = null, sessionInformationId = null, composition = null) {
                const localUserId = userId !== null && userId !== void 0 ? userId : 999;
                const localAccessId = accessId !== null && accessId !== void 0 ? accessId : 4;
                const localSessionId = sessionInformationId !== null && sessionInformationId !== void 0 ? sessionInformationId : 999;
                let MainKeyLocal = mainKey !== null && mainKey !== void 0 ? mainKey : 0;
                let MainConcept = (0, _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_0__.CreateDefaultConcept)();
                if (composition == null) {
                  composition = new _DataStructures_Composition_Composition__WEBPACK_IMPORTED_MODULE_1__.Composition();
                }
                for (const key in json) {
                  if (typeof json[key] == "object" || Array.isArray(json[key])) {
                    const conceptString = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(key, "", true, localUserId, localAccessId, localSessionId);
                    const concept = conceptString;
                    if (ofTheConceptId == null && ofTheConceptUserId == null) {
                      let localMainKey = MainKeyLocal;
                      MainConcept = concept;
                      localMainKey = concept.id;
                      MainKeyLocal = concept.id;
                      composition.concepts.push(concept);
                      composition.id = concept.id;
                      yield CreateTheCompositionWithCache(json[key], concept.id, concept.userId, localMainKey, userId, accessId, sessionInformationId, composition);
                    } else {
                      const ofThe = ofTheConceptId !== null && ofTheConceptId !== void 0 ? ofTheConceptId : 999;
                      const ofTheUser = ofTheConceptUserId !== null && ofTheConceptUserId !== void 0 ? ofTheConceptUserId : 999;
                      const localMainKey = MainKeyLocal;
                      MainConcept = concept;
                      composition.concepts.push(concept);
                      const connectionString = yield (0, _Services_CreateTheConnection__WEBPACK_IMPORTED_MODULE_3__.createTheConnection)(ofThe, ofTheUser, concept.id, localMainKey);
                      const connection = connectionString;
                      composition.connections.push(connection);
                      yield CreateTheCompositionWithCache(json[key], concept.id, concept.userId, localMainKey, userId, accessId, sessionInformationId, composition);
                    }
                    if (json[key] != null && json[key] != void 0) {
                      composition.subcompositions.push(concept.id);
                    }
                  } else {
                    const ofThe = ofTheConceptId !== null && ofTheConceptId !== void 0 ? ofTheConceptId : 999;
                    const ofTheUser = ofTheConceptUserId !== null && ofTheConceptUserId !== void 0 ? ofTheConceptUserId : 999;
                    const localMainKey = MainKeyLocal;
                    const conceptString = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(key, json[key], false, localUserId, localAccessId, localSessionId);
                    const concept = conceptString;
                    composition.concepts.push(concept);
                    const connectionString = yield (0, _Services_CreateTheConnection__WEBPACK_IMPORTED_MODULE_3__.createTheConnection)(ofThe, ofTheUser, concept.id, localMainKey);
                    const connection = connectionString;
                    composition.connections.push(connection);
                  }
                }
                return MainConcept;
              });
            }
          }
        ),
        /***/
        "./src/Services/ConceptFinding/GetConceptByCharacterAndCategory.ts": (
          /*!*************************************************************************!*\
            !*** ./src/Services/ConceptFinding/GetConceptByCharacterAndCategory.ts ***!
            \*************************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConceptByCharacter: () => (
                /* binding */
                GetConceptByCharacter
              ),
              /* harmony export */
              GetConceptByCharacterAndCategory: () => (
                /* binding */
                GetConceptByCharacterAndCategory
              ),
              /* harmony export */
              GetConceptByCharacterAndCategoryFromMemory: () => (
                /* binding */
                GetConceptByCharacterAndCategoryFromMemory
              )
              /* harmony export */
            });
            var _Api_GetConceptByCharacterValue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../Api/GetConceptByCharacterValue */
              "./src/Api/GetConceptByCharacterValue.ts"
            );
            var _Api_SearchConcept_GetConceptByCharacterAndCategoryDirect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Api/SearchConcept/GetConceptByCharacterAndCategoryDirect */
              "./src/Api/SearchConcept/GetConceptByCharacterAndCategoryDirect.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConceptByCharacterAndCategory(character) {
              return __awaiter(this, void 0, void 0, function* () {
                let concept = (0, _app__WEBPACK_IMPORTED_MODULE_2__.CreateDefaultConcept)();
                if (character == "the") {
                  concept.id = 1;
                  concept.typeId = 5;
                  concept.characterValue = "the";
                  return concept;
                }
                let splittedStringArray = (0, _app__WEBPACK_IMPORTED_MODULE_2__.SplitStrings)(character);
                if (splittedStringArray.length > 1) {
                  let category = 1;
                  let prefix = yield GetConceptByCharacterAndCategory(splittedStringArray[0]);
                  if (prefix.id != 0) {
                    category = prefix.id;
                  }
                  concept = yield GetConceptByCharacterAndCategoryFromMemory(character, category);
                } else if (splittedStringArray[0] == character) {
                  concept = yield GetConceptByCharacter(character);
                }
                return concept;
              });
            }
            function GetConceptByCharacter(characterValue) {
              return __awaiter(this, void 0, void 0, function* () {
                let concept = yield _app__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConceptByCharacterAndTypeLocal(characterValue, 51);
                if (concept.id == 0) {
                  concept = yield (0, _Api_GetConceptByCharacterValue__WEBPACK_IMPORTED_MODULE_0__.GetConceptByCharacterValue)(characterValue);
                }
                return concept;
              });
            }
            function GetConceptByCharacterAndCategoryFromMemory(character, category) {
              return __awaiter(this, void 0, void 0, function* () {
                let concept = yield _app__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConceptByCharacterAndCategoryLocal(character, category);
                if (concept.id == 0) {
                  concept = yield (0, _Api_SearchConcept_GetConceptByCharacterAndCategoryDirect__WEBPACK_IMPORTED_MODULE_1__.GetConceptByCharacterAndCategoryDirectApi)(character, category);
                }
                return concept;
              });
            }
          }
        ),
        /***/
        "./src/Services/Conversion/ConvertConcepts.ts": (
          /*!****************************************************!*\
            !*** ./src/Services/Conversion/ConvertConcepts.ts ***!
            \****************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              convertFromConceptToLConcept: () => (
                /* binding */
                convertFromConceptToLConcept
              ),
              /* harmony export */
              convertFromConnectionToLConnection: () => (
                /* binding */
                convertFromConnectionToLConnection
              ),
              /* harmony export */
              convertFromLConceptToConcept: () => (
                /* binding */
                convertFromLConceptToConcept
              )
              /* harmony export */
            });
            var _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Connection */
              "./src/DataStructures/Connection.ts"
            );
            var _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var _Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Local/CreateDefaultLConcept */
              "./src/Services/Local/CreateDefaultLConcept.ts"
            );
            function convertFromConceptToLConcept(concept) {
              var _a, _b;
              const LConcept = (0, _Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_2__.CreateDefaultLConcept)();
              LConcept.id = concept.id;
              LConcept.ghostId = concept.ghostId;
              LConcept.userId = concept.userId;
              LConcept.accessId = concept.accessId;
              LConcept.categoryId = concept.categoryId;
              LConcept.characterValue = concept.characterValue;
              LConcept.entryTimeStamp = concept.entryTimeStamp;
              LConcept.typeId = concept.typeId;
              LConcept.type = concept.type;
              LConcept.isTemp = false;
              LConcept.typeCharacter = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
              return LConcept;
            }
            function convertFromLConceptToConcept(lconcept) {
              const concept = (0, _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_1__.CreateDefaultConcept)();
              concept.id = lconcept.id;
              concept.ghostId = lconcept.ghostId;
              concept.userId = lconcept.userId;
              concept.accessId = lconcept.accessId;
              concept.entryTimeStamp = lconcept.entryTimeStamp;
              concept.typeId = lconcept.typeId;
              concept.categoryId = lconcept.categoryId;
              return concept;
            }
            function convertFromConnectionToLConnection(connection) {
              const Lconnection = new _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__.Connection(0, 0, 0, 0, 0, 0, 0);
              Lconnection.id = connection.id;
              Lconnection.ghostId = connection.ghostId;
              Lconnection.accessId = connection.accessId;
              Lconnection.ofTheConceptId = connection.ofTheConceptId;
              Lconnection.toTheConceptId = connection.toTheConceptId;
              Lconnection.entryTimeStamp = connection.entryTimeStamp;
              Lconnection.typeId = connection.typeId;
              Lconnection.isTemp = false;
              return Lconnection;
            }
          }
        ),
        /***/
        "./src/Services/CreateBinaryTreeFromData.ts": (
          /*!**************************************************!*\
            !*** ./src/Services/CreateBinaryTreeFromData.ts ***!
            \**************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                CreateConceptBinaryTreeFromIndexDb
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _Database_indexeddb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Database/indexeddb */
              "./src/Database/indexeddb.ts"
            );
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../DataStructures/IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateConceptBinaryTreeFromIndexDb() {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let conceptList = yield (0, _Database_indexeddb__WEBPACK_IMPORTED_MODULE_1__.getObjectsFromIndexDb)("concept");
                  if (Array.isArray(conceptList)) {
                    for (let i2 = 0; i2 < conceptList.length; i2++) {
                      let concept = conceptList[i2];
                      _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.AddConceptToMemory(concept);
                    }
                  }
                  _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_3__.IdentifierFlags.isDataLoaded = true;
                  _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_3__.IdentifierFlags.isCharacterLoaded = true;
                  _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_3__.IdentifierFlags.isTypeLoaded = true;
                } catch (error) {
                  yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.DelayFunctionExecution)(2e3, CreateConceptBinaryTreeFromIndexDb());
                  let errorObject = {
                    "message": "Cannot create Binary Tree Concept",
                    "ok": false,
                    "status": 400,
                    "data": error
                  };
                  throw errorObject;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/CreateConnectionBetweenTwoConcepts.ts": (
          /*!************************************************************!*\
            !*** ./src/Services/CreateConnectionBetweenTwoConcepts.ts ***!
            \************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CountRelationship: () => (
                /* binding */
                CountRelationship
              ),
              /* harmony export */
              CreateConnectionBetweenTwoConcepts: () => (
                /* binding */
                CreateConnectionBetweenTwoConcepts
              ),
              /* harmony export */
              CreateConnectionBetweenTwoConceptsGeneral: () => (
                /* binding */
                CreateConnectionBetweenTwoConceptsGeneral
              )
              /* harmony export */
            });
            var _Api_GetConnectionOfTheConcept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetConnectionOfTheConcept */
              "./src/Api/GetConnectionOfTheConcept.ts"
            );
            var _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/Connection */
              "./src/DataStructures/Connection.ts"
            );
            var _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../DataStructures/SyncData */
              "./src/DataStructures/SyncData.ts"
            );
            var _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var _CreateTheConnectionGeneral__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ./CreateTheConnectionGeneral */
              "./src/Services/CreateTheConnectionGeneral.ts"
            );
            var _DeleteConnection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__2(
              /*! ./DeleteConnection */
              "./src/Services/DeleteConnection.ts"
            );
            var _GetTheConcept__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__2(
              /*! ./GetTheConcept */
              "./src/Services/GetTheConcept.ts"
            );
            var _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__2(
              /*! ./MakeTheInstanceConcept */
              "./src/Services/MakeTheInstanceConcept.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateConnectionBetweenTwoConcepts(ofTheConcept_1, toTheConcept_1, linker_1) {
              return __awaiter(this, arguments, void 0, function* (ofTheConcept, toTheConcept, linker, both = false, count = false) {
                var _a, _b;
                let userId = ofTheConcept.userId;
                let accessId = 4;
                if (both) {
                  let prefix1 = ((_a = toTheConcept.type) === null || _a === void 0 ? void 0 : _a.characterValue) + "_s";
                  let linkerAdd1 = linker + "_by";
                  let backwardLinker = prefix1 + "_" + linkerAdd1;
                  if (count) {
                    yield CountRelationship(linkerAdd1, toTheConcept, userId);
                  }
                  let connectionConceptReverse = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_7__["default"])("connection", backwardLinker, false, 999, 999, 999);
                  let newConnection2 = new _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_1__.Connection(0, toTheConcept.id, ofTheConcept.id, userId, connectionConceptReverse.id, 1e3, accessId);
                  _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_2__.SyncData.AddConnection(newConnection2);
                }
                let prefix = ((_b = ofTheConcept.type) === null || _b === void 0 ? void 0 : _b.characterValue) + "_s";
                let linkerAdd = linker + "_s";
                let forwardLinker = prefix + "_" + linkerAdd;
                if (count) {
                  yield CountRelationship(linkerAdd, ofTheConcept, userId);
                }
                let connectionConcept = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_7__["default"])("connection", forwardLinker, false, 999, 999, 999);
                let newConnection = new _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_1__.Connection(0, ofTheConcept.id, toTheConcept.id, userId, connectionConcept.id, 1e3, accessId);
                _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_2__.SyncData.AddConnection(newConnection);
                return newConnection;
              });
            }
            function CountRelationship(linker_1, concept_1) {
              return __awaiter(this, arguments, void 0, function* (linker, concept, passedUserId = null) {
                var _a;
                let concept1 = concept;
                let userId = passedUserId !== null && passedUserId !== void 0 ? passedUserId : concept.userId;
                let accessId = 4;
                let sessionInformationId = 999;
                let forwardLinkerCount = linker + "_count";
                let forwardLinkerCountString = ((_a = concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) + "_s_" + forwardLinkerCount;
                let forwardLinkerCountConcept = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_7__["default"])("connection", forwardLinkerCountString, false, userId, accessId, sessionInformationId);
                let connectionsString = yield (0, _Api_GetConnectionOfTheConcept__WEBPACK_IMPORTED_MODULE_0__.GetConnectionOfTheConcept)(forwardLinkerCountConcept.id, concept.id, userId, 10, 1);
                let connections = connectionsString;
                let countConceptList = [];
                let countConcept = (0, _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_3__.CreateDefaultConcept)();
                for (let i2 = 0; i2 < connections.length; i2++) {
                  let toConcept = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_6__["default"])(connections[i2].toTheConceptId);
                  countConceptList.push(toConcept);
                }
                if (countConceptList.length < 1) {
                  countConcept = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_7__["default"])("count", "1", false, userId, accessId, sessionInformationId);
                } else {
                  let oldcountConcept = countConceptList[0];
                  let count = 0;
                  try {
                    count = Number(oldcountConcept.characterValue);
                  } catch (ex) {
                    count = 0;
                  }
                  count = count + 1;
                  countConcept = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_7__["default"])("count", count.toString(), false, userId, accessId, sessionInformationId);
                  for (let i2 = 0; i2 < connections.length; i2++) {
                    (0, _DeleteConnection__WEBPACK_IMPORTED_MODULE_5__.DeleteConnectionById)(connections[i2].id);
                  }
                }
                let newConnection = new _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_1__.Connection(0, concept1.id, countConcept.id, concept1.userId, forwardLinkerCountConcept.id, 1e3, accessId);
                yield _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_2__.SyncData.AddConnection(newConnection);
              });
            }
            function CreateConnectionBetweenTwoConceptsGeneral(ofTheConcept_1, toTheConcept_1, linker_1) {
              return __awaiter(this, arguments, void 0, function* (ofTheConcept, toTheConcept, linker, both = false, count = false) {
                var _a, _b;
                let userId = ofTheConcept.userId;
                let accessId = 4;
                if (both) {
                  let prefix1 = ((_a = toTheConcept.type) === null || _a === void 0 ? void 0 : _a.characterValue) + "_s";
                  let linkerAdd1 = linker + "_by";
                  let backwardLinker = prefix1 + "_" + linkerAdd1;
                  if (count) {
                    yield CountRelationship(linkerAdd1, toTheConcept, userId);
                  }
                  let connectionConceptReverse = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_7__["default"])("connection", backwardLinker, false, 999, 999, 999);
                  let newConnection2 = new _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_1__.Connection(0, toTheConcept.id, ofTheConcept.id, userId, connectionConceptReverse.id, 1e3, accessId);
                  _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_2__.SyncData.AddConnection(newConnection2);
                }
                let prefix = ((_b = ofTheConcept.type) === null || _b === void 0 ? void 0 : _b.characterValue) + "_s";
                let linkerAdd = linker + "_s";
                let forwardLinker = prefix + "_" + linkerAdd;
                if (count) {
                  yield CountRelationship(linkerAdd, ofTheConcept, userId);
                }
                let connectionConcept = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_7__["default"])("connection", forwardLinker, false, 999, 999, 999);
                let newConnection = yield (0, _CreateTheConnectionGeneral__WEBPACK_IMPORTED_MODULE_4__.CreateTheConnectionGeneral)(ofTheConcept.id, ofTheConcept.userId, toTheConcept.id, connectionConcept.id, 1e3, accessId);
                return newConnection;
              });
            }
          }
        ),
        /***/
        "./src/Services/CreateDefaultConcept.ts": (
          /*!**********************************************!*\
            !*** ./src/Services/CreateDefaultConcept.ts ***!
            \**********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateDefaultConcept: () => (
                /* binding */
                CreateDefaultConcept
              )
              /* harmony export */
            });
            var _DataStructures_Concept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/Concept */
              "./src/DataStructures/Concept.ts"
            );
            function CreateDefaultConcept() {
              let created_on = /* @__PURE__ */ new Date();
              let updated_on = /* @__PURE__ */ new Date();
              let concept = new _DataStructures_Concept__WEBPACK_IMPORTED_MODULE_0__.Concept(0, 0, 0, 0, 0, "0", 0, false, created_on, updated_on, "0");
              return concept;
            }
          }
        ),
        /***/
        "./src/Services/CreateTheComposition.ts": (
          /*!**********************************************!*\
            !*** ./src/Services/CreateTheComposition.ts ***!
            \**********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                CreateTheComposition
              )
              /* harmony export */
            });
            var _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var _CreateTheConnection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./CreateTheConnection */
              "./src/Services/CreateTheConnection.ts"
            );
            var _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./MakeTheInstanceConcept */
              "./src/Services/MakeTheInstanceConcept.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateTheComposition(json_1) {
              return __awaiter(this, arguments, void 0, function* (json, ofTheConceptId = null, ofTheConceptUserId = null, mainKey = null, userId = null, accessId = null, sessionInformationId = null) {
                let localUserId = userId !== null && userId !== void 0 ? userId : 999;
                let localAccessId = accessId !== null && accessId !== void 0 ? accessId : 4;
                let localSessionId = sessionInformationId !== null && sessionInformationId !== void 0 ? sessionInformationId : 999;
                let MainKeyLocal = mainKey !== null && mainKey !== void 0 ? mainKey : 0;
                let MainConcept = (0, _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_0__.CreateDefaultConcept)();
                for (const key in json) {
                  if (typeof json[key] != "string" && typeof json[key] != "number") {
                    if (ofTheConceptId == null && ofTheConceptUserId == null) {
                      let localMainKey = MainKeyLocal;
                      let conceptString = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(key, "", true, localUserId, localAccessId, localSessionId);
                      let concept = conceptString;
                      MainConcept = concept;
                      localMainKey = concept.id;
                      MainKeyLocal = concept.id;
                      yield CreateTheComposition(json[key], concept.id, concept.userId, localMainKey, userId, accessId, sessionInformationId);
                    } else {
                      let ofThe = ofTheConceptId !== null && ofTheConceptId !== void 0 ? ofTheConceptId : 999;
                      let ofTheUser = ofTheConceptUserId !== null && ofTheConceptUserId !== void 0 ? ofTheConceptUserId : 999;
                      let localMainKey = MainKeyLocal;
                      let conceptString = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(key, "", true, localUserId, localAccessId, localSessionId);
                      let concept = conceptString;
                      MainConcept = concept;
                      yield (0, _CreateTheConnection__WEBPACK_IMPORTED_MODULE_1__.createTheConnection)(ofThe, ofTheUser, concept.id, localMainKey);
                      yield CreateTheComposition(json[key], concept.id, concept.userId, localMainKey, userId, accessId, sessionInformationId);
                    }
                  } else {
                    let ofThe = ofTheConceptId !== null && ofTheConceptId !== void 0 ? ofTheConceptId : 999;
                    let ofTheUser = ofTheConceptUserId !== null && ofTheConceptUserId !== void 0 ? ofTheConceptUserId : 10267;
                    let localMainKey = MainKeyLocal;
                    let conceptString = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(key, json[key].toString(), false, localUserId, localAccessId, localSessionId);
                    let concept = conceptString;
                    yield (0, _CreateTheConnection__WEBPACK_IMPORTED_MODULE_1__.createTheConnection)(ofThe, ofTheUser, concept.id, localMainKey);
                  }
                }
                return MainConcept;
              });
            }
          }
        ),
        /***/
        "./src/Services/CreateTheConcept.ts": (
          /*!******************************************!*\
            !*** ./src/Services/CreateTheConcept.ts ***!
            \******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateTheConceptImmediate: () => (
                /* binding */
                CreateTheConceptImmediate
              ),
              /* harmony export */
              CreateTheConceptTemporary: () => (
                /* binding */
                CreateTheConceptTemporary
              ),
              /* harmony export */
              "default": () => (
                /* binding */
                CreateTheConcept
              )
              /* harmony export */
            });
            var _Api_Create_CreateTheConceptApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/Create/CreateTheConceptApi */
              "./src/Api/Create/CreateTheConceptApi.ts"
            );
            var _DataStructures_Concept__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/Concept */
              "./src/DataStructures/Concept.ts"
            );
            var _DataStructures_ReservedIds__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../DataStructures/ReservedIds */
              "./src/DataStructures/ReservedIds.ts"
            );
            var _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../DataStructures/SyncData */
              "./src/DataStructures/SyncData.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateTheConcept(referent, userId, categoryId, typeId, referentId, accessId, typeCharacter) {
              return __awaiter(this, void 0, void 0, function* () {
                let id = yield _DataStructures_ReservedIds__WEBPACK_IMPORTED_MODULE_2__.ReservedIds.getId();
                let isNew = true;
                let created_on = /* @__PURE__ */ new Date();
                let updated_on = /* @__PURE__ */ new Date();
                let concept = new _DataStructures_Concept__WEBPACK_IMPORTED_MODULE_1__.Concept(id, userId, typeId, categoryId, referentId, referent, accessId, isNew, created_on, updated_on, typeCharacter);
                concept.isTemp = false;
                _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_3__.SyncData.AddConcept(concept);
                return concept;
              });
            }
            function CreateTheConceptTemporary(referent, userId, categoryId, typeId, referentId, accessId, typeCharacter) {
              return __awaiter(this, void 0, void 0, function* () {
                let id = yield _DataStructures_ReservedIds__WEBPACK_IMPORTED_MODULE_2__.ReservedIds.getId();
                let isNew = true;
                let created_on = /* @__PURE__ */ new Date();
                let updated_on = /* @__PURE__ */ new Date();
                let concept = new _DataStructures_Concept__WEBPACK_IMPORTED_MODULE_1__.Concept(id, userId, typeId, categoryId, referentId, referent, accessId, isNew, created_on, updated_on, typeCharacter);
                concept.isTemp = true;
                return concept;
              });
            }
            function CreateTheConceptImmediate(referent, userId, categoryId, typeId, referentId, accessId, typeCharacter) {
              return __awaiter(this, void 0, void 0, function* () {
                let id = yield _DataStructures_ReservedIds__WEBPACK_IMPORTED_MODULE_2__.ReservedIds.getId();
                let isNew = false;
                let created_on = /* @__PURE__ */ new Date();
                let updated_on = /* @__PURE__ */ new Date();
                let concept = new _DataStructures_Concept__WEBPACK_IMPORTED_MODULE_1__.Concept(id, userId, typeId, categoryId, referentId, referent, accessId, isNew, created_on, updated_on, typeCharacter);
                _app__WEBPACK_IMPORTED_MODULE_4__.ConceptsData.AddConcept(concept);
                (0, _Api_Create_CreateTheConceptApi__WEBPACK_IMPORTED_MODULE_0__.CreateTheConceptApi)([concept]);
                return concept;
              });
            }
          }
        ),
        /***/
        "./src/Services/CreateTheConnection.ts": (
          /*!*********************************************!*\
            !*** ./src/Services/CreateTheConnection.ts ***!
            \*********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              createTheConnection: () => (
                /* binding */
                createTheConnection
              )
              /* harmony export */
            });
            var _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/Connection */
              "./src/DataStructures/Connection.ts"
            );
            var _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/SyncData */
              "./src/DataStructures/SyncData.ts"
            );
            var _Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./Common/ErrorPosting */
              "./src/Services/Common/ErrorPosting.ts"
            );
            function createTheConnection(ofTheConceptId, userId, toTheConceptId, typeId) {
              var orderId = 1;
              var localUserId = userId;
              var accessId = 4;
              var connection = new _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__.Connection(0, ofTheConceptId, toTheConceptId, localUserId, typeId, orderId, accessId);
              if (ofTheConceptId == toTheConceptId) {
                connection.ofTheConceptId = 0;
                connection.toTheConceptId = 1;
                return connection;
              }
              try {
                connection.isTemp = true;
                connection.id = Math.floor(Math.random() * 1e8);
                _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_1__.SyncData.AddConnection(connection);
              } catch (error) {
                (0, _Common_ErrorPosting__WEBPACK_IMPORTED_MODULE_2__.HandleInternalError)(error);
              }
              return connection;
            }
          }
        ),
        /***/
        "./src/Services/CreateTheConnectionGeneral.ts": (
          /*!****************************************************!*\
            !*** ./src/Services/CreateTheConnectionGeneral.ts ***!
            \****************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateTheConnectionGeneral: () => (
                /* binding */
                CreateTheConnectionGeneral
              )
              /* harmony export */
            });
            var _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/Connection */
              "./src/DataStructures/Connection.ts"
            );
            var _DataStructures_ReservedIds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/ReservedIds */
              "./src/DataStructures/ReservedIds.ts"
            );
            var _DataStructures_Responses_ErrorResponse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../DataStructures/Responses/ErrorResponse */
              "./src/DataStructures/Responses/ErrorResponse.ts"
            );
            var _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../DataStructures/SyncData */
              "./src/DataStructures/SyncData.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateTheConnectionGeneral(ofTheConceptId_1, ofTheConceptUserId_1, toTheConceptId_1, typeId_1) {
              return __awaiter(this, arguments, void 0, function* (ofTheConceptId, ofTheConceptUserId, toTheConceptId, typeId, orderId = 1, accessId = 4) {
                if (ofTheConceptId > 0 && toTheConceptId > 0) {
                  var userId = ofTheConceptUserId;
                  var id = yield _DataStructures_ReservedIds__WEBPACK_IMPORTED_MODULE_1__.ReservedConnectionIds.getId();
                  var connection = new _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__.Connection(id, ofTheConceptId, toTheConceptId, userId, typeId, orderId, accessId);
                  if (ofTheConceptId == toTheConceptId) {
                    connection.ofTheConceptId = 0;
                    connection.toTheConceptId = 1;
                    return connection;
                  }
                  connection.toUpdate = true;
                  connection.isTemp = false;
                  _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_3__.SyncData.AddConnection(connection);
                  return connection;
                } else {
                  throw new _DataStructures_Responses_ErrorResponse__WEBPACK_IMPORTED_MODULE_2__.FreeSchemaResponse("cannot create connection because id are negative ", false, 400, "");
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/DeleteConcept.ts": (
          /*!***************************************!*\
            !*** ./src/Services/DeleteConcept.ts ***!
            \***************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              DeleteConceptById: () => (
                /* binding */
                DeleteConceptById
              )
              /* harmony export */
            });
            var _Api_DeleteTheConcept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/DeleteTheConcept */
              "./src/Api/DeleteTheConcept.ts"
            );
            var _DataStructures_BinaryCharacterTree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/BinaryCharacterTree */
              "./src/DataStructures/BinaryCharacterTree.ts"
            );
            var _DataStructures_BinaryTree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../DataStructures/BinaryTree */
              "./src/DataStructures/BinaryTree.ts"
            );
            var _DataStructures_BinaryTypeTree__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../DataStructures/BinaryTypeTree */
              "./src/DataStructures/BinaryTypeTree.ts"
            );
            var _DataStructures_ConnectionBinaryTree_ConnectionOfTheTree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../DataStructures/ConnectionBinaryTree/ConnectionOfTheTree */
              "./src/DataStructures/ConnectionBinaryTree/ConnectionOfTheTree.ts"
            );
            var _GetTheConcept__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__2(
              /*! ./GetTheConcept */
              "./src/Services/GetTheConcept.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function DeleteConceptById(id) {
              return __awaiter(this, void 0, void 0, function* () {
                var concept = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_5__["default"])(id);
                var typeId = concept.typeId;
                var character = concept.characterValue;
                yield _DataStructures_BinaryTypeTree__WEBPACK_IMPORTED_MODULE_3__.BinaryTypeTree.removeTypeConcept(typeId, id);
                yield _DataStructures_BinaryCharacterTree__WEBPACK_IMPORTED_MODULE_1__.BinaryCharacterTree.removeNodeByCharacter(character, id);
                yield (0, _Api_DeleteTheConcept__WEBPACK_IMPORTED_MODULE_0__["default"])(id);
                yield _DataStructures_BinaryTree__WEBPACK_IMPORTED_MODULE_2__.BinaryTree.removeNodeFromTree(id);
                yield _DataStructures_ConnectionBinaryTree_ConnectionOfTheTree__WEBPACK_IMPORTED_MODULE_4__.ConnectionOfTheTree.removeNodeFromTree(id);
              });
            }
          }
        ),
        /***/
        "./src/Services/DeleteConnection.ts": (
          /*!******************************************!*\
            !*** ./src/Services/DeleteConnection.ts ***!
            \******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              DeleteConnectionById: () => (
                /* binding */
                DeleteConnectionById
              )
              /* harmony export */
            });
            var _Api_DeleteTheConnection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/DeleteTheConnection */
              "./src/Api/DeleteTheConnection.ts"
            );
            var _DataStructures_ConnectionBinaryTree_ConnectionBinaryTree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/ConnectionBinaryTree/ConnectionBinaryTree */
              "./src/DataStructures/ConnectionBinaryTree/ConnectionBinaryTree.ts"
            );
            var _DataStructures_ConnectionBinaryTree_ConnectionTypeTree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../DataStructures/ConnectionBinaryTree/ConnectionTypeTree */
              "./src/DataStructures/ConnectionBinaryTree/ConnectionTypeTree.ts"
            );
            var _GetConnections__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./GetConnections */
              "./src/Services/GetConnections.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function DeleteConnectionById(id) {
              return __awaiter(this, void 0, void 0, function* () {
                let connection = yield (0, _GetConnections__WEBPACK_IMPORTED_MODULE_3__.GetConnectionById)(id);
                yield (0, _Api_DeleteTheConnection__WEBPACK_IMPORTED_MODULE_0__["default"])(id);
                _DataStructures_ConnectionBinaryTree_ConnectionBinaryTree__WEBPACK_IMPORTED_MODULE_1__.ConnectionBinaryTree.removeNodeFromTree(id);
                _DataStructures_ConnectionBinaryTree_ConnectionTypeTree__WEBPACK_IMPORTED_MODULE_2__.ConnectionTypeTree.removeTypeConcept(connection.typeId, id);
              });
            }
          }
        ),
        /***/
        "./src/Services/FindConeceptsFromConnection.ts": (
          /*!*****************************************************!*\
            !*** ./src/Services/FindConeceptsFromConnection.ts ***!
            \*****************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              FindConceptsFromConnections: () => (
                /* binding */
                FindConceptsFromConnections
              )
              /* harmony export */
            });
            var _Api_GetConceptBulk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetConceptBulk */
              "./src/Api/GetConceptBulk.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function FindConceptsFromConnections() {
              return __awaiter(this, arguments, void 0, function* (connectionList = []) {
                let ConceptList = [];
                if (connectionList.length > 0) {
                  for (let i2 = 0; i2 < connectionList.length; i2++) {
                    if (!ConceptList.includes(connectionList[i2].ofTheConceptId)) {
                      ConceptList.push(connectionList[i2].ofTheConceptId);
                    }
                    if (!ConceptList.includes(connectionList[i2].toTheConceptId)) {
                      ConceptList.push(connectionList[i2].toTheConceptId);
                    }
                  }
                  yield (0, _Api_GetConceptBulk__WEBPACK_IMPORTED_MODULE_0__.GetConceptBulk)(ConceptList);
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/FindConnectionsOfCompositionBulkInMemory.ts": (
          /*!******************************************************************!*\
            !*** ./src/Services/FindConnectionsOfCompositionBulkInMemory.ts ***!
            \******************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              FindConnectionsOfCompositionsBulkInMemory: () => (
                /* binding */
                FindConnectionsOfCompositionsBulkInMemory
              )
              /* harmony export */
            });
            var _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/ConnectionData */
              "./src/DataStructures/ConnectionData.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function FindConnectionsOfCompositionsBulkInMemory() {
              return __awaiter(this, arguments, void 0, function* (composition_ids = []) {
                let FinalConnectionList = [];
                for (let i2 = 0; i2 < composition_ids.length; i2++) {
                  let connectionList = yield _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__.ConnectionData.GetConnectionsOfConcept(composition_ids[i2]);
                  FinalConnectionList.push(...connectionList);
                }
                return FinalConnectionList;
              });
            }
          }
        ),
        /***/
        "./src/Services/GetComposition.ts": (
          /*!****************************************!*\
            !*** ./src/Services/GetComposition.ts ***!
            \****************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetComposition: () => (
                /* binding */
                GetComposition
              ),
              /* harmony export */
              GetCompositionById: () => (
                /* binding */
                GetCompositionById
              ),
              /* harmony export */
              GetCompositionFromMemory: () => (
                /* binding */
                GetCompositionFromMemory
              ),
              /* harmony export */
              GetCompositionFromMemoryNormal: () => (
                /* binding */
                GetCompositionFromMemoryNormal
              ),
              /* harmony export */
              GetCompositionWithAllIds: () => (
                /* binding */
                GetCompositionWithAllIds
              ),
              /* harmony export */
              GetCompositionWithId: () => (
                /* binding */
                GetCompositionWithId
              ),
              /* harmony export */
              GetCompositionWithIdAndDateFromMemory: () => (
                /* binding */
                GetCompositionWithIdAndDateFromMemory
              ),
              /* harmony export */
              GetCompositionWithIdFromMemory: () => (
                /* binding */
                GetCompositionWithIdFromMemory
              ),
              /* harmony export */
              GetCompositionWithIdFromMemoryFromConnections: () => (
                /* binding */
                GetCompositionWithIdFromMemoryFromConnections
              ),
              /* harmony export */
              GetCompositionWithIdFromMemoryNew: () => (
                /* binding */
                GetCompositionWithIdFromMemoryNew
              ),
              /* harmony export */
              RecursiveFetchBuildLayer: () => (
                /* binding */
                RecursiveFetchBuildLayer
              ),
              /* harmony export */
              RecursiveFetchBuildLayerDataId: () => (
                /* binding */
                RecursiveFetchBuildLayerDataId
              ),
              /* harmony export */
              RecursiveFetchBuildLayerNormal: () => (
                /* binding */
                RecursiveFetchBuildLayerNormal
              ),
              /* harmony export */
              recursiveFetch: () => (
                /* binding */
                recursiveFetch
              ),
              /* harmony export */
              recursiveFetchConcept: () => (
                /* binding */
                recursiveFetchConcept
              ),
              /* harmony export */
              recursiveFetchConceptNormal: () => (
                /* binding */
                recursiveFetchConceptNormal
              ),
              /* harmony export */
              recursiveFetchConceptSingleLoop: () => (
                /* binding */
                recursiveFetchConceptSingleLoop
              ),
              /* harmony export */
              recursiveFetchWithSubCompositions: () => (
                /* binding */
                recursiveFetchWithSubCompositions
              )
              /* harmony export */
            });
            var _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetConcept */
              "./src/Api/GetConcept.ts"
            );
            var _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Api/GetAllConnectionsOfComposition */
              "./src/Api/GetAllConnectionsOfComposition.ts"
            );
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../DataStructures/ConnectionData */
              "./src/DataStructures/ConnectionData.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetCompositionById(id) {
              return __awaiter(this, void 0, void 0, function* () {
                let connectionList = [];
                let returnOutput = {};
                let connectionListString = yield (0, _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_1__.GetAllConnectionsOfComposition)(id);
                connectionList = connectionListString;
                let compositionList = [];
                for (let i2 = 0; i2 < connectionList.length; i2++) {
                  if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                    compositionList.push(connectionList[i2].ofTheConceptId);
                  }
                }
                return { "connectionList": connectionList, "compositionList": compositionList };
              });
            }
            function RecursiveFetchBuildLayer(id, connectionList, compositionList) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                let returnOutput = {};
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                let output = yield recursiveFetch(id, connectionList, compositionList);
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                returnOutput[mainString] = output;
                return returnOutput;
              });
            }
            function RecursiveFetchBuildLayerDataId(id, connectionList, compositionList) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                let returnOutput = {};
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                let output = yield recursiveFetch(id, connectionList, compositionList);
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                returnOutput[mainString] = output;
                let FinalReturn = {};
                FinalReturn["created_at"] = concept.entryTimeStamp;
                FinalReturn["data"] = returnOutput;
                FinalReturn["id"] = id;
                return FinalReturn;
              });
            }
            function RecursiveFetchBuildLayerNormal(id, connectionList, compositionList) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                let returnOutput = {};
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                let output = yield recursiveFetchConceptNormal(concept, connectionList, compositionList);
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                returnOutput[mainString] = output;
                return returnOutput;
              });
            }
            function GetComposition(id) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                let connectionList = [];
                let returnOutput = {};
                let connectionListString = yield (0, _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_1__.GetAllConnectionsOfComposition)(id);
                connectionList = connectionListString;
                console.log("this is the connection list online", connectionList);
                let compositionList = [];
                for (let i2 = 0; i2 < connectionList.length; i2++) {
                  if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                    compositionList.push(connectionList[i2].ofTheConceptId);
                  }
                }
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                let output = yield recursiveFetch(id, connectionList, compositionList);
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                returnOutput[mainString] = output;
                return returnOutput;
              });
            }
            function GetCompositionWithAllIds(id) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                let connectionList = [];
                let returnOutput = {};
                let connectionListString = yield (0, _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_1__.GetAllConnectionsOfComposition)(id);
                connectionList = connectionListString;
                let compositionList = [];
                for (let i2 = 0; i2 < connectionList.length; i2++) {
                  if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                    compositionList.push(connectionList[i2].ofTheConceptId);
                  }
                }
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                let output = yield recursiveFetchWithSubCompositions(id, connectionList, compositionList);
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                returnOutput[mainString] = output;
                return returnOutput;
              });
            }
            function GetCompositionFromMemory(id) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                let connectionList = [];
                let returnOutput = {};
                connectionList = yield _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_3__.ConnectionData.GetConnectionsOfConcept(id);
                let compositionList = [];
                for (let i2 = 0; i2 < connectionList.length; i2++) {
                  if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                    compositionList.push(connectionList[i2].ofTheConceptId);
                  }
                }
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                let output = yield recursiveFetchConcept(concept, connectionList, compositionList);
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                returnOutput[mainString] = output;
                return returnOutput;
              });
            }
            function GetCompositionFromMemoryNormal(id) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                let connectionList = [];
                let returnOutput = {};
                connectionList = yield _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_3__.ConnectionData.GetConnectionsOfConcept(id);
                let compositionList = [];
                console.log("this is the connection list that you build", connectionList);
                for (let i2 = 0; i2 < connectionList.length; i2++) {
                  if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                    compositionList.push(connectionList[i2].ofTheConceptId);
                  }
                }
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                let output = yield recursiveFetchConceptNormal(concept, connectionList, compositionList);
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                returnOutput[mainString] = output;
                console.log("this is the output of memory normal", returnOutput);
                return returnOutput;
              });
            }
            function GetCompositionWithIdFromMemory(id) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                let connectionList = [];
                let returnOutput = {};
                connectionList = yield _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_3__.ConnectionData.GetConnectionsOfConcept(id);
                let compositionList = [];
                for (let i2 = 0; i2 < connectionList.length; i2++) {
                  if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                    compositionList.push(connectionList[i2].ofTheConceptId);
                  }
                }
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  console.log("this concept you cannot find ", id);
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                let output = yield recursiveFetchConcept(concept, connectionList, compositionList);
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                returnOutput[mainString] = output;
                let FinalReturn = {};
                FinalReturn["created_at"] = concept.entryTimeStamp;
                FinalReturn["data"] = returnOutput;
                FinalReturn["id"] = id;
                return FinalReturn;
              });
            }
            function GetCompositionWithIdFromMemoryNew(id) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                let connectionList = [];
                let returnOutput = {};
                connectionList = yield _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_3__.ConnectionData.GetConnectionsOfConcept(id);
                let compositionList = [];
                for (let i2 = 0; i2 < connectionList.length; i2++) {
                  if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                    compositionList.push(connectionList[i2].ofTheConceptId);
                  }
                }
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  console.log("this concept you cannot find ", id);
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                let startTime = (/* @__PURE__ */ new Date()).getTime();
                let output = yield recursiveFetchConceptSingleLoop(concept, connectionList, compositionList);
                console.log("this is the time for the data to be made", (/* @__PURE__ */ new Date()).getTime() - startTime);
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                returnOutput = output;
                let FinalReturn = {};
                FinalReturn["created_at"] = concept.entryTimeStamp;
                FinalReturn["data"] = returnOutput;
                FinalReturn["id"] = id;
                return FinalReturn;
              });
            }
            function GetCompositionWithIdAndDateFromMemory(id) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                let connectionList = [];
                let returnOutput = {};
                connectionList = yield _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_3__.ConnectionData.GetConnectionsOfConcept(id);
                let compositionList = [];
                for (let i2 = 0; i2 < connectionList.length; i2++) {
                  if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                    compositionList.push(connectionList[i2].ofTheConceptId);
                  }
                }
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                let output = yield recursiveFetch(id, connectionList, compositionList);
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                returnOutput[mainString] = output;
                let FinalReturn = {};
                FinalReturn["data"] = returnOutput;
                FinalReturn["id"] = id;
                FinalReturn["created_at"] = concept.entryTimeStamp;
                return FinalReturn;
              });
            }
            function GetCompositionWithIdFromMemoryFromConnections(id_1) {
              return __awaiter(this, arguments, void 0, function* (id, connectionList = []) {
                var _a, _b;
                let returnOutput = {};
                let compositionList = [];
                for (let i2 = 0; i2 < connectionList.length; i2++) {
                  if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                    compositionList.push(connectionList[i2].ofTheConceptId);
                  }
                }
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                let output = yield recursiveFetch(id, connectionList, compositionList);
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                returnOutput[mainString] = output;
                let FinalReturn = {};
                FinalReturn["data"] = returnOutput;
                FinalReturn["id"] = id;
                return FinalReturn;
              });
            }
            function GetCompositionWithId(id) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                let connectionList = [];
                let returnOutput = {};
                let connectionListString = yield (0, _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_1__.GetAllConnectionsOfComposition)(id);
                connectionList = connectionListString;
                let compositionList = [];
                for (let i2 = 0; i2 < connectionList.length; i2++) {
                  if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                    compositionList.push(connectionList[i2].ofTheConceptId);
                  }
                }
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if (concept.id == 0 && id != null && id != void 0) {
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                let output = yield recursiveFetch(id, connectionList, compositionList);
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                returnOutput[mainString] = output;
                let FinalReturn = {};
                FinalReturn["data"] = returnOutput;
                FinalReturn["id"] = id;
                return FinalReturn;
              });
            }
            function recursiveFetchConcept(concept_1, connectionList_1, compositionList_1) {
              return __awaiter(this, arguments, void 0, function* (concept, connectionList, compositionList, visitedConcepts = []) {
                var _a, _b, _c, _d;
                let output = {};
                let arroutput = [];
                let id = concept.id;
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                if (!compositionList.includes(id)) {
                  return concept === null || concept === void 0 ? void 0 : concept.characterValue;
                } else {
                  if (visitedConcepts.includes(id)) {
                    return "";
                  } else {
                    visitedConcepts.push(id);
                  }
                  for (let i2 = 0; i2 < connectionList.length; i2++) {
                    if (connectionList[i2].ofTheConceptId == id) {
                      if (id != connectionList[i2].toTheConceptId) {
                        let toConceptId = connectionList[i2].toTheConceptId;
                        let toConcept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(toConceptId);
                        if ((toConcept == null || toConcept.id == 0) && toConceptId != null && toConceptId != void 0) {
                          let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(toConceptId);
                          toConcept = conceptString;
                        }
                        if (toConcept.id != 0) {
                          if ((toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) == null) {
                            let toConceptTypeId = toConcept.typeId;
                            let toConceptType = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(toConceptTypeId);
                            toConcept.type = toConceptType;
                            if (toConceptType == null && toConceptTypeId != null && toConceptTypeId != void 0) {
                              let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(toConceptTypeId);
                              toConceptType = conceptString;
                              toConcept.type = toConceptType;
                            }
                          }
                        }
                        let regex = "the_";
                        let localmainString = (_d = (_c = toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) === null || _c === void 0 ? void 0 : _c.characterValue) !== null && _d !== void 0 ? _d : "";
                        let localKey = localmainString.replace(regex, "");
                        if (isNaN(Number(localKey))) {
                          if (localKey) {
                            const result = yield recursiveFetchConcept(toConcept, connectionList, compositionList, visitedConcepts);
                            output[localKey] = result;
                          }
                        } else {
                          const result = yield recursiveFetchConcept(toConcept, connectionList, compositionList, visitedConcepts);
                          arroutput[localKey] = result;
                          output = arroutput;
                        }
                      } else {
                        console.log("this is the faulty connection ", connectionList[i2]);
                      }
                    }
                  }
                }
                return output;
              });
            }
            function recursiveFetchConceptNormal(concept_1, connectionList_1, compositionList_1) {
              return __awaiter(this, arguments, void 0, function* (concept, connectionList, compositionList, visitedConcepts = []) {
                var _a, _b, _c, _d;
                let startTime = (/* @__PURE__ */ new Date()).getTime();
                let output = {};
                let arroutput = [];
                let id = concept.id;
                output["id"] = id;
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                if (!compositionList.includes(id)) {
                  return concept === null || concept === void 0 ? void 0 : concept.characterValue;
                } else {
                  if (visitedConcepts.includes(id)) {
                    return "";
                  } else {
                    visitedConcepts.push(id);
                  }
                  for (let i2 = 0; i2 < connectionList.length; i2++) {
                    if (connectionList[i2].ofTheConceptId == id) {
                      if (id != connectionList[i2].toTheConceptId) {
                        let toConceptId = connectionList[i2].toTheConceptId;
                        let toConcept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(toConceptId);
                        if ((toConcept == null || toConcept.id == 0) && toConceptId != null && toConceptId != void 0) {
                          let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(toConceptId);
                          toConcept = conceptString;
                        }
                        if (toConcept.id != 0) {
                          if ((toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) == null) {
                            let toConceptTypeId = toConcept.typeId;
                            let toConceptType = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(toConceptTypeId);
                            toConcept.type = toConceptType;
                            if (toConceptType == null && toConceptTypeId != null && toConceptTypeId != void 0) {
                              let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(toConceptTypeId);
                              toConceptType = conceptString;
                              toConcept.type = toConceptType;
                            }
                          }
                        }
                        let regex = "the_";
                        let localmainString = (_d = (_c = toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) === null || _c === void 0 ? void 0 : _c.characterValue) !== null && _d !== void 0 ? _d : "";
                        let localKey = localmainString.replace(regex, "");
                        if (isNaN(Number(localKey))) {
                          if (localKey) {
                            const result = yield recursiveFetchConcept(toConcept, connectionList, compositionList, visitedConcepts);
                            output[localKey] = result;
                          }
                        } else {
                          const result = yield recursiveFetchConcept(toConcept, connectionList, compositionList, visitedConcepts);
                          arroutput[localKey] = result;
                          output = arroutput;
                        }
                      } else {
                        console.log("this is the faulty connection ", connectionList[i2]);
                      }
                    }
                  }
                }
                return output;
              });
            }
            function recursiveFetchConceptSingleLoop(concept_1, connectionList_1, compositionList_1) {
              return __awaiter(this, arguments, void 0, function* (concept, connectionList, compositionList, visitedConcepts = []) {
                var _a, _b, _c, _d, _e, _f, _g, _h;
                let output = {};
                let id = concept.id;
                let startTime = (/* @__PURE__ */ new Date()).getTime();
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                if (!compositionList.includes(id)) {
                  let myString = mainString;
                  let returnoutput = { [myString]: concept === null || concept === void 0 ? void 0 : concept.characterValue };
                  return returnoutput;
                } else {
                  if (visitedConcepts.includes(id)) {
                    return "";
                  } else {
                    visitedConcepts.push(id);
                  }
                  for (let i2 = 0; i2 < connectionList.length; i2++) {
                    let newData = yield (0, _app__WEBPACK_IMPORTED_MODULE_4__.GetTheConcept)(connectionList[i2].ofTheConceptId);
                    let toConcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_4__.GetTheConcept)(connectionList[i2].toTheConceptId);
                    connectionList[i2].ofConcept = newData;
                    connectionList[i2].toConcept = toConcept;
                    let ofKey = newData.id;
                    let toConceptKey = (_d = (_c = toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) === null || _c === void 0 ? void 0 : _c.characterValue) !== null && _d !== void 0 ? _d : "";
                    let regex = "the_";
                    let localmainString = toConceptKey;
                    let localToKey = localmainString.replace(regex, "");
                    if (output[ofKey] == void 0 || output[ofKey] == null) {
                      output[ofKey] = {};
                    }
                    output[ofKey][localToKey] = toConcept.characterValue;
                  }
                }
                let finalOutput = {};
                for (let i2 = 0; i2 < connectionList.length; i2++) {
                  let ofConcept = connectionList[i2].ofConcept;
                  let toConcept = connectionList[i2].toConcept;
                  let ofConceptKey = (_f = (_e = ofConcept === null || ofConcept === void 0 ? void 0 : ofConcept.type) === null || _e === void 0 ? void 0 : _e.characterValue) !== null && _f !== void 0 ? _f : "";
                  let toConceptKey = (_h = (_g = toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) === null || _g === void 0 ? void 0 : _g.characterValue) !== null && _h !== void 0 ? _h : "";
                  let regex = "the_";
                  let localmainString = toConceptKey;
                  let localToKey = localmainString.replace(regex, "");
                  if (finalOutput[ofConcept.id] == void 0 || finalOutput[ofConcept.id] == null) {
                    finalOutput[ofConcept.id] = {};
                  }
                  let internalOutput = finalOutput[ofConcept.id];
                  if (internalOutput[ofConceptKey] == void 0 || internalOutput[ofConceptKey] == null) {
                    internalOutput[ofConceptKey] = {};
                  }
                  if (output[connectionList[i2].ofTheConceptId] != void 0 && output[connectionList[i2].toTheConceptId] != void 0) {
                    internalOutput[ofConceptKey][localToKey] = output[toConcept.id];
                  } else {
                    internalOutput[ofConceptKey][localToKey] = toConcept.characterValue;
                  }
                }
                return finalOutput[concept.id];
              });
            }
            function recursiveFetch(id_1, connectionList_1, compositionList_1) {
              return __awaiter(this, arguments, void 0, function* (id, connectionList, compositionList, visitedConcepts = []) {
                var _a, _b, _c, _d;
                let output = {};
                let arroutput = [];
                if (id == 0) {
                  return null;
                }
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if ((concept == null || concept.id == 0) && id != null && id != void 0) {
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                if (concept.id != 0) {
                  if (concept.type == null) {
                    let toConceptTypeId = concept.typeId;
                    let toConceptType = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(toConceptTypeId);
                    concept.type = toConceptType;
                    if (toConceptType == null && toConceptTypeId != null && toConceptTypeId != void 0) {
                      let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(toConceptTypeId);
                      toConceptType = conceptString;
                      concept.type = toConceptType;
                    }
                  }
                }
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                if (!compositionList.includes(id)) {
                  return concept === null || concept === void 0 ? void 0 : concept.characterValue;
                } else {
                  if (visitedConcepts.includes(id)) {
                    return "";
                  } else {
                    visitedConcepts.push(id);
                  }
                  for (let i2 = 0; i2 < connectionList.length; i2++) {
                    let insideTime = (/* @__PURE__ */ new Date()).getTime();
                    if (connectionList[i2].ofTheConceptId == id) {
                      if (id != connectionList[i2].toTheConceptId) {
                        let toConceptId = connectionList[i2].toTheConceptId;
                        let toConcept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(toConceptId);
                        if ((toConcept == null || toConcept.id == 0) && toConceptId != null && toConceptId != void 0) {
                          let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(toConceptId);
                          toConcept = conceptString;
                        }
                        if (toConcept.id != 0) {
                          if ((toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) == null) {
                            let toConceptTypeId = toConcept.typeId;
                            let toConceptType = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(toConceptTypeId);
                            toConcept.type = toConceptType;
                            if (toConceptType == null && toConceptTypeId != null && toConceptTypeId != void 0) {
                              let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(toConceptTypeId);
                              toConceptType = conceptString;
                              toConcept.type = toConceptType;
                            }
                          }
                        }
                        let regex = "the_";
                        let localmainString = (_d = (_c = toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) === null || _c === void 0 ? void 0 : _c.characterValue) !== null && _d !== void 0 ? _d : "";
                        let localKey = localmainString.replace(regex, "");
                        if (isNaN(Number(localKey))) {
                          if (localKey) {
                            const result = yield recursiveFetch(toConceptId, connectionList, compositionList, visitedConcepts);
                            output[localKey] = result;
                          }
                        } else {
                          const result = yield recursiveFetch(toConceptId, connectionList, compositionList, visitedConcepts);
                          arroutput[localKey] = result;
                          output = arroutput;
                        }
                      } else {
                        console.log("this is the faulty connection ", connectionList[i2]);
                      }
                    }
                  }
                }
                return output;
              });
            }
            function recursiveFetchWithSubCompositions(id_1, connectionList_1, compositionList_1) {
              return __awaiter(this, arguments, void 0, function* (id, connectionList, compositionList, visitedConcepts = []) {
                var _a, _b, _c, _d;
                let output = {};
                let arroutput = [];
                if (id == 0) {
                  return null;
                }
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                if ((concept == null || concept.id == 0) && id != null && id != void 0) {
                  let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                  concept = conceptString;
                }
                if (concept.id != 0) {
                  if (concept.type == null) {
                    let toConceptTypeId = concept.typeId;
                    let toConceptType = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(toConceptTypeId);
                    concept.type = toConceptType;
                    if (toConceptType == null && toConceptTypeId != null && toConceptTypeId != void 0) {
                      let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(toConceptTypeId);
                      toConceptType = conceptString;
                      concept.type = toConceptType;
                    }
                  }
                }
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "";
                if (!compositionList.includes(id)) {
                  return concept === null || concept === void 0 ? void 0 : concept.characterValue;
                } else {
                  if (visitedConcepts.includes(id)) {
                    return "";
                  } else {
                    visitedConcepts.push(id);
                  }
                  output["id"] = id;
                  for (let i2 = 0; i2 < connectionList.length; i2++) {
                    if (connectionList[i2].ofTheConceptId == id) {
                      let toConceptId = connectionList[i2].toTheConceptId;
                      let toConcept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(toConceptId);
                      if ((toConcept == null || toConcept.id == 0) && toConceptId != null && toConceptId != void 0) {
                        let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(toConceptId);
                        toConcept = conceptString;
                      }
                      if (toConcept) {
                        if ((toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) == null) {
                          let toConceptTypeId = toConcept.typeId;
                          let toConceptType = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(toConceptTypeId);
                          toConcept.type = toConceptType;
                          if (toConceptType == null && toConceptTypeId != null && toConceptTypeId != void 0) {
                            let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(toConceptTypeId);
                            toConceptType = conceptString;
                            toConcept.type = toConceptType;
                          }
                        }
                      }
                      let regex = "the_";
                      let localmainString = (_d = (_c = toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) === null || _c === void 0 ? void 0 : _c.characterValue) !== null && _d !== void 0 ? _d : "";
                      let localKey = localmainString.replace(regex, "");
                      if (isNaN(Number(localKey))) {
                        if (localKey) {
                          const result = yield recursiveFetchWithSubCompositions(toConceptId, connectionList, compositionList);
                          output[localKey] = result;
                        }
                      } else {
                        const result = yield recursiveFetchWithSubCompositions(toConceptId, connectionList, compositionList);
                        arroutput[localKey] = result;
                        output = arroutput;
                      }
                    }
                  }
                }
                return output;
              });
            }
          }
        ),
        /***/
        "./src/Services/GetCompositionBulk.ts": (
          /*!********************************************!*\
            !*** ./src/Services/GetCompositionBulk.ts ***!
            \********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetCompositionBulk: () => (
                /* binding */
                GetCompositionBulk
              ),
              /* harmony export */
              GetCompositionBulkWithDataId: () => (
                /* binding */
                GetCompositionBulkWithDataId
              ),
              /* harmony export */
              GetCompositionFromConnectionsInObject: () => (
                /* binding */
                GetCompositionFromConnectionsInObject
              ),
              /* harmony export */
              GetCompositionFromConnectionsInObjectNormal: () => (
                /* binding */
                GetCompositionFromConnectionsInObjectNormal
              ),
              /* harmony export */
              GetCompositionFromConnectionsWithDataId: () => (
                /* binding */
                GetCompositionFromConnectionsWithDataId
              ),
              /* harmony export */
              GetCompositionFromConnectionsWithDataIdInObject: () => (
                /* binding */
                GetCompositionFromConnectionsWithDataIdInObject
              ),
              /* harmony export */
              GetCompositionFromConnectionsWithDataIdInObjectNew: () => (
                /* binding */
                GetCompositionFromConnectionsWithDataIdInObjectNew
              ),
              /* harmony export */
              GetCompositionFromConnectionsWithDataIdIndex: () => (
                /* binding */
                GetCompositionFromConnectionsWithDataIdIndex
              ),
              /* harmony export */
              GetCompositionFromConnectionsWithIndex: () => (
                /* binding */
                GetCompositionFromConnectionsWithIndex
              ),
              /* harmony export */
              GetConnectionDataPrefetch: () => (
                /* binding */
                GetConnectionDataPrefetch
              )
              /* harmony export */
            });
            var _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetAllConnectionsOfCompositionBulk */
              "./src/Api/GetAllConnectionsOfCompositionBulk.ts"
            );
            var _Api_GetConnectionBulk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Api/GetConnectionBulk */
              "./src/Api/GetConnectionBulk.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _CheckForConnectionDeletion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./CheckForConnectionDeletion */
              "./src/Services/CheckForConnectionDeletion.ts"
            );
            var _FindConnectionsOfCompositionBulkInMemory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ./FindConnectionsOfCompositionBulkInMemory */
              "./src/Services/FindConnectionsOfCompositionBulkInMemory.ts"
            );
            var _GetComposition__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__2(
              /*! ./GetComposition */
              "./src/Services/GetComposition.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetCompositionBulk() {
              return __awaiter(this, arguments, void 0, function* (conceptIds = []) {
                yield (0, _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_0__.GetAllConnectionsOfCompositionBulk)(conceptIds);
                let compositions = [];
                for (let i2 = 0; i2 < conceptIds.length; i2++) {
                  let comp = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.GetCompositionFromMemory)(conceptIds[i2]);
                  compositions.push(comp);
                }
                return compositions;
              });
            }
            function GetCompositionBulkWithDataId() {
              return __awaiter(this, arguments, void 0, function* (conceptIds = []) {
                yield (0, _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_0__.GetAllConnectionsOfCompositionBulk)(conceptIds);
                let compositions = [];
                for (let i2 = 0; i2 < conceptIds.length; i2++) {
                  let comp = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.GetCompositionWithIdFromMemory)(conceptIds[i2]);
                  compositions.push(comp);
                }
                return compositions;
              });
            }
            function GetCompositionFromConnectionsWithDataId() {
              return __awaiter(this, arguments, void 0, function* (conceptIds = [], connectionIds = []) {
                let newConnections = yield (0, _Api_GetConnectionBulk__WEBPACK_IMPORTED_MODULE_1__.GetConnectionBulk)(connectionIds);
                let oldConnections = yield (0, _FindConnectionsOfCompositionBulkInMemory__WEBPACK_IMPORTED_MODULE_4__.FindConnectionsOfCompositionsBulkInMemory)(conceptIds);
                (0, _CheckForConnectionDeletion__WEBPACK_IMPORTED_MODULE_3__.CheckForConnectionDeletionWithIds)(connectionIds, oldConnections);
                let compositions = [];
                for (let i2 = 0; i2 < conceptIds.length; i2++) {
                  let comp = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.GetCompositionWithIdFromMemory)(conceptIds[i2]);
                  compositions.push(comp);
                }
                return compositions;
              });
            }
            function GetCompositionFromConnectionsWithDataIdIndex() {
              return __awaiter(this, arguments, void 0, function* (conceptIds = [], connectionIds = []) {
                let newConnections = yield (0, _Api_GetConnectionBulk__WEBPACK_IMPORTED_MODULE_1__.GetConnectionBulk)(connectionIds);
                let myNewConnections = newConnections;
                let oldConnections = yield (0, _FindConnectionsOfCompositionBulkInMemory__WEBPACK_IMPORTED_MODULE_4__.FindConnectionsOfCompositionsBulkInMemory)(conceptIds);
                (0, _CheckForConnectionDeletion__WEBPACK_IMPORTED_MODULE_3__.CheckForConnectionDeletionWithIds)(connectionIds, oldConnections);
                let compositions = {};
                for (let i2 = 0; i2 < conceptIds.length; i2++) {
                  let comp = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.GetCompositionWithIdFromMemory)(conceptIds[i2]);
                  compositions[conceptIds[i2]] = comp;
                }
                return compositions;
              });
            }
            function GetCompositionFromConnectionsWithIndex() {
              return __awaiter(this, arguments, void 0, function* (conceptIds = [], connectionIds = []) {
                let newConnections = yield (0, _Api_GetConnectionBulk__WEBPACK_IMPORTED_MODULE_1__.GetConnectionBulk)(connectionIds);
                let myNewConnections = newConnections;
                let oldConnections = yield (0, _FindConnectionsOfCompositionBulkInMemory__WEBPACK_IMPORTED_MODULE_4__.FindConnectionsOfCompositionsBulkInMemory)(conceptIds);
                (0, _CheckForConnectionDeletion__WEBPACK_IMPORTED_MODULE_3__.CheckForConnectionDeletionWithIds)(connectionIds, oldConnections);
                let compositions = {};
                for (let i2 = 0; i2 < conceptIds.length; i2++) {
                  let comp = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.GetCompositionFromMemory)(conceptIds[i2]);
                  compositions[conceptIds[i2]] = comp;
                }
                return compositions;
              });
            }
            function GetConnectionDataPrefetch(connectionIds) {
              return __awaiter(this, void 0, void 0, function* () {
                let remainingConnections = [];
                let connectionsAll = [];
                let remainingIds = {};
                for (let i2 = 0; i2 < connectionIds.length; i2++) {
                  let connection = yield _app__WEBPACK_IMPORTED_MODULE_2__.ConnectionData.GetConnection(connectionIds[i2]);
                  if (connection.id == 0) {
                    remainingConnections.push(connectionIds[i2]);
                  } else {
                    connectionsAll.push(connection);
                  }
                }
                for (let i2 = 0; i2 < connectionIds.length; i2++) {
                  remainingIds[connectionIds[i2]] = false;
                }
                let prefetchConcepts = [];
                let connectionsAllLocal = yield (0, _Api_GetConnectionBulk__WEBPACK_IMPORTED_MODULE_1__.GetConnectionBulk)(remainingConnections);
                connectionsAll = [...connectionsAll, ...connectionsAllLocal];
                for (let j = 0; j < connectionsAll.length; j++) {
                  prefetchConcepts.push(connectionsAll[j].ofTheConceptId);
                  prefetchConcepts.push(connectionsAll[j].toTheConceptId);
                }
                yield (0, _app__WEBPACK_IMPORTED_MODULE_2__.GetConceptBulk)(prefetchConcepts);
                return connectionsAll;
              });
            }
            function GetCompositionFromConnectionsWithDataIdInObject() {
              return __awaiter(this, arguments, void 0, function* (conceptIds = [], connections = []) {
                yield (0, _Api_GetConnectionBulk__WEBPACK_IMPORTED_MODULE_1__.GetConnectionBulk)(connections);
                let compositions = {};
                for (let i2 = 0; i2 < conceptIds.length; i2++) {
                  let comp = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.GetCompositionWithIdFromMemory)(conceptIds[i2]);
                  compositions[conceptIds[i2]] = comp;
                }
                return compositions;
              });
            }
            function GetCompositionFromConnectionsWithDataIdInObjectNew() {
              return __awaiter(this, arguments, void 0, function* (conceptIds = [], connections = []) {
                yield (0, _Api_GetConnectionBulk__WEBPACK_IMPORTED_MODULE_1__.GetConnectionBulk)(connections);
                let compositions = {};
                for (let i2 = 0; i2 < conceptIds.length; i2++) {
                  let comp = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.GetCompositionWithIdFromMemoryNew)(conceptIds[i2]);
                  compositions[conceptIds[i2]] = comp;
                }
                return compositions;
              });
            }
            function GetCompositionFromConnectionsInObject() {
              return __awaiter(this, arguments, void 0, function* (conceptIds = [], connections = []) {
                yield (0, _Api_GetConnectionBulk__WEBPACK_IMPORTED_MODULE_1__.GetConnectionBulk)(connections);
                let compositions = {};
                for (let i2 = 0; i2 < conceptIds.length; i2++) {
                  let comp = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.GetCompositionFromMemory)(conceptIds[i2]);
                  console.log("this is the comp", comp);
                  compositions[conceptIds[i2]] = comp;
                }
                console.log("This is the composition list", compositions);
                return compositions;
              });
            }
            function GetCompositionFromConnectionsInObjectNormal() {
              return __awaiter(this, arguments, void 0, function* (conceptIds = [], connections = []) {
                yield (0, _Api_GetConnectionBulk__WEBPACK_IMPORTED_MODULE_1__.GetConnectionBulk)(connections);
                let compositions = {};
                for (let i2 = 0; i2 < conceptIds.length; i2++) {
                  let comp = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.GetCompositionFromMemoryNormal)(conceptIds[i2]);
                  compositions[conceptIds[i2]] = comp;
                }
                return compositions;
              });
            }
          }
        ),
        /***/
        "./src/Services/GetCompositionList.ts": (
          /*!********************************************!*\
            !*** ./src/Services/GetCompositionList.ts ***!
            \********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              FormatTheConcepts: () => (
                /* binding */
                FormatTheConcepts
              ),
              /* harmony export */
              GetCompositionList: () => (
                /* binding */
                GetCompositionList
              ),
              /* harmony export */
              GetCompositionListAll: () => (
                /* binding */
                GetCompositionListAll
              ),
              /* harmony export */
              GetCompositionListAllWithId: () => (
                /* binding */
                GetCompositionListAllWithId
              ),
              /* harmony export */
              GetCompositionListWithId: () => (
                /* binding */
                GetCompositionListWithId
              ),
              /* harmony export */
              GetCompositionListWithIdUpdated: () => (
                /* binding */
                GetCompositionListWithIdUpdated
              )
              /* harmony export */
            });
            var _Api_GetAllConceptsByType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetAllConceptsByType */
              "./src/Api/GetAllConceptsByType.ts"
            );
            var _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Api/GetAllConnectionsOfCompositionBulk */
              "./src/Api/GetAllConnectionsOfCompositionBulk.ts"
            );
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../DataStructures/Local/LocalConceptData */
              "./src/DataStructures/Local/LocalConceptData.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _GetComposition__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__2(
              /*! ./GetComposition */
              "./src/Services/GetComposition.ts"
            );
            var _GetConceptByCharacter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__2(
              /*! ./GetConceptByCharacter */
              "./src/Services/GetConceptByCharacter.ts"
            );
            var _Local_GetConceptByCharacterLocal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__2(
              /*! ./Local/GetConceptByCharacterLocal */
              "./src/Services/Local/GetConceptByCharacterLocal.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetCompositionList(compositionName_1, userId_1) {
              return __awaiter(this, arguments, void 0, function* (compositionName, userId, inpage = 10, page = 1) {
                let concept = yield (0, _GetConceptByCharacter__WEBPACK_IMPORTED_MODULE_6__["default"])(compositionName);
                let CompositionList = [];
                if (concept) {
                  yield (0, _Api_GetAllConceptsByType__WEBPACK_IMPORTED_MODULE_0__.GetAllConceptsByType)(compositionName, userId);
                  let conceptList = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConceptsByTypeIdAndUser(concept.id, userId);
                  let startPage = inpage * (page - 1);
                  let prefetchComposition = [];
                  for (let i2 = startPage; i2 < startPage + inpage; i2++) {
                    if (conceptList[i2]) {
                      prefetchComposition.push(conceptList[i2].id);
                    }
                  }
                  yield (0, _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_1__.GetAllConnectionsOfCompositionBulk)(prefetchComposition);
                  for (let i2 = startPage; i2 < startPage + inpage; i2++) {
                    if (conceptList[i2]) {
                      let compositionJson = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.GetCompositionFromMemory)(conceptList[i2].id);
                      CompositionList.push(compositionJson);
                    }
                  }
                }
                return CompositionList;
              });
            }
            function GetCompositionListAll(compositionName_1, userId_1) {
              return __awaiter(this, arguments, void 0, function* (compositionName, userId, inpage = 10, page = 1) {
                let LocalCompositionList = (0, _app__WEBPACK_IMPORTED_MODULE_4__.GetCompositionListLocal)(compositionName, userId);
                let CompositionList = GetCompositionList(compositionName, userId);
                let AllList = [];
                Promise.race([LocalCompositionList, CompositionList]).then((result) => {
                  console.log("Promise result", result);
                  AllList.push(...result);
                }).catch((error) => {
                  console.log("error in handling", error);
                });
                CompositionList.then((result) => {
                  console.log("This is the second promise result", result);
                  AllList.push(...result);
                });
                return AllList;
              });
            }
            function GetCompositionListAllWithId(compositionName_1, userId_1) {
              return __awaiter(this, arguments, void 0, function* (compositionName, userId, inpage = 10, page = 1) {
                let conceptLocal = yield (0, _Local_GetConceptByCharacterLocal__WEBPACK_IMPORTED_MODULE_7__["default"])(compositionName);
                let conceptOnline = yield (0, _GetConceptByCharacter__WEBPACK_IMPORTED_MODULE_6__["default"])(compositionName);
                let CompositionList = [];
                let conceptList = [];
                let conceptListLocal = [];
                let finalLocal = [];
                let conceptListOnline = [];
                if (conceptLocal.id != 0) {
                  conceptListLocal = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_3__.LocalConceptsData.GetConceptsByTypeIdAndUser(conceptLocal.id, userId);
                }
                if (conceptOnline.id != 0) {
                  yield (0, _Api_GetAllConceptsByType__WEBPACK_IMPORTED_MODULE_0__.GetAllConceptsByType)(compositionName, userId);
                  conceptListOnline = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConceptsByTypeIdAndUser(conceptOnline.id, userId);
                  conceptList = conceptListOnline;
                }
                for (let i2 = 0; i2 < conceptListLocal.length; i2++) {
                  let isDuplicate = false;
                  for (let j = 0; j < conceptListOnline.length; j++) {
                    if (conceptListLocal[i2].ghostId == conceptListOnline[j].ghostId) {
                      isDuplicate = true;
                    }
                  }
                  if (!isDuplicate) {
                    finalLocal.push(conceptListLocal[i2]);
                  }
                }
                console.log("This is the all list", finalLocal);
                let AllList = [];
                AllList = yield FormatTheConcepts(conceptList, finalLocal, inpage, page);
                return AllList;
              });
            }
            function GetCompositionListWithId(compositionName_1, userId_1) {
              return __awaiter(this, arguments, void 0, function* (compositionName, userId, inpage = 10, page = 1) {
                let concept = yield (0, _GetConceptByCharacter__WEBPACK_IMPORTED_MODULE_6__["default"])(compositionName);
                let CompositionList = [];
                if (concept) {
                  yield (0, _Api_GetAllConceptsByType__WEBPACK_IMPORTED_MODULE_0__.GetAllConceptsByType)(compositionName, userId);
                  let conceptList = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConceptsByTypeIdAndUser(concept.id, userId);
                  let startPage = inpage * (page - 1);
                  let prefetchComposition = [];
                  for (let i2 = startPage; i2 < startPage + inpage; i2++) {
                    if (conceptList[i2]) {
                      prefetchComposition.push(conceptList[i2].id);
                    }
                  }
                  yield (0, _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_1__.GetAllConnectionsOfCompositionBulk)(prefetchComposition);
                  for (let i2 = startPage; i2 < startPage + inpage; i2++) {
                    if (conceptList[i2]) {
                      let compositionJson = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.GetCompositionWithIdFromMemory)(conceptList[i2].id);
                      CompositionList.push(compositionJson);
                    }
                  }
                }
                return CompositionList;
              });
            }
            function GetCompositionListWithIdUpdated(compositionName_1, userId_1) {
              return __awaiter(this, arguments, void 0, function* (compositionName, userId, inpage = 10, page = 1) {
                let concept = yield (0, _GetConceptByCharacter__WEBPACK_IMPORTED_MODULE_6__.GetConceptByCharacterUpdated)(compositionName);
                let CompositionList = [];
                if (concept) {
                  yield (0, _Api_GetAllConceptsByType__WEBPACK_IMPORTED_MODULE_0__.GetAllConceptsByType)(compositionName, userId);
                  let conceptList = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConceptsByTypeIdAndUser(concept.id, userId);
                  let startPage = inpage * (page - 1);
                  let prefetchComposition = [];
                  for (let i2 = startPage; i2 < startPage + inpage; i2++) {
                    if (conceptList[i2]) {
                      prefetchComposition.push(conceptList[i2].id);
                    }
                  }
                  yield (0, _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_1__.GetAllConnectionsOfCompositionBulk)(prefetchComposition);
                  for (let i2 = startPage; i2 < startPage + inpage; i2++) {
                    if (conceptList[i2]) {
                      let compositionJson = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.GetCompositionWithIdFromMemory)(conceptList[i2].id);
                      CompositionList.push(compositionJson);
                    }
                  }
                }
                return CompositionList;
              });
            }
            function FormatTheConcepts(conceptList_1, localConceptList_1) {
              return __awaiter(this, arguments, void 0, function* (conceptList, localConceptList, inpage = 10, page = 1) {
                let CompositionList = [];
                let startPage = inpage * (page - 1);
                let prefetchComposition = [];
                let localConceptLength = localConceptList.length;
                for (let i2 = startPage; i2 < startPage + inpage - localConceptLength; i2++) {
                  if (conceptList[i2]) {
                    prefetchComposition.push(conceptList[i2].id);
                  }
                }
                for (let i2 = 0; i2 < localConceptList.length; i2++) {
                  let compositionJson = yield (0, _app__WEBPACK_IMPORTED_MODULE_4__.GetCompositionLocalWithId)(localConceptList[i2].id);
                  CompositionList.push(compositionJson);
                }
                yield (0, _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_1__.GetAllConnectionsOfCompositionBulk)(prefetchComposition);
                for (let i2 = startPage; i2 < startPage + inpage - localConceptLength; i2++) {
                  if (conceptList[i2]) {
                    let compositionJson = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_5__.GetCompositionWithIdFromMemory)(conceptList[i2].id);
                    CompositionList.push(compositionJson);
                  }
                }
                return CompositionList;
              });
            }
          }
        ),
        /***/
        "./src/Services/GetConceptByCharacter.ts": (
          /*!***********************************************!*\
            !*** ./src/Services/GetConceptByCharacter.ts ***!
            \***********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConceptByCharacterUpdated: () => (
                /* binding */
                GetConceptByCharacterUpdated
              ),
              /* harmony export */
              "default": () => (
                /* binding */
                GetConceptByCharacter
              )
              /* harmony export */
            });
            var _Api_GetConceptByCharacterValue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetConceptByCharacterValue */
              "./src/Api/GetConceptByCharacterValue.ts"
            );
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConceptByCharacter(characterValue) {
              return __awaiter(this, void 0, void 0, function* () {
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_1__.ConceptsData.GetConceptByCharacter(characterValue);
                let literalCharacter = `${characterValue}`;
                if ((concept == null || (concept === null || concept === void 0 ? void 0 : concept.id) == 0) && literalCharacter) {
                  yield (0, _Api_GetConceptByCharacterValue__WEBPACK_IMPORTED_MODULE_0__.GetConceptByCharacterValue)(characterValue);
                  concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_1__.ConceptsData.GetConceptByCharacterAndTypeLocal(characterValue, 51);
                  if (concept.id == 0) {
                    concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_1__.ConceptsData.GetConceptByCharacter(characterValue);
                  }
                }
                return concept;
              });
            }
            function GetConceptByCharacterUpdated(characterValue) {
              return __awaiter(this, void 0, void 0, function* () {
                let concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_1__.ConceptsData.GetConceptByCharacter(characterValue);
                let literalCharacter = `${characterValue}`;
                if ((concept == null || (concept === null || concept === void 0 ? void 0 : concept.id) == 0) && literalCharacter) {
                  yield (0, _Api_GetConceptByCharacterValue__WEBPACK_IMPORTED_MODULE_0__.GetConceptByCharacterValue)(characterValue);
                  concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_1__.ConceptsData.GetConceptByCharacter(characterValue);
                }
                return concept;
              });
            }
          }
        ),
        /***/
        "./src/Services/GetConnectionBetweenTwoConceptsLinker.ts": (
          /*!***************************************************************!*\
            !*** ./src/Services/GetConnectionBetweenTwoConceptsLinker.ts ***!
            \***************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConnectionBetweenTwoConceptsLinker: () => (
                /* binding */
                GetConnectionBetweenTwoConceptsLinker
              )
              /* harmony export */
            });
            var _Api_GetCompositionConnectionsBetweenTwoConcepts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetCompositionConnectionsBetweenTwoConcepts */
              "./src/Api/GetCompositionConnectionsBetweenTwoConcepts.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./MakeTheInstanceConcept */
              "./src/Services/MakeTheInstanceConcept.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConnectionBetweenTwoConceptsLinker(ofTheConcept_1, toTheConcept_1, linker_1, fullLinker_1) {
              return __awaiter(this, arguments, void 0, function* (ofTheConcept, toTheConcept, linker, fullLinker, forward = true) {
                var _a, _b;
                let typeConcept = (0, _app__WEBPACK_IMPORTED_MODULE_1__.CreateDefaultConcept)();
                if (linker != "") {
                  let typeLinker = "";
                  if (forward) {
                    let prefix = ((_a = ofTheConcept.type) === null || _a === void 0 ? void 0 : _a.characterValue) + "_s";
                    let linkerAdd = linker + "_s";
                    let forwardLinker = prefix + "_" + linkerAdd;
                    typeLinker = forwardLinker;
                  } else {
                    let prefix1 = ((_b = toTheConcept.type) === null || _b === void 0 ? void 0 : _b.characterValue) + "_s";
                    let linkerAdd1 = linker + "_by";
                    let backwardLinker = prefix1 + "_" + linkerAdd1;
                    typeLinker = backwardLinker;
                  }
                  typeConcept = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_2__["default"])("connection", typeLinker, false, 999);
                }
                if (fullLinker != "") {
                  typeConcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_1__.MakeTheTypeConceptApi)(fullLinker, 999);
                }
                let connections = yield (0, _Api_GetCompositionConnectionsBetweenTwoConcepts__WEBPACK_IMPORTED_MODULE_0__.GetCompositionConnectionsBetweenTwoConcepts)(ofTheConcept.id, toTheConcept.id, typeConcept.id);
                return connections;
              });
            }
          }
        ),
        /***/
        "./src/Services/GetConnections.ts": (
          /*!****************************************!*\
            !*** ./src/Services/GetConnections.ts ***!
            \****************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConnectionById: () => (
                /* binding */
                GetConnectionById
              )
              /* harmony export */
            });
            var _Api_GetConnection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetConnection */
              "./src/Api/GetConnection.ts"
            );
            var _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/ConnectionData */
              "./src/DataStructures/ConnectionData.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConnectionById(id) {
              return __awaiter(this, void 0, void 0, function* () {
                let connection = yield _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_1__.ConnectionData.GetConnection(id);
                if ((connection == null || connection.id == 0) && id != null && id != void 0) {
                  let connectionString = yield (0, _Api_GetConnection__WEBPACK_IMPORTED_MODULE_0__.GetConnection)(id);
                  connection = connectionString;
                }
                return connection;
              });
            }
          }
        ),
        /***/
        "./src/Services/GetDataFromIndexDb.ts": (
          /*!********************************************!*\
            !*** ./src/Services/GetDataFromIndexDb.ts ***!
            \********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConnectionsFromIndexDb: () => (
                /* binding */
                GetConnectionsFromIndexDb
              ),
              /* harmony export */
              GetConnectionsFromIndexDbLocal: () => (
                /* binding */
                GetConnectionsFromIndexDbLocal
              )
              /* harmony export */
            });
            var _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../DataStructures/ConnectionData */
              "./src/DataStructures/ConnectionData.ts"
            );
            var _DataStructures_Local_LocalConnectionData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/Local/LocalConnectionData */
              "./src/DataStructures/Local/LocalConnectionData.ts"
            );
            var _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Database/indexdblocal */
              "./src/Database/indexdblocal.ts"
            );
            var _Database_indexeddb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Database/indexeddb */
              "./src/Database/indexeddb.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConnectionsFromIndexDb() {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let connectionList = yield (0, _Database_indexeddb__WEBPACK_IMPORTED_MODULE_3__.getObjectsFromIndexDb)("connection");
                  if (Array.isArray(connectionList)) {
                    for (let i2 = 0; i2 < connectionList.length; i2++) {
                      _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_0__.ConnectionData.AddConnectionToMemory(connectionList[i2]);
                    }
                  }
                } catch (error) {
                  let errorObject = {
                    "message": "Cannot create Connection Binary Tree Concept",
                    "ok": false,
                    "status": 400,
                    "data": error
                  };
                  throw errorObject;
                }
              });
            }
            function GetConnectionsFromIndexDbLocal() {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let connectionList = yield (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_2__.getObjectsFromLocalIndexDb)("localconnection");
                  if (Array.isArray(connectionList)) {
                    for (let i2 = 0; i2 < connectionList.length; i2++) {
                      _DataStructures_Local_LocalConnectionData__WEBPACK_IMPORTED_MODULE_1__.LocalConnectionData.AddConnectionToMemory(connectionList[i2]);
                    }
                  }
                } catch (error) {
                  let errorObject = {
                    "message": "Cannot create Local Connection Binary Tree Concept",
                    "ok": false,
                    "status": 400,
                    "data": error
                  };
                  throw errorObject;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/GetLink.ts": (
          /*!*********************************!*\
            !*** ./src/Services/GetLink.ts ***!
            \*********************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetLink: () => (
                /* binding */
                GetLink
              ),
              /* harmony export */
              GetLinkRaw: () => (
                /* binding */
                GetLinkRaw
              )
              /* harmony export */
            });
            var _Api_GetConceptByCharacterAndType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetConceptByCharacterAndType */
              "./src/Api/GetConceptByCharacterAndType.ts"
            );
            var _Api_GetConnectionOfTheConcept__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Api/GetConnectionOfTheConcept */
              "./src/Api/GetConnectionOfTheConcept.ts"
            );
            var _GetComposition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./GetComposition */
              "./src/Services/GetComposition.ts"
            );
            var _GetTheConcept__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./GetTheConcept */
              "./src/Services/GetTheConcept.ts"
            );
            var _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../Api/GetAllConnectionsOfCompositionBulk */
              "./src/Api/GetAllConnectionsOfCompositionBulk.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetLink(id_1, linker_1) {
              return __awaiter(this, arguments, void 0, function* (id, linker, inpage = 10, page = 1) {
                var _a;
                let output = [];
                let concept = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_3__["default"])(id);
                let linkString = ((_a = concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) + "_s_" + linker;
                let relatedConceptString = yield (0, _Api_GetConceptByCharacterAndType__WEBPACK_IMPORTED_MODULE_0__.GetConceptByCharacterAndType)(linkString, 16);
                let relatedConcept = relatedConceptString;
                if (relatedConcept.id > 0) {
                  let connectionsString = yield (0, _Api_GetConnectionOfTheConcept__WEBPACK_IMPORTED_MODULE_1__.GetConnectionOfTheConcept)(relatedConcept.id, concept.id, concept.userId, inpage, page);
                  let connections = connectionsString;
                  let prefetch = [];
                  for (let i2 = 0; i2 < connections.length; i2++) {
                    prefetch.push(connections[i2].toTheConceptId);
                  }
                  yield (0, _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_4__.GetAllConnectionsOfCompositionBulk)(prefetch);
                  for (let i2 = 0; i2 < connections.length; i2++) {
                    let toConceptId = connections[i2].toTheConceptId;
                    let toConcept = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_3__["default"])(toConceptId);
                    let newComposition = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_2__.GetCompositionWithIdAndDateFromMemory)(toConcept.id);
                    output.push(newComposition);
                  }
                }
                return output;
              });
            }
            function GetLinkRaw(id_1, linker_1) {
              return __awaiter(this, arguments, void 0, function* (id, linker, inpage = 10, page = 1) {
                var _a;
                let output = [];
                let concept = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_3__["default"])(id);
                let linkString = ((_a = concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) + "_s_" + linker;
                let relatedConceptString = yield (0, _Api_GetConceptByCharacterAndType__WEBPACK_IMPORTED_MODULE_0__.GetConceptByCharacterAndType)(linkString, 16);
                let relatedConcept = relatedConceptString;
                if (relatedConcept.id > 0) {
                  let connectionsString = yield (0, _Api_GetConnectionOfTheConcept__WEBPACK_IMPORTED_MODULE_1__.GetConnectionOfTheConcept)(relatedConcept.id, concept.id, concept.userId, inpage, page);
                  let connections = connectionsString;
                  let prefetch = [];
                  for (let i2 = 0; i2 < connections.length; i2++) {
                    prefetch.push(connections[i2].toTheConceptId);
                  }
                  for (let i2 = 0; i2 < connections.length; i2++) {
                    let toConceptId = connections[i2].toTheConceptId;
                    let toConcept = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_3__["default"])(toConceptId);
                    output.push(toConcept);
                  }
                }
                return output;
              });
            }
          }
        ),
        /***/
        "./src/Services/GetLinkerConnectionFromConcept.ts": (
          /*!********************************************************!*\
            !*** ./src/Services/GetLinkerConnectionFromConcept.ts ***!
            \********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetLinkerConnectionFromConcepts: () => (
                /* binding */
                GetLinkerConnectionFromConcepts
              ),
              /* harmony export */
              GetLinkerConnectionToConcepts: () => (
                /* binding */
                GetLinkerConnectionToConcepts
              )
              /* harmony export */
            });
            var _Api_GetAllLinkerConnectionsFromTheConcept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetAllLinkerConnectionsFromTheConcept */
              "./src/Api/GetAllLinkerConnectionsFromTheConcept.ts"
            );
            var _Api_GetAllLinkerConnectionsToTheConcept__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Api/GetAllLinkerConnectionsToTheConcept */
              "./src/Api/GetAllLinkerConnectionsToTheConcept.ts"
            );
            var _GetTheConcept__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./GetTheConcept */
              "./src/Services/GetTheConcept.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetLinkerConnectionFromConcepts(id) {
              return __awaiter(this, void 0, void 0, function* () {
                let connections = yield (0, _Api_GetAllLinkerConnectionsFromTheConcept__WEBPACK_IMPORTED_MODULE_0__.GetAllLinkerConnectionsFromTheConcept)(id);
                for (let i2 = 0; i2 < connections.length; i2++) {
                  let localConnection = connections[i2];
                  let connectionIdentifier = localConnection.typeId;
                  let concept = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(connectionIdentifier);
                  localConnection.type = concept;
                }
                return connections;
              });
            }
            function GetLinkerConnectionToConcepts(id) {
              return __awaiter(this, void 0, void 0, function* () {
                let connections = yield (0, _Api_GetAllLinkerConnectionsToTheConcept__WEBPACK_IMPORTED_MODULE_1__.GetAllLinkerConnectionsToTheConcept)(id);
                for (let i2 = 0; i2 < connections.length; i2++) {
                  let localConnection = connections[i2];
                  let connectionIdentifier = localConnection.typeId;
                  let concept = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(connectionIdentifier);
                  localConnection.type = concept;
                }
                return connections;
              });
            }
          }
        ),
        /***/
        "./src/Services/GetRelation.ts": (
          /*!*************************************!*\
            !*** ./src/Services/GetRelation.ts ***!
            \*************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetRelation: () => (
                /* binding */
                GetRelation
              ),
              /* harmony export */
              GetRelationRaw: () => (
                /* binding */
                GetRelationRaw
              )
              /* harmony export */
            });
            var _Api_GetConnectionOfTheConcept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetConnectionOfTheConcept */
              "./src/Api/GetConnectionOfTheConcept.ts"
            );
            var _GetComposition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./GetComposition */
              "./src/Services/GetComposition.ts"
            );
            var _GetTheConcept__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./GetTheConcept */
              "./src/Services/GetTheConcept.ts"
            );
            var _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Api/GetAllConnectionsOfCompositionBulk */
              "./src/Api/GetAllConnectionsOfCompositionBulk.ts"
            );
            var _ConceptFinding_GetConceptByCharacterAndCategory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ./ConceptFinding/GetConceptByCharacterAndCategory */
              "./src/Services/ConceptFinding/GetConceptByCharacterAndCategory.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetRelation(id_1, relation_1) {
              return __awaiter(this, arguments, void 0, function* (id, relation, inpage = 10, page = 1) {
                let output = [];
                let concept = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(id);
                let relatedConceptString = yield (0, _ConceptFinding_GetConceptByCharacterAndCategory__WEBPACK_IMPORTED_MODULE_4__.GetConceptByCharacterAndCategory)(relation);
                let relatedConcept = relatedConceptString;
                if (relatedConcept.id > 0) {
                  let connectionsString = yield (0, _Api_GetConnectionOfTheConcept__WEBPACK_IMPORTED_MODULE_0__.GetConnectionOfTheConcept)(relatedConcept.id, concept.id, concept.userId, inpage, page);
                  let connections = connectionsString;
                  let prefetch = [];
                  for (let i2 = 0; i2 < connections.length; i2++) {
                    prefetch.push(connections[i2].toTheConceptId);
                  }
                  yield (0, _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_3__.GetAllConnectionsOfCompositionBulk)(prefetch);
                  for (let i2 = 0; i2 < connections.length; i2++) {
                    let toConceptId = connections[i2].toTheConceptId;
                    let toConcept = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(toConceptId);
                    let newComposition = yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_1__.GetCompositionWithIdAndDateFromMemory)(toConcept.id);
                    output.push(newComposition);
                  }
                }
                return output;
              });
            }
            function GetRelationRaw(id_1, relation_1) {
              return __awaiter(this, arguments, void 0, function* (id, relation, inpage = 10, page = 1) {
                let output = [];
                let concept = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(id);
                let relatedConceptString = yield (0, _ConceptFinding_GetConceptByCharacterAndCategory__WEBPACK_IMPORTED_MODULE_4__.GetConceptByCharacterAndCategory)(relation);
                let relatedConcept = relatedConceptString;
                if (relatedConcept.id > 0) {
                  let connectionsString = yield (0, _Api_GetConnectionOfTheConcept__WEBPACK_IMPORTED_MODULE_0__.GetConnectionOfTheConcept)(relatedConcept.id, concept.id, concept.userId, inpage, page);
                  let connections = connectionsString;
                  let prefetch = [];
                  for (let i2 = 0; i2 < connections.length; i2++) {
                    prefetch.push(connections[i2].toTheConceptId);
                  }
                  for (let i2 = 0; i2 < connections.length; i2++) {
                    let toConceptId = connections[i2].toTheConceptId;
                    let toConcept = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(toConceptId);
                    output.push(toConcept);
                  }
                }
                return output;
              });
            }
          }
        ),
        /***/
        "./src/Services/GetTheConcept.ts": (
          /*!***************************************!*\
            !*** ./src/Services/GetTheConcept.ts ***!
            \***************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                GetTheConcept
              )
              /* harmony export */
            });
            var _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetConcept */
              "./src/Api/GetConcept.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetTheConcept(id_1) {
              return __awaiter(this, arguments, void 0, function* (id, userId = 999) {
                try {
                  let concept = (0, _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_3__.CreateDefaultConcept)();
                  if (id < 0) {
                    let lconcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_1__.GetUserGhostId)(userId, id);
                    concept = (0, _app__WEBPACK_IMPORTED_MODULE_1__.convertFromLConceptToConcept)(lconcept);
                    return concept;
                  }
                  concept = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(id);
                  if ((concept == null || concept.id == 0) && id != null && id != void 0) {
                    let conceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(id);
                    concept = conceptString;
                  }
                  if (concept.id != 0) {
                    if (concept.type == null) {
                      let conceptType = yield _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_2__.ConceptsData.GetConcept(concept.typeId);
                      if (conceptType == null && concept.typeId != null && concept.typeId != void 0) {
                        let typeConceptString = yield (0, _Api_GetConcept__WEBPACK_IMPORTED_MODULE_0__.GetConcept)(concept.typeId);
                        let typeConcept = typeConceptString;
                        concept.type = typeConcept;
                      }
                    }
                  }
                  return concept;
                } catch (err) {
                  console.error("this is the error in the getting concept", err);
                  throw err;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/InitializeSystem.ts": (
          /*!******************************************!*\
            !*** ./src/Services/InitializeSystem.ts ***!
            \******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              PurgatoryDatabaseUpdated: () => (
                /* binding */
                PurgatoryDatabaseUpdated
              ),
              /* harmony export */
              "default": () => (
                /* binding */
                InitializeSystem
              )
              /* harmony export */
            });
            var _Api_GetAiData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetAiData */
              "./src/Api/GetAiData.ts"
            );
            var _DataStructures_SettingData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/SettingData */
              "./src/DataStructures/SettingData.ts"
            );
            var _DataStructures_Settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../DataStructures/Settings */
              "./src/DataStructures/Settings.ts"
            );
            var _Database_indexeddb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Database/indexeddb */
              "./src/Database/indexeddb.ts"
            );
            var _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../Database/indexdblocal */
              "./src/Database/indexdblocal.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function InitializeSystem() {
              return __awaiter(this, arguments, void 0, function* (enableAi = true) {
                try {
                  yield (0, _Database_indexeddb__WEBPACK_IMPORTED_MODULE_3__.openDatabase)("concepts");
                  yield (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_4__.openDatabase)("concepts");
                  if (enableAi) {
                    var statsData = yield (0, _Database_indexeddb__WEBPACK_IMPORTED_MODULE_3__.GetLastSettingsFromDatabase)();
                    var settings = statsData;
                    if (settings.isOnlineSync) {
                      return true;
                    }
                    yield (0, _Api_GetAiData__WEBPACK_IMPORTED_MODULE_0__.GetAiData)();
                  }
                  return true;
                } catch (error) {
                  let errorObject = {
                    "message": "cannot initlize the AI system",
                    "ok": false,
                    "status": 400,
                    "data": error
                  };
                  console.log(errorObject);
                  return true;
                }
              });
            }
            function PurgatoryDatabaseUpdated() {
              return __awaiter(this, void 0, void 0, function* () {
                _DataStructures_Settings__WEBPACK_IMPORTED_MODULE_2__.Settings.isOnlineSync = true;
                var settingData = new _DataStructures_SettingData__WEBPACK_IMPORTED_MODULE_1__.SettingData(_DataStructures_Settings__WEBPACK_IMPORTED_MODULE_2__.Settings.isOnlineSync);
                (0, _Database_indexeddb__WEBPACK_IMPORTED_MODULE_3__.AiUpdateFlag)(settingData);
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/ConvertFromLConnectionToConnection.ts": (
          /*!******************************************************************!*\
            !*** ./src/Services/Local/ConvertFromLConnectionToConnection.ts ***!
            \******************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              ConvertFromLConnectionToConnection: () => (
                /* binding */
                ConvertFromLConnectionToConnection
              )
              /* harmony export */
            });
            var _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Connection */
              "./src/DataStructures/Connection.ts"
            );
            function ConvertFromLConnectionToConnection(lconnection) {
              let connection = new _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__.Connection(0, 0, 0, 0, 0, 0, 0);
              connection.ofTheConceptId = lconnection.ofTheConceptId;
              connection.toTheConceptId = lconnection.toTheConceptId;
              connection.typeId = lconnection.typeId;
              connection.orderId = lconnection.orderId;
              connection.id = lconnection.id;
              return connection;
            }
          }
        ),
        /***/
        "./src/Services/Local/CreateConnectionBetweenTwoConceptsLocal.ts": (
          /*!***********************************************************************!*\
            !*** ./src/Services/Local/CreateConnectionBetweenTwoConceptsLocal.ts ***!
            \***********************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateConnectionBetweenTwoConceptsLocal: () => (
                /* binding */
                CreateConnectionBetweenTwoConceptsLocal
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateConnectionBetweenTwoConceptsLocal(ofTheConcept_1, toTheConcept_1, linker_1) {
              return __awaiter(this, arguments, void 0, function* (ofTheConcept, toTheConcept, linker, both = false) {
                var _a, _b;
                try {
                  var userId = ofTheConcept.userId;
                  if (both) {
                    let prefix1 = ((_a = toTheConcept.type) === null || _a === void 0 ? void 0 : _a.characterValue) + "_s";
                    let linkerAdd1 = linker + "_by";
                    let backwardLinker = prefix1 + "_" + linkerAdd1;
                    var connectionConceptReverse = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.MakeTheInstanceConceptLocal)("connection", backwardLinker, false, 999, 999, 999);
                    let pewCon = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.CreateTheConnectionLocal)(toTheConcept.id, ofTheConcept.id, connectionConceptReverse.id, 1e3);
                  }
                  let prefix = ((_b = ofTheConcept.type) === null || _b === void 0 ? void 0 : _b.characterValue) + "_s";
                  let linkerAdd = linker + "_s";
                  let forwardLinker = prefix + "_" + linkerAdd;
                  var connectionConcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.MakeTheInstanceConceptLocal)("connection", forwardLinker, false, 999, 999, 999);
                  let newConnection = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.CreateTheConnectionLocal)(ofTheConcept.id, toTheConcept.id, connectionConcept.id, 1e3);
                  return newConnection;
                } catch (ex) {
                  throw ex;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/CreateDefaultLConcept.ts": (
          /*!*****************************************************!*\
            !*** ./src/Services/Local/CreateDefaultLConcept.ts ***!
            \*****************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateDefaultLConcept: () => (
                /* binding */
                CreateDefaultLConcept
              )
              /* harmony export */
            });
            var _DataStructures_Concept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Concept */
              "./src/DataStructures/Concept.ts"
            );
            function CreateDefaultLConcept() {
              let created_on = /* @__PURE__ */ new Date();
              let updated_on = /* @__PURE__ */ new Date();
              let concept = new _DataStructures_Concept__WEBPACK_IMPORTED_MODULE_0__.Concept(0, 0, 0, 0, 0, "0", 0, false, created_on, updated_on, "0");
              return concept;
            }
          }
        ),
        /***/
        "./src/Services/Local/CreateLocalBinaryTreeFromData.ts": (
          /*!*************************************************************!*\
            !*** ./src/Services/Local/CreateLocalBinaryTreeFromData.ts ***!
            \*************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              PopulateTheLocalConceptsToMemory: () => (
                /* binding */
                PopulateTheLocalConceptsToMemory
              ),
              /* harmony export */
              PopulateTheLocalConnectionToMemory: () => (
                /* binding */
                PopulateTheLocalConnectionToMemory
              ),
              /* harmony export */
              "default": () => (
                /* binding */
                CreateLocalBinaryTreeFromIndexDb
              )
              /* harmony export */
            });
            var _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalConceptData */
              "./src/DataStructures/Local/LocalConceptData.ts"
            );
            var _DataStructures_Local_LocalId__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalId */
              "./src/DataStructures/Local/LocalId.ts"
            );
            var _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../../Database/indexdblocal */
              "./src/Database/indexdblocal.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateLocalBinaryTreeFromIndexDb() {
              return __awaiter(this, void 0, void 0, function* () {
                console.log("this is trying to create local binary tree");
                try {
                  let conceptList = yield (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_3__.getObjectsFromLocalIndexDb)("localconcept");
                  if (Array.isArray(conceptList)) {
                    for (let i2 = 0; i2 < conceptList.length; i2++) {
                      let concept = conceptList[i2];
                      _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_1__.LocalConceptsData.AddConceptToMemory(concept);
                    }
                  }
                  _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__.IdentifierFlags.isLocalDataLoaded = true;
                  _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__.IdentifierFlags.isLocalTypeLoaded = true;
                  _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_0__.IdentifierFlags.isLocalCharacterLoaded = true;
                } catch (error) {
                  yield (0, _app__WEBPACK_IMPORTED_MODULE_4__.DelayFunctionExecution)(2e3, CreateLocalBinaryTreeFromIndexDb());
                  let errorObject = {
                    "message": "Cannot create local binary tree from index db",
                    "data": error,
                    "ok": false,
                    "status": 400
                  };
                  throw errorObject;
                }
              });
            }
            function PopulateTheLocalConceptsToMemory() {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  yield navigator.locks.request("dblock", (lock) => __awaiter(this, void 0, void 0, function* () {
                    let idList = yield (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_3__.getObjectsFromLocalIndexDb)("localid");
                    if (Array.isArray(idList)) {
                      if (idList[0]) {
                        let localConceptIdValue = idList[0].value;
                        if (localConceptIdValue) {
                          _DataStructures_Local_LocalId__WEBPACK_IMPORTED_MODULE_2__.LocalId.AddConceptId(idList[0]);
                          yield (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_3__.UpdateToDatabase)("localid", { "id": 0, "value": localConceptIdValue - 10 });
                        } else {
                          localConceptIdValue = -Math.floor(Math.random() * 1e8);
                          let object = { "id": 0, "value": localConceptIdValue };
                          let newObject = { "id": 0, "value": localConceptIdValue - 10 };
                          _DataStructures_Local_LocalId__WEBPACK_IMPORTED_MODULE_2__.LocalId.AddConceptId(object);
                          yield (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_3__.UpdateToDatabase)("localid", newObject);
                        }
                      }
                      if (idList[2]) {
                        _app__WEBPACK_IMPORTED_MODULE_4__.BaseUrl.BASE_RANDOMIZER = idList[2].value;
                      }
                    }
                  }));
                } catch (error) {
                  let errorObject = {
                    "message": "Cannot populate Local Ids from the Index Db",
                    "data": error,
                    "ok": false,
                    "status": 400
                  };
                  throw errorObject;
                }
              });
            }
            function PopulateTheLocalConnectionToMemory() {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  yield navigator.locks.request("dblock", (lock) => __awaiter(this, void 0, void 0, function* () {
                    let idList = yield (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_3__.getObjectsFromLocalIndexDb)("localid");
                    if (Array.isArray(idList)) {
                      if (idList[1]) {
                        let localConnectionId = idList[1].value;
                        if (localConnectionId) {
                          _DataStructures_Local_LocalId__WEBPACK_IMPORTED_MODULE_2__.LocalId.AddConnectionId(idList[1]);
                          yield (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_3__.UpdateToDatabase)("localid", { "id": 1, "value": localConnectionId - 10 });
                        } else {
                          localConnectionId = -Math.floor(Math.random() * 1e8);
                          let object = { "id": 0, "value": localConnectionId };
                          let newObject = { "id": 0, "value": localConnectionId - 10 };
                          _DataStructures_Local_LocalId__WEBPACK_IMPORTED_MODULE_2__.LocalId.AddConnectionId(object);
                          yield (0, _Database_indexdblocal__WEBPACK_IMPORTED_MODULE_3__.UpdateToDatabase)("localid", newObject);
                        }
                      }
                      if (idList[2]) {
                        _app__WEBPACK_IMPORTED_MODULE_4__.BaseUrl.BASE_RANDOMIZER = idList[2].value;
                      }
                    }
                  }));
                } catch (error) {
                  let errorObject = {
                    "message": "Cannot populate Local Ids from the Index Db",
                    "data": error,
                    "ok": false,
                    "status": 400
                  };
                  throw errorObject;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/CreateTheCompositionLocal.ts": (
          /*!*********************************************************!*\
            !*** ./src/Services/Local/CreateTheCompositionLocal.ts ***!
            \*********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateTheCompositionLocal: () => (
                /* binding */
                CreateTheCompositionLocal
              )
              /* harmony export */
            });
            var _Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Local/CreateDefaultLConcept */
              "./src/Services/Local/CreateDefaultLConcept.ts"
            );
            var _CreateTheConnectionLocal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./CreateTheConnectionLocal */
              "./src/Services/Local/CreateTheConnectionLocal.ts"
            );
            var _MakeTheInstanceConceptLocal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./MakeTheInstanceConceptLocal */
              "./src/Services/Local/MakeTheInstanceConceptLocal.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateTheCompositionLocal(json_1) {
              return __awaiter(this, arguments, void 0, function* (json, ofTheConceptId = null, ofTheConceptUserId = null, mainKey = null, userId = null, accessId = null, sessionInformationId = null, automaticSync = false) {
                let localUserId = userId !== null && userId !== void 0 ? userId : 999;
                let localAccessId = accessId !== null && accessId !== void 0 ? accessId : 999;
                let localSessionId = sessionInformationId !== null && sessionInformationId !== void 0 ? sessionInformationId : 999;
                let MainKeyLocal = mainKey !== null && mainKey !== void 0 ? mainKey : 0;
                let MainConcept = (0, _Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_0__.CreateDefaultLConcept)();
                for (const key in json) {
                  if (typeof json[key] != "string" && typeof json[key] != "number") {
                    if (ofTheConceptId == null && ofTheConceptUserId == null) {
                      let localMainKey = MainKeyLocal;
                      let conceptString = yield (0, _MakeTheInstanceConceptLocal__WEBPACK_IMPORTED_MODULE_2__.MakeTheInstanceConceptLocal)(key, "", true, localUserId, localAccessId, localSessionId);
                      let concept = conceptString;
                      MainConcept = concept;
                      localMainKey = concept.id;
                      MainKeyLocal = concept.id;
                      yield CreateTheCompositionLocal(json[key], concept.id, concept.userId, localMainKey, userId, accessId, sessionInformationId);
                    } else {
                      let ofThe = ofTheConceptId !== null && ofTheConceptId !== void 0 ? ofTheConceptId : 999;
                      let ofTheUser = ofTheConceptUserId !== null && ofTheConceptUserId !== void 0 ? ofTheConceptUserId : 999;
                      let localMainKey = MainKeyLocal;
                      let conceptString = yield (0, _MakeTheInstanceConceptLocal__WEBPACK_IMPORTED_MODULE_2__.MakeTheInstanceConceptLocal)(key, "", true, localUserId, localAccessId, localSessionId);
                      let concept = conceptString;
                      yield (0, _CreateTheConnectionLocal__WEBPACK_IMPORTED_MODULE_1__.CreateTheConnectionLocal)(ofThe, concept.id, localMainKey);
                      yield CreateTheCompositionLocal(json[key], concept.id, concept.userId, localMainKey, userId, accessId, sessionInformationId);
                    }
                  } else {
                    let ofThe = ofTheConceptId !== null && ofTheConceptId !== void 0 ? ofTheConceptId : 999;
                    let ofTheUser = ofTheConceptUserId !== null && ofTheConceptUserId !== void 0 ? ofTheConceptUserId : 999;
                    let localMainKey = MainKeyLocal;
                    let conceptString = yield (0, _MakeTheInstanceConceptLocal__WEBPACK_IMPORTED_MODULE_2__.MakeTheInstanceConceptLocal)(key, json[key].toString(), false, localUserId, localAccessId, localSessionId);
                    let concept = conceptString;
                    yield (0, _CreateTheConnectionLocal__WEBPACK_IMPORTED_MODULE_1__.CreateTheConnectionLocal)(ofThe, concept.id, localMainKey);
                  }
                }
                return MainConcept;
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/CreateTheConceptLocal.ts": (
          /*!*****************************************************!*\
            !*** ./src/Services/Local/CreateTheConceptLocal.ts ***!
            \*****************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                CreateTheConceptLocal
              )
              /* harmony export */
            });
            var _DataStructures_Concept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Concept */
              "./src/DataStructures/Concept.ts"
            );
            var _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalConceptData */
              "./src/DataStructures/Local/LocalConceptData.ts"
            );
            var _DataStructures_Local_LocalId__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalId */
              "./src/DataStructures/Local/LocalId.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateTheConceptLocal(referent_1, typecharacter_1, userId_1, categoryId_1, typeId_1, accessId_1) {
              return __awaiter(this, arguments, void 0, function* (referent, typecharacter, userId, categoryId, typeId, accessId, isComposition = false, referentId = 0) {
                try {
                  let id = yield _DataStructures_Local_LocalId__WEBPACK_IMPORTED_MODULE_2__.LocalId.getConceptId();
                  console.log("this is the getting id type connection", id);
                  let isNew = true;
                  let created_on = /* @__PURE__ */ new Date();
                  let updated_on = /* @__PURE__ */ new Date();
                  if (referent == "the") {
                    let concept2 = new _DataStructures_Concept__WEBPACK_IMPORTED_MODULE_0__.Concept(1, 999, 5, 5, referentId, referent, accessId, isNew, created_on, updated_on, typecharacter);
                    return concept2;
                  }
                  let concept = new _DataStructures_Concept__WEBPACK_IMPORTED_MODULE_0__.Concept(id, userId, typeId, categoryId, referentId, referent, accessId, isNew, created_on, updated_on, typecharacter);
                  concept.isTemp = true;
                  concept.isComposition = isComposition;
                  _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_1__.LocalConceptsData.AddConcept(concept);
                  return concept;
                } catch (error) {
                  throw error;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/CreateTheConnectionLocal.ts": (
          /*!********************************************************!*\
            !*** ./src/Services/Local/CreateTheConnectionLocal.ts ***!
            \********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              CreateTheConnectionLocal: () => (
                /* binding */
                CreateTheConnectionLocal
              )
              /* harmony export */
            });
            var _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Connection */
              "./src/DataStructures/Connection.ts"
            );
            var _DataStructures_Local_LocalConnectionData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalConnectionData */
              "./src/DataStructures/Local/LocalConnectionData.ts"
            );
            var _DataStructures_Local_LocalId__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalId */
              "./src/DataStructures/Local/LocalId.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function CreateTheConnectionLocal(ofTheConceptId_1, toTheConceptId_1, typeId_1) {
              return __awaiter(this, arguments, void 0, function* (ofTheConceptId, toTheConceptId, typeId, orderId = 1, typeString = "", userId = 999) {
                try {
                  let accessId = 4;
                  let randomid = yield _DataStructures_Local_LocalId__WEBPACK_IMPORTED_MODULE_2__.LocalId.getConnectionId();
                  let realOfTheConceptId = 0;
                  let realToTheConceptId = 0;
                  let realTypeId = 0;
                  realOfTheConceptId = ofTheConceptId;
                  realToTheConceptId = toTheConceptId;
                  realTypeId = typeId;
                  let connection = new _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__.Connection(0, 0, 0, 0, 0, 0, 0);
                  if (ofTheConceptId != toTheConceptId) {
                    connection = new _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_0__.Connection(randomid, realOfTheConceptId, realToTheConceptId, userId, typeId, orderId, accessId);
                    connection.isTemp = true;
                    connection.typeCharacter = typeString;
                    yield _app__WEBPACK_IMPORTED_MODULE_3__.LocalSyncData.AddConnection(connection);
                    _DataStructures_Local_LocalConnectionData__WEBPACK_IMPORTED_MODULE_1__.LocalConnectionData.AddConnection(connection);
                  }
                  return connection;
                } catch (error) {
                  throw error;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/DeleteConceptLocal.ts": (
          /*!**************************************************!*\
            !*** ./src/Services/Local/DeleteConceptLocal.ts ***!
            \**************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              DeleteConceptLocal: () => (
                /* binding */
                DeleteConceptLocal
              )
              /* harmony export */
            });
            var _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalConceptData */
              "./src/DataStructures/Local/LocalConceptData.ts"
            );
            var _GetTheConceptLocal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./GetTheConceptLocal */
              "./src/Services/Local/GetTheConceptLocal.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function DeleteConceptLocal(id) {
              return __awaiter(this, void 0, void 0, function* () {
                let concept = yield (0, _GetTheConceptLocal__WEBPACK_IMPORTED_MODULE_1__.GetTheConceptLocal)(id);
                _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__.LocalConceptsData.RemoveConcept(concept);
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/GetCompositionListLocal.ts": (
          /*!*******************************************************!*\
            !*** ./src/Services/Local/GetCompositionListLocal.ts ***!
            \*******************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetCompositionListLocal: () => (
                /* binding */
                GetCompositionListLocal
              ),
              /* harmony export */
              GetCompositionListLocalWithId: () => (
                /* binding */
                GetCompositionListLocalWithId
              )
              /* harmony export */
            });
            var _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalConceptData */
              "./src/DataStructures/Local/LocalConceptData.ts"
            );
            var _GetCompositionLocal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./GetCompositionLocal */
              "./src/Services/Local/GetCompositionLocal.ts"
            );
            var _GetConceptByCharacterLocal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./GetConceptByCharacterLocal */
              "./src/Services/Local/GetConceptByCharacterLocal.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetCompositionListLocal(compositionName, userId) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let concept = yield (0, _GetConceptByCharacterLocal__WEBPACK_IMPORTED_MODULE_2__["default"])(compositionName);
                  let CompositionList = [];
                  if (concept.id != 0) {
                    let conceptList = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__.LocalConceptsData.GetConceptsByTypeIdAndUser(concept.id, userId);
                    for (let i2 = 0; i2 < conceptList.length; i2++) {
                      let compositionJson = yield (0, _GetCompositionLocal__WEBPACK_IMPORTED_MODULE_1__.GetCompositionLocal)(conceptList[i2].id);
                      CompositionList.push(compositionJson);
                    }
                  }
                  return CompositionList;
                } catch (error) {
                  throw error;
                }
              });
            }
            function GetCompositionListLocalWithId(compositionName, userId) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let concept = yield (0, _GetConceptByCharacterLocal__WEBPACK_IMPORTED_MODULE_2__["default"])(compositionName);
                  let CompositionList = [];
                  if (concept.id != 0) {
                    let conceptList = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__.LocalConceptsData.GetConceptsByTypeIdAndUser(concept.id, userId);
                    for (let i2 = 0; i2 < conceptList.length; i2++) {
                      let compositionJson = yield (0, _GetCompositionLocal__WEBPACK_IMPORTED_MODULE_1__.GetCompositionLocalWithId)(conceptList[i2].id);
                      CompositionList.push(compositionJson);
                    }
                  }
                  return CompositionList;
                } catch (error) {
                  throw error;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/GetCompositionLocal.ts": (
          /*!***************************************************!*\
            !*** ./src/Services/Local/GetCompositionLocal.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetCompositionLocal: () => (
                /* binding */
                GetCompositionLocal
              ),
              /* harmony export */
              GetCompositionLocalWithId: () => (
                /* binding */
                GetCompositionLocalWithId
              )
              /* harmony export */
            });
            var _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalConceptData */
              "./src/DataStructures/Local/LocalConceptData.ts"
            );
            var _DataStructures_Local_LocalConnectionData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalConnectionData */
              "./src/DataStructures/Local/LocalConnectionData.ts"
            );
            var _Api_Translate_TranslateLocalToReal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Api/Translate/TranslateLocalToReal */
              "./src/Api/Translate/TranslateLocalToReal.ts"
            );
            var _GetComposition__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../GetComposition */
              "./src/Services/GetComposition.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetCompositionLocal(id) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                try {
                  let connectionList = [];
                  let returnOutput = {};
                  connectionList = yield _DataStructures_Local_LocalConnectionData__WEBPACK_IMPORTED_MODULE_1__.LocalConnectionData.GetConnectionsOfCompositionLocal(id);
                  let compositionList = [];
                  for (let i2 = 0; i2 < connectionList.length; i2++) {
                    if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                      compositionList.push(connectionList[i2].ofTheConceptId);
                    }
                  }
                  let concept = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__.LocalConceptsData.GetConcept(id);
                  if (concept.id == 0) {
                    let realConcept = yield (0, _Api_Translate_TranslateLocalToReal__WEBPACK_IMPORTED_MODULE_2__.TranslateLocalToReal)(id);
                    if (realConcept.id > 0) {
                      return yield (0, _GetComposition__WEBPACK_IMPORTED_MODULE_3__.GetComposition)(realConcept.id);
                    }
                  }
                  let output = yield recursiveFetchLocal(id, connectionList, compositionList);
                  let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "top";
                  returnOutput[mainString] = output;
                  return returnOutput;
                } catch (error) {
                  throw error;
                }
              });
            }
            function GetCompositionLocalWithId(id) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a, _b;
                try {
                  let connectionList = [];
                  let returnOutput = {};
                  let FinalReturn = {};
                  connectionList = yield _DataStructures_Local_LocalConnectionData__WEBPACK_IMPORTED_MODULE_1__.LocalConnectionData.GetConnectionsOfCompositionLocal(id);
                  let compositionList = [];
                  for (let i2 = 0; i2 < connectionList.length; i2++) {
                    if (!compositionList.includes(connectionList[i2].ofTheConceptId)) {
                      compositionList.push(connectionList[i2].ofTheConceptId);
                    }
                  }
                  let concept = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__.LocalConceptsData.GetConcept(id);
                  if (concept.id != 0) {
                    let output = yield recursiveFetchLocal(id, connectionList, compositionList);
                    let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "top";
                    returnOutput[mainString] = output;
                  }
                  FinalReturn["data"] = returnOutput;
                  FinalReturn["id"] = id;
                  return FinalReturn;
                } catch (error) {
                  throw error;
                }
              });
            }
            function recursiveFetchLocal(id_1, connectionList_1, compositionList_1) {
              return __awaiter(this, arguments, void 0, function* (id, connectionList, compositionList, visitedConcepts = []) {
                var _a, _b, _c, _d;
                let output = {};
                let arroutput = [];
                let concept = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__.LocalConceptsData.GetConcept(id);
                if (concept.id != 0) {
                  if (concept.type == null) {
                    let toConceptTypeId = concept.typeId;
                    let toConceptType = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__.LocalConceptsData.GetConcept(toConceptTypeId);
                    concept.type = toConceptType;
                  }
                }
                let mainString = (_b = (_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) !== null && _b !== void 0 ? _b : "top";
                if (!compositionList.includes(id)) {
                  return concept === null || concept === void 0 ? void 0 : concept.characterValue;
                } else {
                  if (visitedConcepts.includes(id)) {
                    return "";
                  } else {
                    visitedConcepts.push(id);
                  }
                  for (let i2 = 0; i2 < connectionList.length; i2++) {
                    if (connectionList[i2].ofTheConceptId == id) {
                      let toConceptId = connectionList[i2].toTheConceptId;
                      let toConcept = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__.LocalConceptsData.GetConcept(toConceptId);
                      if (toConcept.id != 0) {
                        if ((toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) == null) {
                          let toConceptTypeId = toConcept.typeId;
                          let toConceptType = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__.LocalConceptsData.GetConcept(toConceptTypeId);
                          toConcept.type = toConceptType;
                        }
                      }
                      let regex = "the_";
                      let localmainString = (_d = (_c = toConcept === null || toConcept === void 0 ? void 0 : toConcept.type) === null || _c === void 0 ? void 0 : _c.characterValue) !== null && _d !== void 0 ? _d : "top";
                      let localKey = localmainString.replace(regex, "");
                      if (isNaN(Number(localKey))) {
                        if (localKey) {
                          const result = yield recursiveFetchLocal(toConceptId, connectionList, compositionList);
                          output[localKey] = result;
                        }
                      } else {
                        const result = yield recursiveFetchLocal(toConceptId, connectionList, compositionList);
                        arroutput[localKey] = result;
                        output = arroutput;
                      }
                    }
                  }
                }
                return output;
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/GetConceptByCharacterLocal.ts": (
          /*!**********************************************************!*\
            !*** ./src/Services/Local/GetConceptByCharacterLocal.ts ***!
            \**********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConceptByCategoryAndCharacterLocalMemory: () => (
                /* binding */
                GetConceptByCategoryAndCharacterLocalMemory
              ),
              /* harmony export */
              GetConceptByCharacterAndCategoryLocal: () => (
                /* binding */
                GetConceptByCharacterAndCategoryLocal
              ),
              /* harmony export */
              GetConceptByCharacterLocalFull: () => (
                /* binding */
                GetConceptByCharacterLocalFull
              ),
              /* harmony export */
              "default": () => (
                /* binding */
                GetConceptByCharacterLocal
              )
              /* harmony export */
            });
            var _Api_Local_GetLocalConceptByCharacterValue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../Api/Local/GetLocalConceptByCharacterValue */
              "./src/Api/Local/GetLocalConceptByCharacterValue.ts"
            );
            var _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalConceptData */
              "./src/DataStructures/Local/LocalConceptData.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConceptByCharacterLocal(characterValue) {
              return __awaiter(this, void 0, void 0, function* () {
                let concept = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_1__.LocalConceptsData.GetConceptByCharacterAndTypeLocal(characterValue, 51);
                return concept;
              });
            }
            function GetConceptByCharacterAndCategoryLocal(character) {
              return __awaiter(this, void 0, void 0, function* () {
                let lconcept = (0, _app__WEBPACK_IMPORTED_MODULE_2__.CreateDefaultLConcept)();
                if (character == "the") {
                  lconcept.id = 1;
                  lconcept.typeId = 5;
                  lconcept.characterValue = "the";
                  return lconcept;
                }
                let splittedStringArray = (0, _app__WEBPACK_IMPORTED_MODULE_2__.SplitStrings)(character);
                if (splittedStringArray.length > 1) {
                  let category = 1;
                  let prefix = yield GetConceptByCharacterAndCategoryLocal(splittedStringArray[0]);
                  if (prefix.id != 0) {
                    category = prefix.id;
                  }
                  lconcept = yield GetConceptByCategoryAndCharacterLocalMemory(character, category);
                } else if (splittedStringArray[0] == character) {
                  lconcept = yield GetConceptByCharacterLocal(character);
                }
                return lconcept;
              });
            }
            function GetConceptByCategoryAndCharacterLocalMemory(value, categoryId) {
              return __awaiter(this, void 0, void 0, function* () {
                let concept = _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_1__.LocalConceptsData.GetConceptByCharacterAndCategoryLocal(value, categoryId);
                return concept;
              });
            }
            function GetConceptByCharacterLocalFull(characterValue) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let concept = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_1__.LocalConceptsData.GetConceptByCharacter(characterValue);
                  let literalCharacter = `${characterValue}`;
                  if ((concept == null || (concept === null || concept === void 0 ? void 0 : concept.id) == 0) && literalCharacter) {
                    yield (0, _Api_Local_GetLocalConceptByCharacterValue__WEBPACK_IMPORTED_MODULE_0__.GetLocalConceptByCharacterValue)(characterValue);
                    concept = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_1__.LocalConceptsData.GetConceptByCharacter(characterValue);
                  }
                  return concept;
                } catch (error) {
                  console.log("this is the error in Get Concept By Character Local full", error);
                  throw error;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/GetConnectionOfTheConceptLocal.ts": (
          /*!**************************************************************!*\
            !*** ./src/Services/Local/GetConnectionOfTheConceptLocal.ts ***!
            \**************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetConnectionOfTheConceptLocal: () => (
                /* binding */
                GetConnectionOfTheConceptLocal
              )
              /* harmony export */
            });
            var _DataStructures_Local_LocalConnectionData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalConnectionData */
              "./src/DataStructures/Local/LocalConnectionData.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetConnectionOfTheConceptLocal(ofTheConcept, typeId, userId) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let connections = yield _DataStructures_Local_LocalConnectionData__WEBPACK_IMPORTED_MODULE_0__.LocalConnectionData.GetConnectionOfCompositionAndTypeLocal(typeId, ofTheConcept);
                  return connections;
                } catch (error) {
                  throw error;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/GetRelationLocal.ts": (
          /*!************************************************!*\
            !*** ./src/Services/Local/GetRelationLocal.ts ***!
            \************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetRelationLocal: () => (
                /* binding */
                GetRelationLocal
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var _GetConnectionOfTheConceptLocal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./GetConnectionOfTheConceptLocal */
              "./src/Services/Local/GetConnectionOfTheConceptLocal.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetRelationLocal(id, relation, userId) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let typeConcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetConceptByCharacterAndCategoryLocal)(relation);
                  let localConnections = [];
                  if (typeConcept.id != 0) {
                    localConnections = yield (0, _GetConnectionOfTheConceptLocal__WEBPACK_IMPORTED_MODULE_1__.GetConnectionOfTheConceptLocal)(id, typeConcept.id, userId);
                  }
                  let output = [];
                  for (let i2 = 0; i2 < localConnections.length; i2++) {
                    let comp = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetCompositionLocal)(localConnections[i2].toTheConceptId);
                    output.push(comp);
                  }
                  return output;
                } catch (error) {
                  throw error;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/GetTheConceptLocal.ts": (
          /*!**************************************************!*\
            !*** ./src/Services/Local/GetTheConceptLocal.ts ***!
            \**************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetTheConceptLocal: () => (
                /* binding */
                GetTheConceptLocal
              )
              /* harmony export */
            });
            var _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalConceptData */
              "./src/DataStructures/Local/LocalConceptData.ts"
            );
            var _DataStructures_Local_LocalGhostIdTree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalGhostIdTree */
              "./src/DataStructures/Local/LocalGhostIdTree.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var _Conversion_ConvertConcepts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../Conversion/ConvertConcepts */
              "./src/Services/Conversion/ConvertConcepts.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetTheConceptLocal(id) {
              return __awaiter(this, void 0, void 0, function* () {
                try {
                  let lconcept = (0, _app__WEBPACK_IMPORTED_MODULE_2__.CreateDefaultLConcept)();
                  if (id < 0) {
                    lconcept = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__.LocalConceptsData.GetConcept(id);
                    if (lconcept.id == 0) {
                      let localNode = yield _DataStructures_Local_LocalGhostIdTree__WEBPACK_IMPORTED_MODULE_1__.LocalGhostIdTree.getNodeFromTree(id);
                      if (localNode === null || localNode === void 0 ? void 0 : localNode.value) {
                        let returnedConcept = localNode.value;
                        if (returnedConcept) {
                          lconcept = returnedConcept;
                        }
                      }
                    }
                  } else {
                    let concept = yield (0, _app__WEBPACK_IMPORTED_MODULE_2__.GetTheConcept)(id);
                    lconcept = (0, _Conversion_ConvertConcepts__WEBPACK_IMPORTED_MODULE_3__.convertFromConceptToLConcept)(concept);
                  }
                  return lconcept;
                } catch (error) {
                  throw error;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/MakeTheConceptLocal.ts": (
          /*!***************************************************!*\
            !*** ./src/Services/Local/MakeTheConceptLocal.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                MakeTheConceptLocal
              )
              /* harmony export */
            });
            var _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalConceptData */
              "./src/DataStructures/Local/LocalConceptData.ts"
            );
            var _CreateTheConceptLocal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./CreateTheConceptLocal */
              "./src/Services/Local/CreateTheConceptLocal.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function MakeTheConceptLocal(referent, typeCharacter, userId, categoryId, typeId) {
              return __awaiter(this, void 0, void 0, function* () {
                let conceptString = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_0__.LocalConceptsData.GetConceptByCharacterAndTypeLocal(referent, typeId);
                let concept = conceptString;
                let accessId = 4;
                if (typeCharacter == "the") {
                  categoryId = 1;
                }
                if (concept.id == 0) {
                  conceptString = yield (0, _CreateTheConceptLocal__WEBPACK_IMPORTED_MODULE_1__["default"])(referent, typeCharacter, userId, categoryId, typeId, accessId);
                  concept = conceptString;
                }
                return concept;
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/MakeTheInstanceConceptLocal.ts": (
          /*!***********************************************************!*\
            !*** ./src/Services/Local/MakeTheInstanceConceptLocal.ts ***!
            \***********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              MakeTheInstanceConceptLocal: () => (
                /* binding */
                MakeTheInstanceConceptLocal
              )
              /* harmony export */
            });
            var _CreateTheConceptLocal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./CreateTheConceptLocal */
              "./src/Services/Local/CreateTheConceptLocal.ts"
            );
            var _MakeTheTypeLocal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./MakeTheTypeLocal */
              "./src/Services/Local/MakeTheTypeLocal.ts"
            );
            var _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../DataStructures/Local/LocalConceptData */
              "./src/DataStructures/Local/LocalConceptData.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function MakeTheInstanceConceptLocal(type_1, referent_1) {
              return __awaiter(this, arguments, void 0, function* (type, referent, composition = false, userId, accessId, sessionInformationId = 999, referentId = 0) {
                try {
                  let sessionInformationId2 = 999;
                  let categoryId = 4;
                  let sessionInformationUserId = userId;
                  let accessId2 = 4;
                  let stringToCheck = "";
                  let stringLength = referent.length;
                  let typeConcept;
                  let concept;
                  let startsWithThe = type.startsWith("the_");
                  if (startsWithThe) {
                    stringToCheck = type;
                  } else {
                    stringToCheck = "the_" + type;
                  }
                  if (composition) {
                    let typeConceptString = yield (0, _MakeTheTypeLocal__WEBPACK_IMPORTED_MODULE_1__.MakeTheTypeConceptLocal)(type, sessionInformationId2, userId, userId);
                    typeConcept = typeConceptString;
                    let conceptString = yield (0, _CreateTheConceptLocal__WEBPACK_IMPORTED_MODULE_0__["default"])(referent, type, userId, categoryId, typeConcept.id, accessId2, true, referentId);
                    concept = conceptString;
                  } else if (stringLength > 255) {
                    let typeConceptString = yield (0, _MakeTheTypeLocal__WEBPACK_IMPORTED_MODULE_1__.MakeTheTypeConceptLocal)(stringToCheck, sessionInformationId2, sessionInformationUserId, userId);
                    typeConcept = typeConceptString;
                    let conceptString = yield (0, _CreateTheConceptLocal__WEBPACK_IMPORTED_MODULE_0__["default"])(referent, stringToCheck, userId, categoryId, typeConcept.id, accessId2);
                    concept = conceptString;
                  } else {
                    let typeConceptString = yield (0, _MakeTheTypeLocal__WEBPACK_IMPORTED_MODULE_1__.MakeTheTypeConceptLocal)(stringToCheck, sessionInformationId2, sessionInformationUserId, userId);
                    typeConcept = typeConceptString;
                    let conceptByCharTypeString = yield _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_2__.LocalConceptsData.GetConceptByCharacterAndTypeLocal(referent, typeConcept.id);
                    let conceptTypeCharacter = conceptByCharTypeString;
                    concept = conceptTypeCharacter;
                    if (conceptTypeCharacter.id == 0 && conceptTypeCharacter.userId == 0) {
                      let conceptString = yield (0, _CreateTheConceptLocal__WEBPACK_IMPORTED_MODULE_0__["default"])(referent, stringToCheck, userId, categoryId, typeConcept.id, accessId2);
                      concept = conceptString;
                    }
                  }
                  concept.type = typeConcept;
                  _app__WEBPACK_IMPORTED_MODULE_3__.LocalSyncData.AddConcept(concept);
                  return concept;
                } catch (error) {
                  throw error;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/MakeTheTypeLocal.ts": (
          /*!************************************************!*\
            !*** ./src/Services/Local/MakeTheTypeLocal.ts ***!
            \************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              MakeTheTypeConceptLocal: () => (
                /* binding */
                MakeTheTypeConceptLocal
              )
              /* harmony export */
            });
            var _CreateTheConceptLocal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./CreateTheConceptLocal */
              "./src/Services/Local/CreateTheConceptLocal.ts"
            );
            var _GetConceptByCharacterLocal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./GetConceptByCharacterLocal */
              "./src/Services/Local/GetConceptByCharacterLocal.ts"
            );
            var _SplitStrings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../SplitStrings */
              "./src/Services/SplitStrings.ts"
            );
            var _MakeTheConceptLocal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./MakeTheConceptLocal */
              "./src/Services/Local/MakeTheConceptLocal.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function MakeTheTypeConceptLocal(typeString, sessionId, sessionUserId, userId) {
              return __awaiter(this, void 0, void 0, function* () {
                let accessId = 4;
                let existingConcept = yield (0, _GetConceptByCharacterLocal__WEBPACK_IMPORTED_MODULE_1__.GetConceptByCharacterAndCategoryLocal)(typeString);
                if (existingConcept) {
                  if (existingConcept.id == 0 || existingConcept.userId == 0) {
                    let splittedStringArray = (0, _SplitStrings__WEBPACK_IMPORTED_MODULE_2__.SplitStrings)(typeString);
                    if (splittedStringArray[0] == typeString) {
                      let concept = yield (0, _MakeTheConceptLocal__WEBPACK_IMPORTED_MODULE_3__["default"])(typeString, "the", userId, 1, 51);
                      existingConcept = concept;
                    } else {
                      let categoryConcept = yield MakeTheTypeConceptLocal(splittedStringArray[0], sessionId, sessionUserId, userId);
                      let typeConcept = yield MakeTheTypeConceptLocal(splittedStringArray[1], sessionId, sessionUserId, userId);
                      let concept = yield (0, _CreateTheConceptLocal__WEBPACK_IMPORTED_MODULE_0__["default"])(typeString, splittedStringArray[1], userId, categoryConcept.id, typeConcept.id, accessId);
                      existingConcept = concept;
                    }
                  }
                }
                return existingConcept;
              });
            }
          }
        ),
        /***/
        "./src/Services/Local/UpdateCompositionLocal.ts": (
          /*!******************************************************!*\
            !*** ./src/Services/Local/UpdateCompositionLocal.ts ***!
            \******************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              UpdateCompositionLocal: () => (
                /* binding */
                UpdateCompositionLocal
              )
              /* harmony export */
            });
            var _Helpers_UniqueInsert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../Helpers/UniqueInsert */
              "./src/Helpers/UniqueInsert.ts"
            );
            var _Helpers_CheckIfExists__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Helpers/CheckIfExists */
              "./src/Helpers/CheckIfExists.ts"
            );
            var _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../Api/GetAllConnectionsOfComposition */
              "./src/Api/GetAllConnectionsOfComposition.ts"
            );
            var _GetTheConcept__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./../GetTheConcept */
              "./src/Services/GetTheConcept.ts"
            );
            var _DeleteConnection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ./../DeleteConnection */
              "./src/Services/DeleteConnection.ts"
            );
            var _CreateTheCompositionLocal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__2(
              /*! ./CreateTheCompositionLocal */
              "./src/Services/Local/CreateTheCompositionLocal.ts"
            );
            var _MakeTheInstanceConceptLocal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__2(
              /*! ./MakeTheInstanceConceptLocal */
              "./src/Services/Local/MakeTheInstanceConceptLocal.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var _Conversion_ConvertConcepts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__2(
              /*! ../Conversion/ConvertConcepts */
              "./src/Services/Conversion/ConvertConcepts.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function UpdateCompositionLocal(patcherStructure) {
              return __awaiter(this, void 0, void 0, function* () {
                const userId = patcherStructure.userId;
                const sessionId = patcherStructure.sessionId;
                const accessId = patcherStructure.accessId;
                let connectionList = [];
                const conceptList = [];
                let composition = (0, _app__WEBPACK_IMPORTED_MODULE_7__.CreateDefaultLConcept)();
                let parentConcept = (0, _app__WEBPACK_IMPORTED_MODULE_7__.CreateDefaultLConcept)();
                const toDeleteConcepts = [];
                const compositionId = patcherStructure.compositionId;
                const ofTheConceptId = patcherStructure.ofTheCompositionId;
                let toDeleteConnections = [];
                const connectionListString = yield (0, _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_2__.GetAllConnectionsOfComposition)(compositionId);
                let connectionListOriginal = connectionListString;
                for (let i2 = 0; i2 < connectionListOriginal.length; i2++) {
                  connectionList.push((0, _Conversion_ConvertConcepts__WEBPACK_IMPORTED_MODULE_8__.convertFromConnectionToLConnection)(connectionListOriginal[i2]));
                }
                const conceptIdList = [];
                const compositionList = [];
                let allConcepts = [];
                for (let i2 = 0; i2 < connectionList.length; i2++) {
                  (0, _Helpers_UniqueInsert__WEBPACK_IMPORTED_MODULE_0__["default"])(compositionList, connectionList[i2].ofTheConceptId);
                  (0, _Helpers_UniqueInsert__WEBPACK_IMPORTED_MODULE_0__["default"])(conceptIdList, connectionList[i2].ofTheConceptId);
                  (0, _Helpers_UniqueInsert__WEBPACK_IMPORTED_MODULE_0__["default"])(conceptIdList, connectionList[i2].toTheConceptId);
                  allConcepts.push(connectionList[i2].ofTheConceptId);
                }
                for (let i2 = 0; i2 < conceptIdList.length; i2++) {
                  const conceptString = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_3__["default"])(conceptIdList[i2]);
                  const concept = conceptString;
                  if (compositionId == conceptIdList[i2]) {
                    composition = (0, _Conversion_ConvertConcepts__WEBPACK_IMPORTED_MODULE_8__.convertFromConceptToLConcept)(concept);
                  }
                  if (ofTheConceptId == conceptIdList[i2]) {
                    parentConcept = (0, _Conversion_ConvertConcepts__WEBPACK_IMPORTED_MODULE_8__.convertFromConceptToLConcept)(concept);
                  }
                  conceptList.push((0, _Conversion_ConvertConcepts__WEBPACK_IMPORTED_MODULE_8__.convertFromConceptToLConcept)(concept));
                }
                const object = patcherStructure.patchObject;
                for (const key in object) {
                  let insertingConcept = (0, _app__WEBPACK_IMPORTED_MODULE_7__.CreateDefaultLConcept)();
                  const value = object[key];
                  let localConcept = composition;
                  if (parentConcept.id > 0) {
                    localConcept = parentConcept;
                  }
                  if (Array.isArray(value) || typeof value == "object") {
                    insertingConcept = yield (0, _MakeTheInstanceConceptLocal__WEBPACK_IMPORTED_MODULE_6__.MakeTheInstanceConceptLocal)(key, "", true, composition.userId, 4, 999);
                    yield (0, _CreateTheCompositionLocal__WEBPACK_IMPORTED_MODULE_5__.CreateTheCompositionLocal)(object[key], insertingConcept.id, insertingConcept.userId, composition.id, composition.userId, 4, 999);
                  } else {
                    insertingConcept = yield (0, _MakeTheInstanceConceptLocal__WEBPACK_IMPORTED_MODULE_6__.MakeTheInstanceConceptLocal)(key, value, false, userId, accessId, sessionId);
                  }
                  const ExistingConcepts = (0, _Helpers_CheckIfExists__WEBPACK_IMPORTED_MODULE_1__.CheckIfTypeLConceptsExistsInArray)(conceptList, insertingConcept);
                  for (let i2 = 0; i2 < ExistingConcepts.length; i2++) {
                    if (ExistingConcepts[i2].id > 0) {
                      const deletingConnections = (0, _Helpers_CheckIfExists__WEBPACK_IMPORTED_MODULE_1__.CheckAllConnectionsConnectedInLConnectionArray)(connectionList, ExistingConcepts[i2].id);
                      toDeleteConnections = toDeleteConnections.concat(deletingConnections);
                      toDeleteConcepts.push(ExistingConcepts[i2]);
                    }
                  }
                  const connectionString = yield (0, _app__WEBPACK_IMPORTED_MODULE_7__.CreateTheConnectionLocal)(localConcept.id, insertingConcept.id, composition.id, 2);
                  const connection = connectionString;
                  conceptList.push(insertingConcept);
                }
                for (let j = 0; j < toDeleteConnections.length; j++) {
                  yield (0, _DeleteConnection__WEBPACK_IMPORTED_MODULE_4__.DeleteConnectionById)(toDeleteConnections[j].id);
                }
                yield _app__WEBPACK_IMPORTED_MODULE_7__.LocalSyncData.SyncDataOnline();
              });
            }
          }
        ),
        /***/
        "./src/Services/MakeTheCharacter.ts": (
          /*!******************************************!*\
            !*** ./src/Services/MakeTheCharacter.ts ***!
            \******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                MakeTheCharacter
              )
              /* harmony export */
            });
            var _MakeTheCharacterData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./MakeTheCharacterData */
              "./src/Services/MakeTheCharacterData.ts"
            );
            var _MakeTheConcept__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./MakeTheConcept */
              "./src/Services/MakeTheConcept.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function MakeTheCharacter(the_character_data, userId, securityId, accessId, accessUserId, sessionId) {
              return __awaiter(this, void 0, void 0, function* () {
                let categoryUserId = userId;
                let securityUserId = userId;
                let categoryId = 4;
                let typeId = 51;
                let typeUserId = userId;
                let sessionUserId = userId;
                let referentUserId = userId;
                let lengthOfCharacters = the_character_data.length;
                let concept;
                if (lengthOfCharacters == 1) {
                  let referentId = the_character_data.charCodeAt(0);
                  let typeIdForCharacter = 49;
                  let characterDataString = yield (0, _MakeTheCharacterData__WEBPACK_IMPORTED_MODULE_0__["default"])(the_character_data, userId, securityId, accessId, sessionId);
                  concept = (0, _MakeTheConcept__WEBPACK_IMPORTED_MODULE_1__["default"])(the_character_data, userId, categoryId, typeIdForCharacter, referentId, accessId, "the_character");
                } else {
                  let characterDataString = yield (0, _MakeTheCharacterData__WEBPACK_IMPORTED_MODULE_0__["default"])(the_character_data, userId, securityId, accessId, sessionId);
                  let characterData = characterDataString;
                  if (characterData.isNew) {
                    let conceptString = yield (0, _MakeTheConcept__WEBPACK_IMPORTED_MODULE_1__["default"])(the_character_data, userId, categoryId, typeId, characterData.id, accessId, "the_characters");
                    concept = conceptString;
                  } else {
                    let conceptString = yield (0, _MakeTheConcept__WEBPACK_IMPORTED_MODULE_1__["default"])(the_character_data, userId, categoryId, typeId, characterData.id, accessId, "the_characters");
                    concept = conceptString;
                  }
                }
                return concept;
              });
            }
          }
        ),
        /***/
        "./src/Services/MakeTheCharacterData.ts": (
          /*!**********************************************!*\
            !*** ./src/Services/MakeTheCharacterData.ts ***!
            \**********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                MakeTheCharacterData
              )
              /* harmony export */
            });
            var _Api_Create_CreateTheCharacter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/Create/CreateTheCharacter */
              "./src/Api/Create/CreateTheCharacter.ts"
            );
            var _DataStructures_TheCharacter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../DataStructures/TheCharacter */
              "./src/DataStructures/TheCharacter.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function MakeTheCharacterData(the_character_data, userId, securityId, accessId, sessionId) {
              return __awaiter(this, void 0, void 0, function* () {
                var categoryUserId = userId;
                var accessUserId = userId;
                var securityUserId = userId;
                var sessionInformationUserId = userId;
                var theCharacter = new _DataStructures_TheCharacter__WEBPACK_IMPORTED_MODULE_1__.TheCharacter(userId, the_character_data, securityId, securityUserId, accessId, accessUserId, sessionId, sessionInformationUserId, "", false);
                var output = yield (0, _Api_Create_CreateTheCharacter__WEBPACK_IMPORTED_MODULE_0__.CreateTheCharacter)(theCharacter);
                var returner = output;
                return returner;
              });
            }
          }
        ),
        /***/
        "./src/Services/MakeTheConcept.ts": (
          /*!****************************************!*\
            !*** ./src/Services/MakeTheConcept.ts ***!
            \****************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                MakeTheConcept
              )
              /* harmony export */
            });
            var _Api_GetConceptByCharacterAndType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetConceptByCharacterAndType */
              "./src/Api/GetConceptByCharacterAndType.ts"
            );
            var _CreateTheConcept__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./CreateTheConcept */
              "./src/Services/CreateTheConcept.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function MakeTheConcept(referent, userId, categoryId, typeId, referentId, accessId, typeCharacter) {
              return __awaiter(this, void 0, void 0, function* () {
                let conceptString = yield (0, _Api_GetConceptByCharacterAndType__WEBPACK_IMPORTED_MODULE_0__.GetConceptByCharacterAndType)(referent, typeId);
                let concept = conceptString;
                if (concept.id == 0) {
                  conceptString = yield (0, _CreateTheConcept__WEBPACK_IMPORTED_MODULE_1__["default"])(referent, userId, categoryId, typeId, referentId, accessId, typeCharacter);
                  concept = conceptString;
                }
                return concept;
              });
            }
          }
        ),
        /***/
        "./src/Services/MakeTheInstanceConcept.ts": (
          /*!************************************************!*\
            !*** ./src/Services/MakeTheInstanceConcept.ts ***!
            \************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                MakeTheInstanceConcept
              )
              /* harmony export */
            });
            var _Api_Create_CreateTheTextData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/Create/CreateTheTextData */
              "./src/Api/Create/CreateTheTextData.ts"
            );
            var _Api_GetConceptByCharacterAndType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Api/GetConceptByCharacterAndType */
              "./src/Api/GetConceptByCharacterAndType.ts"
            );
            var _Api_MakeTheNameInBackend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Api/MakeTheNameInBackend */
              "./src/Api/MakeTheNameInBackend.ts"
            );
            var _DataStructures_TheTexts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../DataStructures/TheTexts */
              "./src/DataStructures/TheTexts.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__2(
              /*! ./CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var _CreateTheConcept__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__2(
              /*! ./CreateTheConcept */
              "./src/Services/CreateTheConcept.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function MakeTheInstanceConcept(type_1, referent_1) {
              return __awaiter(this, arguments, void 0, function* (type, referent, composition = false, userId, passedAccessId = 4, passedSessionId = 999, referentId = 0) {
                let sessionInformationId = passedSessionId;
                let categoryId = 4;
                let categoryUserId = userId;
                let referentUserId = 999;
                let securityId = 999;
                let securityUserId = userId;
                let sessionInformationUserId = userId;
                let accessId = passedAccessId;
                let accessUserId = userId;
                let stringToCheck = "";
                let stringLength = referent.length;
                let typeConcept = (0, _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_5__.CreateDefaultConcept)();
                let concept;
                let startsWithThe = type.startsWith("the_");
                if (startsWithThe) {
                  stringToCheck = type;
                } else {
                  stringToCheck = "the_" + type;
                }
                if (composition) {
                  let typeConceptString = yield (0, _app__WEBPACK_IMPORTED_MODULE_4__.MakeTheTypeConceptApi)(type, userId);
                  typeConcept = typeConceptString;
                  let conceptString = yield (0, _CreateTheConcept__WEBPACK_IMPORTED_MODULE_6__["default"])(referent, userId, categoryId, typeConcept.id, referentId, accessId, type);
                  concept = conceptString;
                } else if (stringLength > 255) {
                  let typeConceptString = yield (0, _app__WEBPACK_IMPORTED_MODULE_4__.MakeTheTypeConceptApi)(stringToCheck, userId);
                  typeConcept = typeConceptString;
                  let conceptString = yield (0, _CreateTheConcept__WEBPACK_IMPORTED_MODULE_6__["default"])(referent, userId, categoryId, typeConcept.id, referentId, accessId, stringToCheck);
                  concept = conceptString;
                  let TheTextsData = new _DataStructures_TheTexts__WEBPACK_IMPORTED_MODULE_3__.TheTexts(userId, referent, securityId, securityUserId, accessId, accessUserId, sessionInformationId, sessionInformationUserId, Date.now().toString(), true);
                  (0, _Api_Create_CreateTheTextData__WEBPACK_IMPORTED_MODULE_0__.CreateTextData)(TheTextsData);
                } else {
                  let typeConceptString = yield (0, _app__WEBPACK_IMPORTED_MODULE_4__.MakeTheTypeConceptApi)(stringToCheck, userId);
                  typeConcept = typeConceptString;
                  let conceptByCharTypeString = yield (0, _Api_GetConceptByCharacterAndType__WEBPACK_IMPORTED_MODULE_1__.GetConceptByCharacterAndType)(referent, typeConcept.id);
                  let conceptTypeCharacter = conceptByCharTypeString;
                  concept = conceptTypeCharacter;
                  if (conceptTypeCharacter.id == 0 && conceptTypeCharacter.userId == 0) {
                    let conceptString = yield (0, _CreateTheConcept__WEBPACK_IMPORTED_MODULE_6__.CreateTheConceptImmediate)(referent, userId, categoryId, typeConcept.id, 12, accessId, stringToCheck);
                    concept = conceptString;
                    (0, _Api_MakeTheNameInBackend__WEBPACK_IMPORTED_MODULE_2__.MakeTheNameInBackend)(concept.id, `${referent}`, typeConcept.id, userId);
                  }
                }
                concept.type = typeConcept;
                return concept;
              });
            }
          }
        ),
        /***/
        "./src/Services/MakeTheTimestamp.ts": (
          /*!******************************************!*\
            !*** ./src/Services/MakeTheTimestamp.ts ***!
            \******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              MakeTheTimestamp: () => (
                /* binding */
                MakeTheTimestamp
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var _MakeTheConcept__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./MakeTheConcept */
              "./src/Services/MakeTheConcept.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function MakeTheTimestamp(type_1, referent_1, userId_1) {
              return __awaiter(this, arguments, void 0, function* (type, referent, userId, accessId = 4, sessionInformationId = 999) {
                let categoryId = 4;
                let referentId = 0;
                let stringToCheck = "";
                let startsWithThe = type.startsWith("the_");
                let typeConcept = (0, _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_1__.CreateDefaultConcept)();
                let concept;
                if (startsWithThe) {
                  stringToCheck = type;
                } else {
                  stringToCheck = "the_" + type;
                }
                let typeConceptString = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.MakeTheTypeConceptApi)(stringToCheck, userId);
                typeConcept = typeConceptString;
                let conceptString = yield (0, _MakeTheConcept__WEBPACK_IMPORTED_MODULE_2__["default"])(referent, userId, categoryId, typeConcept.id, referentId, accessId, stringToCheck);
                concept = conceptString;
                return concept;
              });
            }
          }
        ),
        /***/
        "./src/Services/MakeTheTypeConcept.ts": (
          /*!********************************************!*\
            !*** ./src/Services/MakeTheTypeConcept.ts ***!
            \********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              MakeTheTypeConcept: () => (
                /* binding */
                MakeTheTypeConcept
              )
              /* harmony export */
            });
            var _CreateTheConcept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./CreateTheConcept */
              "./src/Services/CreateTheConcept.ts"
            );
            var _GetConceptByCharacter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./GetConceptByCharacter */
              "./src/Services/GetConceptByCharacter.ts"
            );
            var _MakeTheCharacter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./MakeTheCharacter */
              "./src/Services/MakeTheCharacter.ts"
            );
            var _SplitStrings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./SplitStrings */
              "./src/Services/SplitStrings.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function MakeTheTypeConcept(typeString, sessionId, sessionUserId, userId) {
              return __awaiter(this, void 0, void 0, function* () {
                let referentId = 999;
                let securityId = 999;
                let accessId = 999;
                let accessUserId = userId;
                let existingConcept = yield (0, _GetConceptByCharacter__WEBPACK_IMPORTED_MODULE_1__["default"])(typeString);
                if (existingConcept) {
                  if (existingConcept.id == 0 || existingConcept.userId == 0) {
                    let splittedStringArray = (0, _SplitStrings__WEBPACK_IMPORTED_MODULE_3__.SplitStrings)(typeString);
                    if (splittedStringArray.length > 0) {
                      if (splittedStringArray[0] == typeString) {
                        let conceptString = yield (0, _MakeTheCharacter__WEBPACK_IMPORTED_MODULE_2__["default"])(typeString, userId, securityId, accessId, accessUserId, sessionId);
                        existingConcept = conceptString;
                      } else {
                        let categoryId = 1;
                        let categoryConcept = yield MakeTheTypeConcept(splittedStringArray[0], sessionId, sessionUserId, userId);
                        let typeConcept = yield MakeTheTypeConcept(splittedStringArray[1], sessionId, sessionUserId, userId);
                        if (typeConcept) {
                          let concept = yield (0, _CreateTheConcept__WEBPACK_IMPORTED_MODULE_0__.CreateTheConceptImmediate)(typeString, userId, categoryConcept.id, typeConcept.id, referentId, accessId, splittedStringArray[1]);
                          existingConcept = concept;
                        }
                      }
                    }
                  }
                }
                return existingConcept;
              });
            }
          }
        ),
        /***/
        "./src/Services/Mqtt/publishMessage.ts": (
          /*!*********************************************!*\
            !*** ./src/Services/Mqtt/publishMessage.ts ***!
            \*********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              publishMessage: () => (
                /* binding */
                publishMessage
              )
              /* harmony export */
            });
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            function publishMessage(topic, message) {
              if (_DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.MQTT_CONNECTION) {
                _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_0__.BaseUrl.MQTT_CONNECTION.publish(topic, message);
              }
            }
          }
        ),
        /***/
        "./src/Services/Search/SearchLinkInternal.ts": (
          /*!***************************************************!*\
            !*** ./src/Services/Search/SearchLinkInternal.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SearchLinkInternal: () => (
                /* binding */
                SearchLinkInternal
              ),
              /* harmony export */
              SearchLinkInternalAll: () => (
                /* binding */
                SearchLinkInternalAll
              )
              /* harmony export */
            });
            var _Api_Search_SearchInternalApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../Api/Search/SearchInternalApi */
              "./src/Api/Search/SearchInternalApi.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function SearchLinkInternal(searchQuery_1) {
              return __awaiter(this, arguments, void 0, function* (searchQuery, token = "") {
                try {
                  let conceptsConnections = yield (0, _Api_Search_SearchInternalApi__WEBPACK_IMPORTED_MODULE_0__.SearchInternalApi)(searchQuery, token);
                  let out = yield (0, _app__WEBPACK_IMPORTED_MODULE_1__.ViewInternalData)(conceptsConnections);
                  return out;
                } catch (ex) {
                  throw ex;
                }
              });
            }
            function SearchLinkInternalAll(searchQuery_1) {
              return __awaiter(this, arguments, void 0, function* (searchQuery, token = "") {
                try {
                  let conceptsConnections = yield (0, _Api_Search_SearchInternalApi__WEBPACK_IMPORTED_MODULE_0__.SearchInternalApi)(searchQuery, token);
                  let out = yield (0, _app__WEBPACK_IMPORTED_MODULE_1__.ViewInternalData)(conceptsConnections);
                  return out;
                } catch (ex) {
                  throw ex;
                }
              });
            }
          }
        ),
        /***/
        "./src/Services/Search/SearchLinkMultiple.ts": (
          /*!***************************************************!*\
            !*** ./src/Services/Search/SearchLinkMultiple.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              DataIdBuildLayer: () => (
                /* binding */
                DataIdBuildLayer
              ),
              /* harmony export */
              FormatConceptsAndConnections: () => (
                /* binding */
                FormatConceptsAndConnections
              ),
              /* harmony export */
              FormatFromConnections: () => (
                /* binding */
                FormatFromConnections
              ),
              /* harmony export */
              FormatFromConnectionsAltered: () => (
                /* binding */
                FormatFromConnectionsAltered
              ),
              /* harmony export */
              FormatFromConnectionsAlteredArray: () => (
                /* binding */
                FormatFromConnectionsAlteredArray
              ),
              /* harmony export */
              SearchLinkMultipleAll: () => (
                /* binding */
                SearchLinkMultipleAll
              )
              /* harmony export */
            });
            var _Api_Search_SearchLinkMultipleApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../Api/Search/SearchLinkMultipleApi */
              "./src/Api/Search/SearchLinkMultipleApi.ts"
            );
            var _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../Constants/FormatConstants */
              "./src/Constants/FormatConstants.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var _GetCompositionBulk__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ../GetCompositionBulk */
              "./src/Services/GetCompositionBulk.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function SearchLinkMultipleAll(searchQuery_1) {
              return __awaiter(this, arguments, void 0, function* (searchQuery, token = "", caller = null, format = _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__.DATAID) {
                var _a, _b, _c, _d, _e, _f, _g, _h;
                let conceptIds = [];
                let linkers = [];
                let connections = [];
                let reverse = [];
                let mainCompositionId = searchQuery[0].composition;
                let conceptsConnections = {};
                let result = {};
                try {
                  if (caller === null || caller === void 0 ? void 0 : caller.isDataLoaded) {
                    conceptsConnections.compositionIds = (_a = caller.conceptIds) === null || _a === void 0 ? void 0 : _a.slice();
                    conceptsConnections.internalConnections = (_b = caller.internalConnections) === null || _b === void 0 ? void 0 : _b.slice();
                    conceptsConnections.linkers = (_c = caller.linkers) === null || _c === void 0 ? void 0 : _c.slice();
                    conceptsConnections.reverse = (_d = caller.reverse) === null || _d === void 0 ? void 0 : _d.slice();
                    result = conceptsConnections;
                    conceptIds = result.compositionIds;
                    connections = result.internalConnections;
                    linkers = result.linkers;
                    reverse = result.reverse;
                  } else {
                    conceptsConnections = yield (0, _Api_Search_SearchLinkMultipleApi__WEBPACK_IMPORTED_MODULE_0__.SearchLinkMultipleApi)(searchQuery, token);
                    if (caller) {
                      caller.conceptIds = (_e = conceptsConnections.compositionIds) === null || _e === void 0 ? void 0 : _e.slice();
                      caller.internalConnections = (_f = conceptsConnections.internalConnections) === null || _f === void 0 ? void 0 : _f.slice();
                      caller.linkers = (_g = conceptsConnections.linkers) === null || _g === void 0 ? void 0 : _g.slice();
                      caller.reverse = (_h = conceptsConnections.reverse) === null || _h === void 0 ? void 0 : _h.slice();
                      caller.isDataLoaded = true;
                    }
                    result = conceptsConnections;
                    conceptIds = result.compositionIds;
                    connections = result.internalConnections;
                    linkers = result.linkers;
                    reverse = result.reverse;
                  }
                  let out = yield DataIdBuildLayer(linkers, conceptIds, connections, reverse, mainCompositionId, format);
                  return out;
                } catch (e) {
                  console.log("this is the error in the search link multiple", e);
                  throw e;
                }
              });
            }
            function DataIdBuildLayer(linkers_1, conceptIds_1, connections_1, reverse_1, mainCompositionId_1) {
              return __awaiter(this, arguments, void 0, function* (linkers, conceptIds, connections, reverse, mainCompositionId, format = _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__.DATAID) {
                let startTime = (/* @__PURE__ */ new Date()).getTime();
                let prefetchConnections = yield (0, _GetCompositionBulk__WEBPACK_IMPORTED_MODULE_3__.GetConnectionDataPrefetch)(linkers);
                let concepts;
                let out;
                if (format == _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__.JUSTDATA) {
                  concepts = yield (0, _GetCompositionBulk__WEBPACK_IMPORTED_MODULE_3__.GetCompositionFromConnectionsInObject)(conceptIds, connections);
                  out = yield FormatFromConnections(linkers, concepts, mainCompositionId, reverse);
                } else if (format == _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__.NORMAL) {
                  concepts = yield (0, _GetCompositionBulk__WEBPACK_IMPORTED_MODULE_3__.GetCompositionFromConnectionsInObjectNormal)(conceptIds, connections);
                  out = yield FormatFromConnections(linkers, concepts, mainCompositionId, reverse);
                } else if (format == 100) {
                  concepts = yield (0, _GetCompositionBulk__WEBPACK_IMPORTED_MODULE_3__.GetCompositionFromConnectionsWithDataIdInObjectNew)(conceptIds, connections);
                  out = yield FormatFromConnectionsAltered(prefetchConnections, concepts, mainCompositionId, reverse);
                } else {
                  concepts = yield (0, _GetCompositionBulk__WEBPACK_IMPORTED_MODULE_3__.GetCompositionFromConnectionsWithDataIdInObject)(conceptIds, connections);
                  out = yield FormatFromConnectionsAltered(prefetchConnections, concepts, mainCompositionId, reverse);
                }
                return out;
              });
            }
            function FormatFromConnectionsAltered(connections_1, compositionData_1, mainComposition_1) {
              return __awaiter(this, arguments, void 0, function* (connections, compositionData, mainComposition, reverse = []) {
                let startTime = (/* @__PURE__ */ new Date()).getTime();
                let mainData = {};
                let myConcepts = [];
                for (let i2 = 0; i2 < connections.length; i2++) {
                  myConcepts.push(connections[i2].toTheConceptId);
                  myConcepts.push(connections[i2].ofTheConceptId);
                  myConcepts.push(connections[i2].typeId);
                }
                connections.sort(function(x, y) {
                  return y.id - x.id;
                });
                for (let i2 = 0; i2 < connections.length; i2++) {
                  let reverseFlag = false;
                  if (reverse.includes(connections[i2].id)) {
                    reverseFlag = true;
                  }
                  if (reverseFlag == true) {
                    if (compositionData[connections[i2].ofTheConceptId] && compositionData[connections[i2].toTheConceptId]) {
                      let mydata = compositionData[connections[i2].toTheConceptId];
                      let linkerConcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_2__.GetTheConcept)(connections[i2].typeId);
                      let newData = mydata === null || mydata === void 0 ? void 0 : mydata.data;
                      let key = Object.keys(newData)[0];
                      try {
                        let reverseCharater = linkerConcept.characterValue + "_reverse";
                        if (typeof newData === "string") {
                          newData = {};
                        }
                        if (Array.isArray(newData[key][reverseCharater])) {
                          newData[key][reverseCharater].push(compositionData[connections[i2].ofTheConceptId]);
                        } else {
                          if (typeof newData[key] === "string") {
                            newData[key] = {};
                          }
                          newData[key][reverseCharater] = [];
                          newData[key][reverseCharater].push(compositionData[connections[i2].ofTheConceptId]);
                        }
                      } catch (ex) {
                        console.log("this is error", ex);
                      }
                    }
                  } else {
                    if (compositionData[connections[i2].ofTheConceptId] && compositionData[connections[i2].toTheConceptId]) {
                      let mydata = compositionData[connections[i2].ofTheConceptId];
                      let linkerConcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_2__.GetTheConcept)(connections[i2].typeId);
                      let newData = mydata === null || mydata === void 0 ? void 0 : mydata.data;
                      let key = Object.keys(newData)[0];
                      try {
                        if (typeof newData === "string") {
                          newData = {};
                        }
                        if (Array.isArray(newData[key][linkerConcept.characterValue])) {
                          newData[key][linkerConcept.characterValue].push(compositionData[connections[i2].toTheConceptId]);
                        } else {
                          if (typeof newData[key] === "string") {
                            newData[key] = {};
                          }
                          newData[key][linkerConcept.characterValue] = [];
                          newData[key][linkerConcept.characterValue].push(compositionData[connections[i2].toTheConceptId]);
                        }
                      } catch (ex) {
                        console.log("this is error", ex);
                      }
                    }
                  }
                }
                mainData = compositionData[mainComposition];
                return mainData;
              });
            }
            function FormatConceptsAndConnections(connections_1, compositionData_1, mainComposition_1) {
              return __awaiter(this, arguments, void 0, function* (connections, compositionData, mainComposition, reverse = []) {
                let mainData = [];
                let myConcepts = [];
                for (let i2 = 0; i2 < connections.length; i2++) {
                  myConcepts.push(connections[i2].toTheConceptId);
                  myConcepts.push(connections[i2].ofTheConceptId);
                  myConcepts.push(connections[i2].typeId);
                }
                connections.sort(function(x, y) {
                  return y.id - x.id;
                });
                for (let i2 = 0; i2 < connections.length; i2++) {
                  let reverseFlag = false;
                  if (reverse.includes(connections[i2].id)) {
                    reverseFlag = true;
                  }
                  if (reverseFlag == true) {
                    if (compositionData[connections[i2].ofTheConceptId] && compositionData[connections[i2].toTheConceptId]) {
                      let newData = compositionData[connections[i2].toTheConceptId];
                      let linkerConcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_2__.GetTheConcept)(connections[i2].typeId);
                      let key = Object.keys(newData)[0];
                      try {
                        let reverseCharater = linkerConcept.characterValue + "_reverse";
                        if (typeof newData === "string") {
                          newData = {};
                        }
                        if (Array.isArray(newData[key][reverseCharater])) {
                          newData[key][reverseCharater].push(compositionData[connections[i2].ofTheConceptId]);
                        } else {
                          if (typeof newData[key] === "string") {
                            newData[key] = {};
                          }
                          newData[key][reverseCharater] = [];
                          newData[key][reverseCharater].push(compositionData[connections[i2].ofTheConceptId]);
                        }
                      } catch (ex) {
                        console.log("this is error", ex);
                      }
                    }
                  } else {
                    if (compositionData[connections[i2].ofTheConceptId] && compositionData[connections[i2].toTheConceptId]) {
                      let newData = compositionData[connections[i2].ofTheConceptId];
                      let linkerConcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_2__.GetTheConcept)(connections[i2].typeId);
                      let key = Object.keys(newData)[0];
                      try {
                        if (typeof newData === "string") {
                          newData = {};
                        }
                        if (Array.isArray(newData[key][linkerConcept.characterValue])) {
                          newData[key][linkerConcept.characterValue].push(compositionData[connections[i2].toTheConceptId]);
                        } else {
                          if (typeof newData[key] === "string") {
                            newData[key] = {};
                          }
                          newData[key][linkerConcept.characterValue] = [];
                          newData[key][linkerConcept.characterValue].push(compositionData[connections[i2].toTheConceptId]);
                        }
                      } catch (ex) {
                        console.log("this is error", ex);
                      }
                    }
                  }
                }
                for (let i2 = 0; i2 < mainComposition.length; i2++) {
                  let mymainData = compositionData[mainComposition[i2]];
                  console.log(mainData, mymainData);
                  mainData.push(mymainData);
                }
                return mainData;
              });
            }
            function FormatFromConnectionsAlteredArray(connections_1, compositionData_1, conceptIds_1, mainComposition_1) {
              return __awaiter(this, arguments, void 0, function* (connections, compositionData, conceptIds, mainComposition, reverse = []) {
                let startTime = (/* @__PURE__ */ new Date()).getTime();
                let mainData = [];
                let myConcepts = [];
                for (let i2 = 0; i2 < connections.length; i2++) {
                  myConcepts.push(connections[i2].toTheConceptId);
                  myConcepts.push(connections[i2].ofTheConceptId);
                  myConcepts.push(connections[i2].typeId);
                }
                connections.sort(function(x, y) {
                  return y.id - x.id;
                });
                for (let i2 = 0; i2 < connections.length; i2++) {
                  let reverseFlag = false;
                  if (reverse.includes(connections[i2].id)) {
                    reverseFlag = true;
                  }
                  if (reverseFlag == true) {
                    if (compositionData[connections[i2].ofTheConceptId] && compositionData[connections[i2].toTheConceptId]) {
                      let mydata = compositionData[connections[i2].toTheConceptId];
                      let linkerConcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_2__.GetTheConcept)(connections[i2].typeId);
                      let newData = mydata === null || mydata === void 0 ? void 0 : mydata.data;
                      let key = Object.keys(newData)[0];
                      try {
                        let reverseCharater = linkerConcept.characterValue + "_reverse";
                        if (typeof newData === "string") {
                          newData = {};
                        }
                        if (Array.isArray(newData[key][reverseCharater])) {
                          newData[key][reverseCharater].push(compositionData[connections[i2].ofTheConceptId]);
                        } else {
                          if (typeof newData[key] === "string") {
                            newData[key] = {};
                          }
                          newData[key][reverseCharater] = [];
                          newData[key][reverseCharater].push(compositionData[connections[i2].ofTheConceptId]);
                        }
                      } catch (ex) {
                        console.log("this is error", ex);
                      }
                    }
                  } else {
                    if (compositionData[connections[i2].ofTheConceptId] && compositionData[connections[i2].toTheConceptId]) {
                      let mydata = compositionData[connections[i2].ofTheConceptId];
                      let linkerConcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_2__.GetTheConcept)(connections[i2].typeId);
                      let newData = mydata === null || mydata === void 0 ? void 0 : mydata.data;
                      let key = Object.keys(newData)[0];
                      try {
                        if (typeof newData === "string") {
                          newData = {};
                        }
                        if (Array.isArray(newData[key][linkerConcept.characterValue])) {
                          newData[key][linkerConcept.characterValue].push(compositionData[connections[i2].toTheConceptId]);
                        } else {
                          if (typeof newData[key] === "string") {
                            newData[key] = {};
                          }
                          newData[key][linkerConcept.characterValue] = [];
                          newData[key][linkerConcept.characterValue].push(compositionData[connections[i2].toTheConceptId]);
                        }
                      } catch (ex) {
                        console.log("this is error", ex);
                      }
                    }
                  }
                }
                for (let i2 = 0; i2 < mainComposition.length; i2++) {
                  let mymainData = compositionData[mainComposition[i2]];
                  console.log(mainData, mymainData);
                  mainData.push(mymainData);
                }
                return mainData;
              });
            }
            function FormatFromConnections(linkers_1, compositionData_1, mainComposition_1) {
              return __awaiter(this, arguments, void 0, function* (linkers, compositionData, mainComposition, reverse = []) {
                let mainData = {};
                let connections = yield (0, _app__WEBPACK_IMPORTED_MODULE_2__.GetConnectionBulk)(linkers);
                let myConcepts = [];
                for (let i2 = 0; i2 < connections.length; i2++) {
                  myConcepts.push(connections[i2].toTheConceptId);
                  myConcepts.push(connections[i2].ofTheConceptId);
                  myConcepts.push(connections[i2].typeId);
                }
                yield (0, _app__WEBPACK_IMPORTED_MODULE_2__.GetConceptBulk)(myConcepts);
                connections.sort(function(x, y) {
                  return y.id - x.id;
                });
                for (let i2 = 0; i2 < connections.length; i2++) {
                  let reverseFlag = false;
                  if (reverse.includes(connections[i2].id)) {
                    reverseFlag = true;
                  }
                  if (reverseFlag == true) {
                    if (compositionData[connections[i2].ofTheConceptId] && compositionData[connections[i2].toTheConceptId]) {
                      let mydata = compositionData[connections[i2].toTheConceptId];
                      let linkerConcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_2__.GetTheConcept)(connections[i2].typeId);
                      let newData = mydata;
                      let key = Object.keys(newData)[0];
                      try {
                        let reverseCharater = linkerConcept.characterValue + "_reverse";
                        if (typeof newData === "string") {
                          newData = {};
                        }
                        if (Array.isArray(newData[key][reverseCharater])) {
                          newData[key][reverseCharater].push(compositionData[connections[i2].ofTheConceptId]);
                        } else {
                          if (typeof newData[key] === "string") {
                            newData[key] = {};
                          }
                          newData[key][reverseCharater] = [];
                          newData[key][reverseCharater].push(compositionData[connections[i2].ofTheConceptId]);
                        }
                      } catch (ex) {
                        console.log("this is error", ex);
                      }
                    }
                  } else {
                    if (compositionData[connections[i2].ofTheConceptId] && compositionData[connections[i2].toTheConceptId]) {
                      let mydata = compositionData[connections[i2].ofTheConceptId];
                      let linkerConcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_2__.GetTheConcept)(connections[i2].typeId);
                      let newData = mydata;
                      let key = Object.keys(newData)[0];
                      try {
                        if (typeof newData === "string") {
                          newData = {};
                        }
                        if (Array.isArray(newData[key][linkerConcept.characterValue])) {
                          newData[key][linkerConcept.characterValue].push(compositionData[connections[i2].toTheConceptId]);
                        } else {
                          if (typeof newData[key] === "string") {
                            newData[key] = {};
                          }
                          newData[key][linkerConcept.characterValue] = [];
                          newData[key][linkerConcept.characterValue].push(compositionData[connections[i2].toTheConceptId]);
                        }
                      } catch (ex) {
                        console.log("this is error", ex);
                      }
                    }
                  }
                }
                mainData = compositionData[mainComposition];
                return mainData;
              });
            }
          }
        ),
        /***/
        "./src/Services/Search/SearchWithTypeAndLinker.ts": (
          /*!********************************************************!*\
            !*** ./src/Services/Search/SearchWithTypeAndLinker.ts ***!
            \********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SearchWithTypeAndLinker: () => (
                /* binding */
                SearchWithTypeAndLinker
              ),
              /* harmony export */
              SearchWithTypeAndLinkerDataId: () => (
                /* binding */
                SearchWithTypeAndLinkerDataId
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var _GetCompositionBulk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../GetCompositionBulk */
              "./src/Services/GetCompositionBulk.ts"
            );
            var _SearchLinkMultiple__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./SearchLinkMultiple */
              "./src/Services/Search/SearchLinkMultiple.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function SearchWithTypeAndLinkerDataId(searchStructure_1, searchQuery_1) {
              return __awaiter(this, arguments, void 0, function* (searchStructure, searchQuery, token = "") {
                let result = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.SearchWithTypeAndLinkerApi)(searchStructure, searchQuery, token);
                let conceptIds = result.compositionIds;
                let connections = result.internalConnections;
                let linkers = result.linkers;
                let reverse = result.reverse;
                let mainCompositionIds = result.mainCompositionIds;
                let prefetchConnections = yield (0, _GetCompositionBulk__WEBPACK_IMPORTED_MODULE_1__.GetConnectionDataPrefetch)(linkers);
                let concepts = yield (0, _GetCompositionBulk__WEBPACK_IMPORTED_MODULE_1__.GetCompositionFromConnectionsWithDataIdInObject)(conceptIds, connections);
                let output = yield (0, _SearchLinkMultiple__WEBPACK_IMPORTED_MODULE_2__.FormatFromConnectionsAlteredArray)(prefetchConnections, concepts, conceptIds, mainCompositionIds, reverse);
                return output;
              });
            }
            function SearchWithTypeAndLinker(searchStructure_1, searchQuery_1) {
              return __awaiter(this, arguments, void 0, function* (searchStructure, searchQuery, token = "") {
                let result = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.SearchWithTypeAndLinkerApi)(searchStructure, searchQuery, token);
                let conceptIds = result.compositionIds;
                let connections = result.internalConnections;
                let linkers = result.linkers;
                let reverse = result.reverse;
                let mainCompositionIds = result.mainCompositionIds;
                let prefetchConnections = yield (0, _GetCompositionBulk__WEBPACK_IMPORTED_MODULE_1__.GetConnectionDataPrefetch)(linkers);
                let concepts = yield (0, _GetCompositionBulk__WEBPACK_IMPORTED_MODULE_1__.GetCompositionFromConnectionsInObject)(conceptIds, connections);
                let output = yield (0, _SearchLinkMultiple__WEBPACK_IMPORTED_MODULE_2__.FormatConceptsAndConnections)(prefetchConnections, concepts, mainCompositionIds, reverse);
                return output;
              });
            }
          }
        ),
        /***/
        "./src/Services/Security/GetRequestHeader.ts": (
          /*!***************************************************!*\
            !*** ./src/Services/Security/GetRequestHeader.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetOnlyTokenHeader: () => (
                /* binding */
                GetOnlyTokenHeader
              ),
              /* harmony export */
              GetRequestHeader: () => (
                /* binding */
                GetRequestHeader
              ),
              /* harmony export */
              GetRequestHeaderWithAuthorization: () => (
                /* binding */
                GetRequestHeaderWithAuthorization
              )
              /* harmony export */
            });
            var _DataStructures_Security_TokenStorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../DataStructures/Security/TokenStorage */
              "./src/DataStructures/Security/TokenStorage.ts"
            );
            function GetRequestHeader(contentType = "application/json", Accept = "application/json") {
              var headers = {
                "Content-Type": contentType,
                "Authorization": "Bearer " + _DataStructures_Security_TokenStorage__WEBPACK_IMPORTED_MODULE_0__.TokenStorage.BearerAccessToken,
                "Accept": Accept
              };
              return headers;
            }
            function GetRequestHeaderWithAuthorization(contentType = "application/json", token = "", Accept = "application/json") {
              if (token == "") {
                token = _DataStructures_Security_TokenStorage__WEBPACK_IMPORTED_MODULE_0__.TokenStorage.BearerAccessToken;
              }
              var headers = {
                "Content-Type": contentType,
                "Authorization": "Bearer " + token,
                "Accept": Accept
              };
              return headers;
            }
            function GetOnlyTokenHeader() {
              let token = _DataStructures_Security_TokenStorage__WEBPACK_IMPORTED_MODULE_0__.TokenStorage.BearerAccessToken;
              const myHeaders = new Headers();
              myHeaders.append("Authorization", "Bearer " + token);
              return myHeaders;
            }
          }
        ),
        /***/
        "./src/Services/SplitStrings.ts": (
          /*!**************************************!*\
            !*** ./src/Services/SplitStrings.ts ***!
            \**************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SplitStrings: () => (
                /* binding */
                SplitStrings
              )
              /* harmony export */
            });
            function SplitStrings(typeString) {
              const pos = typeString.lastIndexOf("_");
              let SplittedStrings = [];
              if (pos > 0) {
                let rest = typeString.substring(0, pos);
                let last = typeString.substring(pos + 1, typeString.length);
                SplittedStrings = [rest, last];
              } else {
                SplittedStrings = [typeString];
              }
              return SplittedStrings;
            }
          }
        ),
        /***/
        "./src/Services/UpdateComposition.ts": (
          /*!*******************************************!*\
            !*** ./src/Services/UpdateComposition.ts ***!
            \*******************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              "default": () => (
                /* binding */
                UpdateComposition
              )
              /* harmony export */
            });
            var _Helpers_UniqueInsert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Helpers/UniqueInsert */
              "./src/Helpers/UniqueInsert.ts"
            );
            var _Helpers_CheckIfExists__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Helpers/CheckIfExists */
              "./src/Helpers/CheckIfExists.ts"
            );
            var _Helpers_RemoveFromArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Helpers/RemoveFromArray */
              "./src/Helpers/RemoveFromArray.ts"
            );
            var _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ../Api/GetAllConnectionsOfComposition */
              "./src/Api/GetAllConnectionsOfComposition.ts"
            );
            var _GetTheConcept__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__2(
              /*! ./GetTheConcept */
              "./src/Services/GetTheConcept.ts"
            );
            var _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__2(
              /*! ./MakeTheInstanceConcept */
              "./src/Services/MakeTheInstanceConcept.ts"
            );
            var _CreateTheConnection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__2(
              /*! ./CreateTheConnection */
              "./src/Services/CreateTheConnection.ts"
            );
            var _DeleteConnection__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__2(
              /*! ./DeleteConnection */
              "./src/Services/DeleteConnection.ts"
            );
            var _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__2(
              /*! ../DataStructures/SyncData */
              "./src/DataStructures/SyncData.ts"
            );
            var _DataStructures_Composition_CompositionBinaryTree__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__2(
              /*! ../DataStructures/Composition/CompositionBinaryTree */
              "./src/DataStructures/Composition/CompositionBinaryTree.ts"
            );
            var _DataStructures_Composition_Composition__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__2(
              /*! ../DataStructures/Composition/Composition */
              "./src/DataStructures/Composition/Composition.ts"
            );
            var _Composition_CreateCompositionCache__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__2(
              /*! ./Composition/CreateCompositionCache */
              "./src/Services/Composition/CreateCompositionCache.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function UpdateComposition(patcherStructure) {
              return __awaiter(this, void 0, void 0, function* () {
                const userId = patcherStructure.userId;
                const sessionId = patcherStructure.sessionId;
                const accessId = patcherStructure.accessId;
                let connectionList = [];
                const conceptList = [];
                let composition = (0, _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_3__.CreateDefaultConcept)();
                let parentConcept = (0, _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_3__.CreateDefaultConcept)();
                const toDeleteConcepts = [];
                let compositionId = patcherStructure.compositionId;
                const ofTheConceptId = patcherStructure.ofTheCompositionId;
                let toDeleteConnections = [];
                if (compositionId < 0) {
                  let localConcept = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_5__["default"])(compositionId, userId);
                  if (localConcept.id > 0) {
                    compositionId = localConcept.id;
                  } else {
                    return null;
                  }
                }
                const connectionListString = yield (0, _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_4__.GetAllConnectionsOfComposition)(compositionId);
                connectionList = connectionListString;
                const conceptIdList = [];
                const compositionCache = new _DataStructures_Composition_Composition__WEBPACK_IMPORTED_MODULE_11__.Composition();
                const compositionList = [];
                compositionCache.id = compositionId;
                compositionCache.isUpdating();
                let allConcepts = [];
                for (let i2 = 0; i2 < connectionList.length; i2++) {
                  (0, _Helpers_UniqueInsert__WEBPACK_IMPORTED_MODULE_0__["default"])(compositionList, connectionList[i2].ofTheConceptId);
                  (0, _Helpers_UniqueInsert__WEBPACK_IMPORTED_MODULE_0__["default"])(conceptIdList, connectionList[i2].ofTheConceptId);
                  (0, _Helpers_UniqueInsert__WEBPACK_IMPORTED_MODULE_0__["default"])(conceptIdList, connectionList[i2].toTheConceptId);
                  allConcepts.push(connectionList[i2].ofTheConceptId);
                }
                compositionCache.subcompositions = compositionList;
                compositionCache.connections = connectionList;
                for (let i2 = 0; i2 < conceptIdList.length; i2++) {
                  const conceptString = yield (0, _GetTheConcept__WEBPACK_IMPORTED_MODULE_5__["default"])(conceptIdList[i2]);
                  const concept = conceptString;
                  if (compositionId == conceptIdList[i2]) {
                    composition = concept;
                  }
                  if (ofTheConceptId == conceptIdList[i2]) {
                    parentConcept = concept;
                  }
                  conceptList.push(concept);
                }
                const object = patcherStructure.patchObject;
                for (const key in object) {
                  let insertingConcept = (0, _CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_3__.CreateDefaultConcept)();
                  const value = object[key];
                  let localConcept = composition;
                  if (parentConcept.id > 0) {
                    localConcept = parentConcept;
                  }
                  if (Array.isArray(value) || typeof value == "object") {
                    insertingConcept = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_6__["default"])(key, "", true, composition.userId, 4, 999);
                    compositionCache.subcompositions.push(insertingConcept.id);
                    const ExistingConcepts = (0, _Helpers_CheckIfExists__WEBPACK_IMPORTED_MODULE_1__.CheckIfTypeConceptsExistsInArray)(conceptList, insertingConcept);
                    for (let i2 = 0; i2 < ExistingConcepts.length; i2++) {
                      if (ExistingConcepts[i2].id > 0) {
                        const deletingConnections = (0, _Helpers_CheckIfExists__WEBPACK_IMPORTED_MODULE_1__.CheckAllConnectionsConnectedInConnectionArray)(compositionCache.connections, ExistingConcepts[i2].id);
                        toDeleteConnections = toDeleteConnections.concat(deletingConnections);
                        toDeleteConcepts.push(ExistingConcepts[i2]);
                      }
                    }
                    yield (0, _Composition_CreateCompositionCache__WEBPACK_IMPORTED_MODULE_12__.CreateTheCompositionWithCache)(object[key], insertingConcept.id, insertingConcept.userId, composition.id, composition.userId, 4, 999, compositionCache);
                  } else {
                    insertingConcept = yield (0, _MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_6__["default"])(key, value, false, userId, accessId, sessionId);
                    const ExistingConcepts = (0, _Helpers_CheckIfExists__WEBPACK_IMPORTED_MODULE_1__.CheckIfTypeConceptsExistsInArray)(conceptList, insertingConcept);
                    for (let i2 = 0; i2 < ExistingConcepts.length; i2++) {
                      if (ExistingConcepts[i2].id > 0) {
                        const deletingConnections = (0, _Helpers_CheckIfExists__WEBPACK_IMPORTED_MODULE_1__.CheckAllConnectionsConnectedInConnectionArray)(compositionCache.connections, ExistingConcepts[i2].id);
                        toDeleteConnections = toDeleteConnections.concat(deletingConnections);
                        toDeleteConcepts.push(ExistingConcepts[i2]);
                      }
                    }
                  }
                  const connectionString = (0, _CreateTheConnection__WEBPACK_IMPORTED_MODULE_7__.createTheConnection)(localConcept.id, localConcept.userId, insertingConcept.id, composition.id);
                  const connection = connectionString;
                  conceptList.push(insertingConcept);
                  compositionCache.connections.push(connection);
                }
                for (let j = 0; j < toDeleteConnections.length; j++) {
                  (0, _Helpers_RemoveFromArray__WEBPACK_IMPORTED_MODULE_2__.RemoveConnectionFromList)(compositionCache.connections, toDeleteConnections[j]);
                  (0, _DeleteConnection__WEBPACK_IMPORTED_MODULE_8__.DeleteConnectionById)(toDeleteConnections[j].id);
                }
                for (let k = 0; k < toDeleteConcepts.length; k++) {
                  (0, _Helpers_RemoveFromArray__WEBPACK_IMPORTED_MODULE_2__.RemoveConceptFromList)(conceptList, toDeleteConcepts[k]);
                }
                compositionCache.concepts = compositionCache.concepts.concat(conceptList);
                compositionCache.mainConcept = composition;
                compositionCache.id = composition.id;
                yield compositionCache.updateCache();
                _DataStructures_Composition_CompositionBinaryTree__WEBPACK_IMPORTED_MODULE_10__.CompositionBinaryTree.addCompositionToTree(compositionCache);
                _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_9__.SyncData.SyncDataOnline();
                let x = compositionCache.GetDataCache();
                return x;
              });
            }
          }
        ),
        /***/
        "./src/Services/User/UserTranslation.ts": (
          /*!**********************************************!*\
            !*** ./src/Services/User/UserTranslation.ts ***!
            \**********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              AddGhostConcept: () => (
                /* binding */
                AddGhostConcept
              ),
              /* harmony export */
              GetUserGhostId: () => (
                /* binding */
                GetUserGhostId
              )
              /* harmony export */
            });
            var _Services_Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./../../Services/Local/CreateDefaultLConcept */
              "./src/Services/Local/CreateDefaultLConcept.ts"
            );
            var _DataStructures_User_UserBinaryTree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./../../DataStructures/User/UserBinaryTree */
              "./src/DataStructures/User/UserBinaryTree.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function GetUserGhostId(userId_1, ghostId_1) {
              return __awaiter(this, arguments, void 0, function* (userId, ghostId, sessionId = 999) {
                let userNode = yield _DataStructures_User_UserBinaryTree__WEBPACK_IMPORTED_MODULE_1__.UserBinaryTree.getNodeFromTree(userId, sessionId);
                console.log("this is the ghost id", userId, sessionId);
                let realConcept = (0, _Services_Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_0__.CreateDefaultLConcept)();
                if (userNode) {
                  for (let i2 = 0; i2 < userNode.value.length; i2++) {
                    let testConcept = userNode.value[i2];
                    if (testConcept.ghostId == ghostId) {
                      realConcept = testConcept;
                    }
                  }
                }
                return realConcept;
              });
            }
            function AddGhostConcept(concept_1, userId_1) {
              return __awaiter(this, arguments, void 0, function* (concept, userId, sessionId = 999) {
                _DataStructures_User_UserBinaryTree__WEBPACK_IMPORTED_MODULE_1__.UserBinaryTree.addConceptToTree(concept, userId, sessionId);
              });
            }
          }
        ),
        /***/
        "./src/Services/View/ViewInternalData.ts": (
          /*!***********************************************!*\
            !*** ./src/Services/View/ViewInternalData.ts ***!
            \***********************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              ViewInternalData: () => (
                /* binding */
                ViewInternalData
              )
              /* harmony export */
            });
            var _Api_View_ViewInternalDataApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../../Api/View/ViewInternalDataApi */
              "./src/Api/View/ViewInternalDataApi.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../../app */
              "./src/app.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function ViewInternalData(ids) {
              return __awaiter(this, void 0, void 0, function* () {
                var _a;
                try {
                  let connections = yield (0, _Api_View_ViewInternalDataApi__WEBPACK_IMPORTED_MODULE_0__.ViewInternalDataApi)(ids);
                  let output = [];
                  for (let i2 = 0; i2 < ids.length; i2++) {
                    let id = ids[i2];
                    let localConnections = connections[id];
                    if (id && localConnections) {
                      let concepts = [];
                      let formattedOutput = {};
                      for (let j = 0; j < localConnections.length; j++) {
                        if (!concepts.includes(localConnections[j].ofTheConceptId)) {
                          concepts.push(localConnections[j].ofTheConceptId);
                        }
                      }
                      let out = yield (0, _app__WEBPACK_IMPORTED_MODULE_1__.recursiveFetch)(id, localConnections, concepts);
                      formattedOutput.data = out;
                      formattedOutput.id = id;
                      output.push(formattedOutput);
                    } else {
                      let formattedOutput = {};
                      formattedOutput.id = id;
                      let concept = yield (0, _app__WEBPACK_IMPORTED_MODULE_1__.GetTheConcept)(id);
                      let noconn = {};
                      if (concept.type) {
                        noconn[(_a = concept === null || concept === void 0 ? void 0 : concept.type) === null || _a === void 0 ? void 0 : _a.characterValue] = concept.characterValue;
                        formattedOutput.data = noconn;
                        output.push(formattedOutput);
                      }
                    }
                  }
                  return output;
                } catch (err) {
                  throw err;
                }
              });
            }
          }
        ),
        /***/
        "./src/WrapperFunctions/DepenedencyObserver.ts": (
          /*!*****************************************************!*\
            !*** ./src/WrapperFunctions/DepenedencyObserver.ts ***!
            \*****************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              DependencyObserver: () => (
                /* binding */
                DependencyObserver
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Constants/FormatConstants */
              "./src/Constants/FormatConstants.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class DependencyObserver {
              constructor() {
                this.subscribers = [];
                this.mainConcept = 0;
                this.compositionIds = [];
                this.conceptIds = [];
                this.internalConnections = [];
                this.reverse = [];
                this.linkers = [];
                this.dependency = [];
                this.isDataLoaded = false;
                this.isUpdating = false;
                this.fetched = false;
                this.format = _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__.NORMAL;
              }
              /**
               * This function will be called when there is a need to listen to a certain type of concept that will update
               *  the ui.
               * @param id this is the type id which needs to be tracked
               */
              listenToEventType(id) {
                window.addEventListener(`${id}`, (event) => {
                  if (!this.isUpdating) {
                    this.isUpdating = true;
                    let that = this;
                    setTimeout(function() {
                      return __awaiter(this, void 0, void 0, function* () {
                        let myEvent = event;
                        if (!that.compositionIds.includes(myEvent === null || myEvent === void 0 ? void 0 : myEvent.detail)) {
                          that.compositionIds.unshift(myEvent === null || myEvent === void 0 ? void 0 : myEvent.detail);
                          that.listenToEvent(myEvent === null || myEvent === void 0 ? void 0 : myEvent.detail);
                        }
                        that.isUpdating = false;
                        yield that.bind();
                        that.notify();
                      });
                    }, 200);
                  } else {
                    console.log("rejected this");
                  }
                });
              }
              /**
               * This is the of the concept id that needs to be listened . If this is called. All the connections that are
               * created with of the concepts id with this passed id then the event is fired.
               *
               * @param id Of the concept id that needs to be listened.
               */
              listenToEvent(id) {
                window.addEventListener(`${id}`, (event) => {
                  console.log("this is listening after the event is fired", id, event);
                  if (!this.isUpdating) {
                    this.isUpdating = true;
                    let that = this;
                    setTimeout(function() {
                      return __awaiter(this, void 0, void 0, function* () {
                        let newConnection = yield _app__WEBPACK_IMPORTED_MODULE_0__.ConnectionData.GetConnectionByOfTheConceptAndType(id, id);
                        for (let i2 = 0; i2 < newConnection.length; i2++) {
                          yield _app__WEBPACK_IMPORTED_MODULE_0__.ConnectionData.GetConnection(newConnection[i2]).then((conn) => {
                            if (conn.typeId == that.mainConcept) {
                              if (!that.internalConnections.includes(conn.id)) {
                                that.internalConnections.push(conn.id);
                              }
                            } else {
                              if (!that.linkers.includes(conn.id)) {
                                that.linkers.push(conn.id);
                              }
                            }
                            if (!that.conceptIds.includes(conn.toTheConceptId)) {
                              that.conceptIds.push(conn.toTheConceptId);
                            }
                            if (!that.compositionIds.includes(conn.ofTheConceptId)) {
                              that.compositionIds.push(conn.ofTheConceptId);
                            }
                          });
                        }
                        that.isUpdating = false;
                        yield that.bind();
                        that.notify();
                      });
                    }, 200);
                  } else {
                    console.log("rejected this");
                  }
                });
              }
              /**
               * This function will bind the actual data to the widget or the function.
               */
              bind() {
                return __awaiter(this, void 0, void 0, function* () {
                  console.log("this is the old execute data");
                });
              }
              /**
               *
               * @param callback the function that needs to be called with the data.
               * @returns returns the callback with this data as the state.
               */
              subscribe(callback) {
                return __awaiter(this, void 0, void 0, function* () {
                  this.subscribers.push(callback);
                  console.log("again executing data");
                  yield this.bind();
                  return callback(this.data);
                });
              }
              /**
               *
               * @param callback function that you need to remove from the subscribers list.
               * @returns
               */
              unsubscribe(callback) {
                this.subscribers.filter((fn) => fn != callback);
                return this.subscribers.length;
              }
              /**
               * This function will call all the subscribers that are registered in this wrapper.
               */
              notify() {
                console.log("notifiers", this.subscribers);
                this.subscribers.map((subscriber) => {
                  console.log("notify");
                  subscriber(this.data);
                });
              }
            }
          }
        ),
        /***/
        "./src/WrapperFunctions/GetCompositionListObservable.ts": (
          /*!**************************************************************!*\
            !*** ./src/WrapperFunctions/GetCompositionListObservable.ts ***!
            \**************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetCompositionListListener: () => (
                /* binding */
                GetCompositionListListener
              ),
              /* harmony export */
              GetCompositionListObservable: () => (
                /* binding */
                GetCompositionListObservable
              )
              /* harmony export */
            });
            var _Api_GetAllConceptsByType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../Api/GetAllConceptsByType */
              "./src/Api/GetAllConceptsByType.ts"
            );
            var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _Services_GetComposition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/GetComposition */
              "./src/Services/GetComposition.ts"
            );
            var _DepenedencyObserver__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./DepenedencyObserver */
              "./src/WrapperFunctions/DepenedencyObserver.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class GetCompositionListObservable extends _DepenedencyObserver__WEBPACK_IMPORTED_MODULE_3__.DependencyObserver {
              constructor(compositionName, userId, inpage, page, format) {
                super();
                this.data = [];
                this.startPage = 0;
                this.compositionName = compositionName;
                this.userId = userId;
                this.inpage = inpage;
                this.page = page;
                this.format = format;
              }
              bind() {
                return __awaiter(this, void 0, void 0, function* () {
                  if (!this.isDataLoaded) {
                    console.log("again data loading mechanism");
                    var concept = yield (0, _app__WEBPACK_IMPORTED_MODULE_1__.GetConceptByCharacter)(this.compositionName);
                    if (concept) {
                      yield (0, _Api_GetAllConceptsByType__WEBPACK_IMPORTED_MODULE_0__.GetAllConceptsByType)(this.compositionName, this.userId);
                      console.log("getting the user data", concept.id, this.userId);
                      let conceptList = yield _app__WEBPACK_IMPORTED_MODULE_1__.ConceptsData.GetConceptsByTypeIdAndUser(concept.id, this.userId);
                      console.log("this is the concept list", conceptList);
                      var startPage = this.inpage * (this.page - 1);
                      for (var i2 = startPage; i2 < startPage + this.inpage; i2++) {
                        if (conceptList[i2]) {
                          this.compositionIds.push(conceptList[i2].id);
                        }
                      }
                    }
                    yield (0, _app__WEBPACK_IMPORTED_MODULE_1__.GetAllConnectionsOfCompositionBulk)(this.compositionIds);
                    this.isDataLoaded = true;
                    this.listenToEventType(concept.id);
                    for (let i3 = 0; i3 < this.compositionIds.length; i3++) {
                      console.log("list listen", this.compositionIds[i3]);
                      this.listenToEvent(this.compositionIds[i3]);
                    }
                  }
                  return yield this.build();
                });
              }
              build() {
                return __awaiter(this, void 0, void 0, function* () {
                  this.data = [];
                  console.log("this is building the data list");
                  if (this.format == _app__WEBPACK_IMPORTED_MODULE_1__.JUSTDATA) {
                    for (let i2 = this.startPage; i2 < this.startPage + this.inpage; i2++) {
                      if (this.compositionIds[i2]) {
                        let compositionJson = yield (0, _Services_GetComposition__WEBPACK_IMPORTED_MODULE_2__.GetCompositionFromMemory)(this.compositionIds[i2]);
                        this.data.push(compositionJson);
                      }
                    }
                  } else if (this.format == _app__WEBPACK_IMPORTED_MODULE_1__.DATAID) {
                    for (let i2 = this.startPage; i2 < this.startPage + this.inpage; i2++) {
                      if (this.compositionIds[i2]) {
                        let compositionJson = yield (0, _Services_GetComposition__WEBPACK_IMPORTED_MODULE_2__.GetCompositionWithIdFromMemory)(this.compositionIds[i2]);
                        this.data.push(compositionJson);
                      }
                    }
                  } else if (this.format == _app__WEBPACK_IMPORTED_MODULE_1__.NORMAL) {
                    for (let i2 = this.startPage; i2 < this.startPage + this.inpage; i2++) {
                      if (this.compositionIds[i2]) {
                        let compositionJson = yield (0, _Services_GetComposition__WEBPACK_IMPORTED_MODULE_2__.GetCompositionFromMemoryNormal)(this.compositionIds[i2]);
                        this.data.push(compositionJson);
                      }
                    }
                  } else {
                    for (let i2 = this.startPage; i2 < this.startPage + this.inpage; i2++) {
                      if (this.compositionIds[i2]) {
                        let compositionJson = yield (0, _Services_GetComposition__WEBPACK_IMPORTED_MODULE_2__.GetCompositionFromMemory)(this.compositionIds[i2]);
                        this.data.push(compositionJson);
                      }
                    }
                  }
                  return this.data;
                });
              }
            }
            function GetCompositionListListener(compositionName, userId, inpage, page, format = _app__WEBPACK_IMPORTED_MODULE_1__.JUSTDATA) {
              return new GetCompositionListObservable(compositionName, userId, inpage, page, format);
            }
          }
        ),
        /***/
        "./src/WrapperFunctions/GetCompositionObservable.ts": (
          /*!**********************************************************!*\
            !*** ./src/WrapperFunctions/GetCompositionObservable.ts ***!
            \**********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetCompositionListener: () => (
                /* binding */
                GetCompositionListener
              ),
              /* harmony export */
              GetCompositionObservable: () => (
                /* binding */
                GetCompositionObservable
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _Services_GetComposition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Services/GetComposition */
              "./src/Services/GetComposition.ts"
            );
            var _DepenedencyObserver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./DepenedencyObserver */
              "./src/WrapperFunctions/DepenedencyObserver.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class GetCompositionObservable extends _DepenedencyObserver__WEBPACK_IMPORTED_MODULE_2__.DependencyObserver {
              constructor(id, format = _app__WEBPACK_IMPORTED_MODULE_0__.JUSTDATA) {
                super();
                this.id = id;
                this.format = format;
              }
              bind() {
                return __awaiter(this, void 0, void 0, function* () {
                  if (!this.isDataLoaded) {
                    let conceptConnections = yield (0, _Services_GetComposition__WEBPACK_IMPORTED_MODULE_1__.GetCompositionById)(this.id);
                    this.mainConcept = this.id;
                    this.compositionIds = conceptConnections.compositionList;
                    let internalConnections = conceptConnections.connectionList;
                    for (let i2 = 0; i2 < internalConnections.length; i2++) {
                      this.internalConnections.push(internalConnections[i2].id);
                    }
                    this.isDataLoaded = true;
                    this.listenToEvent(this.mainConcept);
                  }
                  return yield this.build();
                });
              }
              build() {
                return __awaiter(this, void 0, void 0, function* () {
                  let latestConnectionList = [];
                  let latestConnectionIds = this.internalConnections;
                  for (let i2 = 0; i2 < latestConnectionIds.length; i2++) {
                    latestConnectionList.push(yield _app__WEBPACK_IMPORTED_MODULE_0__.ConnectionData.GetConnection(latestConnectionIds[i2]));
                  }
                  if (this.format == _app__WEBPACK_IMPORTED_MODULE_0__.JUSTDATA) {
                    console.log("this is the data for the build layer", latestConnectionList, this.mainConcept, this.internalConnections, this.compositionIds);
                    this.data = yield (0, _Services_GetComposition__WEBPACK_IMPORTED_MODULE_1__.RecursiveFetchBuildLayer)(this.mainConcept, latestConnectionList, this.compositionIds);
                  } else if (this.format == _app__WEBPACK_IMPORTED_MODULE_0__.DATAID) {
                    this.data = yield (0, _Services_GetComposition__WEBPACK_IMPORTED_MODULE_1__.RecursiveFetchBuildLayerDataId)(this.mainConcept, latestConnectionList, this.compositionIds);
                  } else if (this.format == _app__WEBPACK_IMPORTED_MODULE_0__.NORMAL) {
                    this.data = yield (0, _Services_GetComposition__WEBPACK_IMPORTED_MODULE_1__.RecursiveFetchBuildLayerNormal)(this.mainConcept, latestConnectionList, this.compositionIds);
                  } else {
                    this.data = yield (0, _Services_GetComposition__WEBPACK_IMPORTED_MODULE_1__.RecursiveFetchBuildLayer)(this.mainConcept, latestConnectionList, this.compositionIds);
                  }
                  return this.data;
                });
              }
            }
            function GetCompositionListener(id, format = _app__WEBPACK_IMPORTED_MODULE_0__.JUSTDATA) {
              return new GetCompositionObservable(id, format);
            }
          }
        ),
        /***/
        "./src/WrapperFunctions/GetLinkObservable.ts": (
          /*!***************************************************!*\
            !*** ./src/WrapperFunctions/GetLinkObservable.ts ***!
            \***************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              GetLinkListener: () => (
                /* binding */
                GetLinkListener
              ),
              /* harmony export */
              GetLinkObservable: () => (
                /* binding */
                GetLinkObservable
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Constants/FormatConstants */
              "./src/Constants/FormatConstants.ts"
            );
            var _Services_GetComposition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ../Services/GetComposition */
              "./src/Services/GetComposition.ts"
            );
            var _DepenedencyObserver__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./DepenedencyObserver */
              "./src/WrapperFunctions/DepenedencyObserver.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class GetLinkObservable extends _DepenedencyObserver__WEBPACK_IMPORTED_MODULE_3__.DependencyObserver {
              /**
               *
               * @param id this is the id whose links need to be found
               * @param linker this is the type connection that is connected to the mainConcept(id)
               * @param inpage number of outputs that has to be displayed
               * @param page the page which needs to be displayed as per the inpage parameter
               * @param format the format in which the output should be displayed (NORMAL, DATAID,JUSTDATA,DATAIDDATE)
               */
              constructor(id, linker, inpage, page, format) {
                super();
                this.connections = [];
                this.data = [];
                this.mainConcept = id;
                this.linker = linker;
                this.inpage = inpage;
                this.page = page;
                this.format = format;
              }
              bind() {
                return __awaiter(this, void 0, void 0, function* () {
                  var _a;
                  if (!this.isDataLoaded) {
                    let concept = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetTheConcept)(this.mainConcept);
                    let linkString = ((_a = concept.type) === null || _a === void 0 ? void 0 : _a.characterValue) + "_s_" + this.linker;
                    let relatedConceptString = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetConceptByCharacterAndType)(linkString, 16);
                    let relatedConcept = relatedConceptString;
                    if (relatedConcept.id > 0) {
                      let connectionsString = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetConnectionOfTheConcept)(relatedConcept.id, concept.id, concept.userId, this.inpage, this.page);
                      this.connections = connectionsString;
                      var prefetch = [];
                      for (var i2 = 0; i2 < this.connections.length; i2++) {
                        prefetch.push(this.connections[i2].toTheConceptId);
                        this.listenToEvent(this.connections[i2].toTheConceptId);
                      }
                      yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetAllConnectionsOfCompositionBulk)(prefetch);
                    }
                    this.isDataLoaded = true;
                    this.listenToEvent(this.mainConcept);
                  }
                  return yield this.build();
                });
              }
              build() {
                return __awaiter(this, void 0, void 0, function* () {
                  for (var i2 = 0; i2 < this.connections.length; i2++) {
                    let toConceptId = this.connections[i2].toTheConceptId;
                    let toConcept = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetTheConcept)(toConceptId);
                    console.log("this is the format", this.format);
                    if (this.format == _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__.NORMAL) {
                      let newComposition = yield (0, _Services_GetComposition__WEBPACK_IMPORTED_MODULE_2__.GetCompositionWithIdFromMemory)(toConcept.id);
                      this.data.push(newComposition);
                    } else if (this.format == _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__.JUSTDATA) {
                      let newComposition = yield (0, _Services_GetComposition__WEBPACK_IMPORTED_MODULE_2__.GetCompositionFromMemory)(toConcept.id);
                      this.data.push(newComposition);
                    } else if (this.format == _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__.DATAIDDATE) {
                      let newComposition = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetCompositionWithIdAndDateFromMemory)(toConcept.id);
                      this.data.push(newComposition);
                    } else {
                      let newComposition = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetCompositionWithIdAndDateFromMemory)(toConcept.id);
                      this.data.push(newComposition);
                    }
                  }
                  return this.data;
                });
              }
            }
            function GetLinkListener(id, linker, inpage, page, format = _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__.NORMAL) {
              return new GetLinkObservable(id, linker, inpage, page, format);
            }
          }
        ),
        /***/
        "./src/WrapperFunctions/RecursiveSearchObservable.ts": (
          /*!***********************************************************!*\
            !*** ./src/WrapperFunctions/RecursiveSearchObservable.ts ***!
            \***********************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              RecursiveSearchListener: () => (
                /* binding */
                RecursiveSearchListener
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Constants/FormatConstants */
              "./src/Constants/FormatConstants.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class RecursiveSearchObservable extends _app__WEBPACK_IMPORTED_MODULE_0__.DependencyObserver {
              /**
               *
               * @param id this is the id whose links need to be found
               * @param linker this is the type connection that is connected to the mainConcept(id)
               * @param inpage number of outputs that has to be displayed
               * @param page the page which needs to be displayed as per the inpage parameter
               * @param format the format in which the output should be displayed (RAW, undefined)
               */
              constructor(id, linkers, textSearch = "", format) {
                super();
                this.searchText = "";
                this.connections = [];
                this.data = [];
                this.mainConcept = id;
                this.searchLinkers = linkers;
                this.textSearch = textSearch;
                if (format)
                  this.format = format;
              }
              bind() {
                return __awaiter(this, void 0, void 0, function* () {
                  if (!this.isDataLoaded) {
                    const result = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.RecursiveSearchApiRaw)(this.mainConcept, this.searchLinkers, this.textSearch);
                    this.compositionIds = result.compositionIds || [];
                    this.internalConnections = result.internalConnections || [];
                    const externalConnections = result.externalConnections || [];
                    const internalConnections = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetConnectionBulk)(this.internalConnections);
                    this.connections = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetConnectionBulk)(externalConnections);
                    var prefetch = [];
                    for (var i2 = 0; i2 < this.connections.length; i2++) {
                      prefetch.push(this.connections[i2].toTheConceptId);
                      this.listenToEvent(this.connections[i2].toTheConceptId);
                    }
                    for (var i2 = 0; i2 < internalConnections.length; i2++) {
                      prefetch.push(internalConnections[i2].toTheConceptId);
                      this.listenToEvent(internalConnections[i2].toTheConceptId);
                    }
                    yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetAllConnectionsOfCompositionBulk)(prefetch);
                    this.isDataLoaded = true;
                    this.listenToEvent(this.mainConcept);
                  }
                  return yield this.build();
                });
              }
              build() {
                return __awaiter(this, void 0, void 0, function* () {
                  if (this.format && this.format == _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__.RAW) {
                    this.data = {
                      compositionIds: this.compositionIds,
                      internalConnections: this.internalConnections,
                      externalConnections: this.connections
                    };
                  } else {
                    this.data = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.GetCompositionFromConnectionsWithDataId)(this.compositionIds, this.internalConnections);
                  }
                  return this.data;
                });
              }
            }
            function RecursiveSearchListener(id, linkers, searchText = "", format) {
              return new RecursiveSearchObservable(id, linkers, searchText, format);
            }
          }
        ),
        /***/
        "./src/WrapperFunctions/SearchLinkMultipleAllObservable.ts": (
          /*!*****************************************************************!*\
            !*** ./src/WrapperFunctions/SearchLinkMultipleAllObservable.ts ***!
            \*****************************************************************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              SearchLinkMultipleAllObservable: () => (
                /* binding */
                SearchLinkMultipleAllObservable
              ),
              /* harmony export */
              searchLinkMultipleListener: () => (
                /* binding */
                searchLinkMultipleListener
              )
              /* harmony export */
            });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ../app */
              "./src/app.ts"
            );
            var _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ../Constants/FormatConstants */
              "./src/Constants/FormatConstants.ts"
            );
            var _DepenedencyObserver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./DepenedencyObserver */
              "./src/WrapperFunctions/DepenedencyObserver.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            class SearchLinkMultipleAllObservable extends _DepenedencyObserver__WEBPACK_IMPORTED_MODULE_2__.DependencyObserver {
              constructor(searchQuery, token, format = _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__.DATAID) {
                super();
                this.searchQuery = [];
                this.format = _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__.DATAID;
                this.searchQuery = searchQuery;
                this.format = format;
              }
              bind() {
                return __awaiter(this, void 0, void 0, function* () {
                  this.data = yield (0, _app__WEBPACK_IMPORTED_MODULE_0__.SearchLinkMultipleAll)(this.searchQuery, "", this, this.format);
                  this.mainConcept = this.searchQuery[0].composition;
                  this.listenToEvent(this.mainConcept);
                  console.log("this is the data", this.data);
                  return this.data;
                });
              }
            }
            function searchLinkMultipleListener(searchQueries, token, format = _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_1__.DATAID) {
              return new SearchLinkMultipleAllObservable(searchQueries, token !== null && token !== void 0 ? token : "", format);
            }
          }
        ),
        /***/
        "./src/app.ts": (
          /*!********************!*\
            !*** ./src/app.ts ***!
            \********************/
          /***/
          (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
            __webpack_require__2.r(__webpack_exports__2);
            __webpack_require__2.d(__webpack_exports__2, {
              /* harmony export */
              ADMIN: () => (
                /* reexport safe */
                _Constants_AccessConstants__WEBPACK_IMPORTED_MODULE_66__.ADMIN
              ),
              /* harmony export */
              AddGhostConcept: () => (
                /* reexport safe */
                _Services_User_UserTranslation__WEBPACK_IMPORTED_MODULE_50__.AddGhostConcept
              ),
              /* harmony export */
              BaseUrl: () => (
                /* reexport safe */
                _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_97__.BaseUrl
              ),
              /* harmony export */
              BinaryTree: () => (
                /* reexport safe */
                _DataStructures_BinaryTree__WEBPACK_IMPORTED_MODULE_82__.BinaryTree
              ),
              /* harmony export */
              Composition: () => (
                /* reexport safe */
                _DataStructures_Composition_Composition__WEBPACK_IMPORTED_MODULE_86__.Composition
              ),
              /* harmony export */
              CompositionBinaryTree: () => (
                /* reexport safe */
                _DataStructures_Composition_CompositionBinaryTree__WEBPACK_IMPORTED_MODULE_87__.CompositionBinaryTree
              ),
              /* harmony export */
              CompositionNode: () => (
                /* reexport safe */
                _DataStructures_Composition_CompositionNode__WEBPACK_IMPORTED_MODULE_88__.CompositionNode
              ),
              /* harmony export */
              Concept: () => (
                /* reexport safe */
                _DataStructures_Concept__WEBPACK_IMPORTED_MODULE_76__.Concept
              ),
              /* harmony export */
              ConceptsData: () => (
                /* reexport safe */
                _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_80__.ConceptsData
              ),
              /* harmony export */
              Connection: () => (
                /* reexport safe */
                _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_79__.Connection
              ),
              /* harmony export */
              ConnectionData: () => (
                /* reexport safe */
                _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_81__.ConnectionData
              ),
              /* harmony export */
              CreateComposition: () => (
                /* reexport safe */
                _Services_CreateTheComposition__WEBPACK_IMPORTED_MODULE_9__["default"]
              ),
              /* harmony export */
              CreateConnectionBetweenTwoConcepts: () => (
                /* reexport safe */
                _Services_CreateConnectionBetweenTwoConcepts__WEBPACK_IMPORTED_MODULE_11__.CreateConnectionBetweenTwoConcepts
              ),
              /* harmony export */
              CreateConnectionBetweenTwoConceptsGeneral: () => (
                /* reexport safe */
                _Services_CreateConnectionBetweenTwoConcepts__WEBPACK_IMPORTED_MODULE_11__.CreateConnectionBetweenTwoConceptsGeneral
              ),
              /* harmony export */
              CreateConnectionBetweenTwoConceptsLocal: () => (
                /* reexport safe */
                _Services_Local_CreateConnectionBetweenTwoConceptsLocal__WEBPACK_IMPORTED_MODULE_60__.CreateConnectionBetweenTwoConceptsLocal
              ),
              /* harmony export */
              CreateDefaultConcept: () => (
                /* reexport safe */
                _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_19__.CreateDefaultConcept
              ),
              /* harmony export */
              CreateDefaultLConcept: () => (
                /* reexport safe */
                _Services_Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_47__.CreateDefaultLConcept
              ),
              /* harmony export */
              CreateSession: () => (
                /* reexport safe */
                _Api_Session_CreateSession__WEBPACK_IMPORTED_MODULE_42__.CreateSession
              ),
              /* harmony export */
              CreateSessionVisit: () => (
                /* reexport safe */
                _Api_Session_CreateSessionVisit__WEBPACK_IMPORTED_MODULE_43__.CreateSessionVisit
              ),
              /* harmony export */
              CreateTheCompositionLocal: () => (
                /* reexport safe */
                _Services_Local_CreateTheCompositionLocal__WEBPACK_IMPORTED_MODULE_10__.CreateTheCompositionLocal
              ),
              /* harmony export */
              CreateTheCompositionWithCache: () => (
                /* reexport safe */
                _Services_Composition_CreateCompositionCache__WEBPACK_IMPORTED_MODULE_46__.CreateTheCompositionWithCache
              ),
              /* harmony export */
              CreateTheConnection: () => (
                /* reexport safe */
                _Services_CreateTheConnection__WEBPACK_IMPORTED_MODULE_16__.createTheConnection
              ),
              /* harmony export */
              CreateTheConnectionGeneral: () => (
                /* reexport safe */
                _Services_CreateTheConnectionGeneral__WEBPACK_IMPORTED_MODULE_48__.CreateTheConnectionGeneral
              ),
              /* harmony export */
              CreateTheConnectionLocal: () => (
                /* reexport safe */
                _Services_Local_CreateTheConnectionLocal__WEBPACK_IMPORTED_MODULE_49__.CreateTheConnectionLocal
              ),
              /* harmony export */
              DATAID: () => (
                /* reexport safe */
                _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_65__.DATAID
              ),
              /* harmony export */
              DATAIDDATE: () => (
                /* reexport safe */
                _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_65__.DATAIDDATE
              ),
              /* harmony export */
              DelayFunctionExecution: () => (
                /* reexport safe */
                _Services_Common_DelayFunction__WEBPACK_IMPORTED_MODULE_63__.DelayFunctionExecution
              ),
              /* harmony export */
              DeleteConceptById: () => (
                /* reexport safe */
                _Services_DeleteConcept__WEBPACK_IMPORTED_MODULE_24__.DeleteConceptById
              ),
              /* harmony export */
              DeleteConceptLocal: () => (
                /* reexport safe */
                _Services_Local_DeleteConceptLocal__WEBPACK_IMPORTED_MODULE_61__.DeleteConceptLocal
              ),
              /* harmony export */
              DeleteConnectionById: () => (
                /* reexport safe */
                _Services_DeleteConnection__WEBPACK_IMPORTED_MODULE_25__.DeleteConnectionById
              ),
              /* harmony export */
              DependencyObserver: () => (
                /* reexport safe */
                _WrapperFunctions_DepenedencyObserver__WEBPACK_IMPORTED_MODULE_68__.DependencyObserver
              ),
              /* harmony export */
              FilterSearch: () => (
                /* reexport safe */
                _DataStructures_FilterSearch__WEBPACK_IMPORTED_MODULE_91__.FilterSearch
              ),
              /* harmony export */
              FormatFromConnections: () => (
                /* reexport safe */
                _Services_Search_SearchLinkMultiple__WEBPACK_IMPORTED_MODULE_51__.FormatFromConnections
              ),
              /* harmony export */
              FormatFromConnectionsAltered: () => (
                /* reexport safe */
                _Services_Search_SearchLinkMultiple__WEBPACK_IMPORTED_MODULE_51__.FormatFromConnectionsAltered
              ),
              /* harmony export */
              GetAllConnectionsOfComposition: () => (
                /* reexport safe */
                _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_6__.GetAllConnectionsOfComposition
              ),
              /* harmony export */
              GetAllConnectionsOfCompositionBulk: () => (
                /* reexport safe */
                _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_33__.GetAllConnectionsOfCompositionBulk
              ),
              /* harmony export */
              GetComposition: () => (
                /* reexport safe */
                _Services_GetComposition__WEBPACK_IMPORTED_MODULE_7__.GetComposition
              ),
              /* harmony export */
              GetCompositionBulk: () => (
                /* reexport safe */
                _Services_GetCompositionBulk__WEBPACK_IMPORTED_MODULE_30__.GetCompositionBulk
              ),
              /* harmony export */
              GetCompositionBulkWithDataId: () => (
                /* reexport safe */
                _Services_GetCompositionBulk__WEBPACK_IMPORTED_MODULE_30__.GetCompositionBulkWithDataId
              ),
              /* harmony export */
              GetCompositionFromConnectionsWithDataId: () => (
                /* reexport safe */
                _Services_GetCompositionBulk__WEBPACK_IMPORTED_MODULE_30__.GetCompositionFromConnectionsWithDataId
              ),
              /* harmony export */
              GetCompositionFromConnectionsWithDataIdInObject: () => (
                /* reexport safe */
                _Services_GetCompositionBulk__WEBPACK_IMPORTED_MODULE_30__.GetCompositionFromConnectionsWithDataIdInObject
              ),
              /* harmony export */
              GetCompositionFromConnectionsWithDataIdIndex: () => (
                /* reexport safe */
                _Services_GetCompositionBulk__WEBPACK_IMPORTED_MODULE_30__.GetCompositionFromConnectionsWithDataIdIndex
              ),
              /* harmony export */
              GetCompositionFromConnectionsWithIndex: () => (
                /* reexport safe */
                _Services_GetCompositionBulk__WEBPACK_IMPORTED_MODULE_30__.GetCompositionFromConnectionsWithIndex
              ),
              /* harmony export */
              GetCompositionList: () => (
                /* reexport safe */
                _Services_GetCompositionList__WEBPACK_IMPORTED_MODULE_4__.GetCompositionList
              ),
              /* harmony export */
              GetCompositionListAll: () => (
                /* reexport safe */
                _Services_GetCompositionList__WEBPACK_IMPORTED_MODULE_4__.GetCompositionListAll
              ),
              /* harmony export */
              GetCompositionListAllWithId: () => (
                /* reexport safe */
                _Services_GetCompositionList__WEBPACK_IMPORTED_MODULE_4__.GetCompositionListAllWithId
              ),
              /* harmony export */
              GetCompositionListListener: () => (
                /* reexport safe */
                _WrapperFunctions_GetCompositionListObservable__WEBPACK_IMPORTED_MODULE_71__.GetCompositionListListener
              ),
              /* harmony export */
              GetCompositionListLocal: () => (
                /* reexport safe */
                _Services_Local_GetCompositionListLocal__WEBPACK_IMPORTED_MODULE_5__.GetCompositionListLocal
              ),
              /* harmony export */
              GetCompositionListLocalWithId: () => (
                /* reexport safe */
                _Services_Local_GetCompositionListLocal__WEBPACK_IMPORTED_MODULE_5__.GetCompositionListLocalWithId
              ),
              /* harmony export */
              GetCompositionListWithId: () => (
                /* reexport safe */
                _Services_GetCompositionList__WEBPACK_IMPORTED_MODULE_4__.GetCompositionListWithId
              ),
              /* harmony export */
              GetCompositionListWithIdUpdated: () => (
                /* reexport safe */
                _Services_GetCompositionList__WEBPACK_IMPORTED_MODULE_4__.GetCompositionListWithIdUpdated
              ),
              /* harmony export */
              GetCompositionListener: () => (
                /* reexport safe */
                _WrapperFunctions_GetCompositionObservable__WEBPACK_IMPORTED_MODULE_70__.GetCompositionListener
              ),
              /* harmony export */
              GetCompositionLocal: () => (
                /* reexport safe */
                _Services_Local_GetCompositionLocal__WEBPACK_IMPORTED_MODULE_8__.GetCompositionLocal
              ),
              /* harmony export */
              GetCompositionLocalWithId: () => (
                /* reexport safe */
                _Services_Local_GetCompositionLocal__WEBPACK_IMPORTED_MODULE_8__.GetCompositionLocalWithId
              ),
              /* harmony export */
              GetCompositionWithAllIds: () => (
                /* reexport safe */
                _Services_GetComposition__WEBPACK_IMPORTED_MODULE_7__.GetCompositionWithAllIds
              ),
              /* harmony export */
              GetCompositionWithCache: () => (
                /* reexport safe */
                _Services_Composition_CompositionCache__WEBPACK_IMPORTED_MODULE_41__.GetCompositionWithCache
              ),
              /* harmony export */
              GetCompositionWithDataIdBulk: () => (
                /* reexport safe */
                _Services_Composition_CompositionCache__WEBPACK_IMPORTED_MODULE_41__.GetCompositionWithDataIdBulk
              ),
              /* harmony export */
              GetCompositionWithDataIdWithCache: () => (
                /* reexport safe */
                _Services_Composition_CompositionCache__WEBPACK_IMPORTED_MODULE_41__.GetCompositionWithDataIdWithCache
              ),
              /* harmony export */
              GetCompositionWithId: () => (
                /* reexport safe */
                _Services_GetComposition__WEBPACK_IMPORTED_MODULE_7__.GetCompositionWithId
              ),
              /* harmony export */
              GetCompositionWithIdAndDateFromMemory: () => (
                /* reexport safe */
                _Services_GetComposition__WEBPACK_IMPORTED_MODULE_7__.GetCompositionWithIdAndDateFromMemory
              ),
              /* harmony export */
              GetConceptBulk: () => (
                /* reexport safe */
                _Api_GetConceptBulk__WEBPACK_IMPORTED_MODULE_31__.GetConceptBulk
              ),
              /* harmony export */
              GetConceptByCharacter: () => (
                /* reexport safe */
                _Services_GetConceptByCharacter__WEBPACK_IMPORTED_MODULE_17__["default"]
              ),
              /* harmony export */
              GetConceptByCharacterAndCategoryLocal: () => (
                /* reexport safe */
                _Services_Local_GetConceptByCharacterLocal__WEBPACK_IMPORTED_MODULE_55__.GetConceptByCharacterAndCategoryLocal
              ),
              /* harmony export */
              GetConceptByCharacterAndType: () => (
                /* reexport safe */
                _Api_GetConceptByCharacterAndType__WEBPACK_IMPORTED_MODULE_64__.GetConceptByCharacterAndType
              ),
              /* harmony export */
              GetConnectionBetweenTwoConceptsLinker: () => (
                /* reexport safe */
                _Services_GetConnectionBetweenTwoConceptsLinker__WEBPACK_IMPORTED_MODULE_62__.GetConnectionBetweenTwoConceptsLinker
              ),
              /* harmony export */
              GetConnectionBulk: () => (
                /* reexport safe */
                _Api_GetConnectionBulk__WEBPACK_IMPORTED_MODULE_32__.GetConnectionBulk
              ),
              /* harmony export */
              GetConnectionById: () => (
                /* reexport safe */
                _Services_GetConnections__WEBPACK_IMPORTED_MODULE_27__.GetConnectionById
              ),
              /* harmony export */
              GetConnectionDataPrefetch: () => (
                /* reexport safe */
                _Services_GetCompositionBulk__WEBPACK_IMPORTED_MODULE_30__.GetConnectionDataPrefetch
              ),
              /* harmony export */
              GetConnectionOfTheConcept: () => (
                /* reexport safe */
                _Api_GetConnectionOfTheConcept__WEBPACK_IMPORTED_MODULE_35__.GetConnectionOfTheConcept
              ),
              /* harmony export */
              GetLink: () => (
                /* reexport safe */
                _Services_GetLink__WEBPACK_IMPORTED_MODULE_18__.GetLink
              ),
              /* harmony export */
              GetLinkListener: () => (
                /* reexport safe */
                _WrapperFunctions_GetLinkObservable__WEBPACK_IMPORTED_MODULE_73__.GetLinkListener
              ),
              /* harmony export */
              GetLinkRaw: () => (
                /* reexport safe */
                _Services_GetLink__WEBPACK_IMPORTED_MODULE_18__.GetLinkRaw
              ),
              /* harmony export */
              GetLinkerConnectionFromConcepts: () => (
                /* reexport safe */
                _Services_GetLinkerConnectionFromConcept__WEBPACK_IMPORTED_MODULE_23__.GetLinkerConnectionFromConcepts
              ),
              /* harmony export */
              GetLinkerConnectionToConcepts: () => (
                /* reexport safe */
                _Services_GetLinkerConnectionFromConcept__WEBPACK_IMPORTED_MODULE_23__.GetLinkerConnectionToConcepts
              ),
              /* harmony export */
              GetRelation: () => (
                /* reexport safe */
                _Services_GetRelation__WEBPACK_IMPORTED_MODULE_44__.GetRelation
              ),
              /* harmony export */
              GetRelationLocal: () => (
                /* reexport safe */
                _Services_Local_GetRelationLocal__WEBPACK_IMPORTED_MODULE_54__.GetRelationLocal
              ),
              /* harmony export */
              GetRelationRaw: () => (
                /* reexport safe */
                _Services_GetRelation__WEBPACK_IMPORTED_MODULE_44__.GetRelationRaw
              ),
              /* harmony export */
              GetTheConcept: () => (
                /* reexport safe */
                _Services_GetTheConcept__WEBPACK_IMPORTED_MODULE_12__["default"]
              ),
              /* harmony export */
              GetTheConceptLocal: () => (
                /* reexport safe */
                _Services_Local_GetTheConceptLocal__WEBPACK_IMPORTED_MODULE_52__.GetTheConceptLocal
              ),
              /* harmony export */
              GetUserGhostId: () => (
                /* reexport safe */
                _Services_User_UserTranslation__WEBPACK_IMPORTED_MODULE_50__.GetUserGhostId
              ),
              /* harmony export */
              JUSTDATA: () => (
                /* reexport safe */
                _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_65__.JUSTDATA
              ),
              /* harmony export */
              LConcept: () => (
                /* reexport safe */
                _DataStructures_Local_LConcept__WEBPACK_IMPORTED_MODULE_77__.LConcept
              ),
              /* harmony export */
              LConnection: () => (
                /* reexport safe */
                _DataStructures_Local_LConnection__WEBPACK_IMPORTED_MODULE_78__.LConnection
              ),
              /* harmony export */
              LocalConceptsData: () => (
                /* reexport safe */
                _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_93__.LocalConceptsData
              ),
              /* harmony export */
              LocalSyncData: () => (
                /* reexport safe */
                _DataStructures_Local_LocalSyncData__WEBPACK_IMPORTED_MODULE_89__.LocalSyncData
              ),
              /* harmony export */
              LoginToBackend: () => (
                /* reexport safe */
                _Api_Login__WEBPACK_IMPORTED_MODULE_34__.LoginToBackend
              ),
              /* harmony export */
              MakeTheInstanceConcept: () => (
                /* reexport safe */
                _Services_MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_13__["default"]
              ),
              /* harmony export */
              MakeTheInstanceConceptLocal: () => (
                /* reexport safe */
                _Services_Local_MakeTheInstanceConceptLocal__WEBPACK_IMPORTED_MODULE_14__.MakeTheInstanceConceptLocal
              ),
              /* harmony export */
              MakeTheTimestamp: () => (
                /* reexport safe */
                _Services_MakeTheTimestamp__WEBPACK_IMPORTED_MODULE_28__.MakeTheTimestamp
              ),
              /* harmony export */
              MakeTheTypeConcept: () => (
                /* reexport safe */
                _Services_MakeTheTypeConcept__WEBPACK_IMPORTED_MODULE_21__.MakeTheTypeConcept
              ),
              /* harmony export */
              MakeTheTypeConceptApi: () => (
                /* reexport safe */
                _Api_MakeTheTypeConceptApi__WEBPACK_IMPORTED_MODULE_22__.MakeTheTypeConceptApi
              ),
              /* harmony export */
              MakeTheTypeConceptLocal: () => (
                /* reexport safe */
                _Services_Local_MakeTheTypeLocal__WEBPACK_IMPORTED_MODULE_20__.MakeTheTypeConceptLocal
              ),
              /* harmony export */
              NORMAL: () => (
                /* reexport safe */
                _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_65__.NORMAL
              ),
              /* harmony export */
              PRIVATE: () => (
                /* reexport safe */
                _Constants_AccessConstants__WEBPACK_IMPORTED_MODULE_66__.PRIVATE
              ),
              /* harmony export */
              PUBLIC: () => (
                /* reexport safe */
                _Constants_AccessConstants__WEBPACK_IMPORTED_MODULE_66__.PUBLIC
              ),
              /* harmony export */
              PatcherStructure: () => (
                /* reexport safe */
                _DataStructures_PatcherStructure__WEBPACK_IMPORTED_MODULE_84__.PatcherStructure
              ),
              /* harmony export */
              RAW: () => (
                /* reexport safe */
                _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_65__.RAW
              ),
              /* harmony export */
              RecursiveSearchApi: () => (
                /* reexport safe */
                _Api_RecursiveSearch__WEBPACK_IMPORTED_MODULE_29__.RecursiveSearchApi
              ),
              /* harmony export */
              RecursiveSearchApiNewRawFullLinker: () => (
                /* reexport safe */
                _Api_RecursiveSearch__WEBPACK_IMPORTED_MODULE_29__.RecursiveSearchApiNewRawFullLinker
              ),
              /* harmony export */
              RecursiveSearchApiRaw: () => (
                /* reexport safe */
                _Api_RecursiveSearch__WEBPACK_IMPORTED_MODULE_29__.RecursiveSearchApiRaw
              ),
              /* harmony export */
              RecursiveSearchApiRawFullLinker: () => (
                /* reexport safe */
                _Api_RecursiveSearch__WEBPACK_IMPORTED_MODULE_29__.RecursiveSearchApiRawFullLinker
              ),
              /* harmony export */
              RecursiveSearchListener: () => (
                /* reexport safe */
                _WrapperFunctions_RecursiveSearchObservable__WEBPACK_IMPORTED_MODULE_74__.RecursiveSearchListener
              ),
              /* harmony export */
              SearchAllConcepts: () => (
                /* reexport safe */
                _Api_Search_Search__WEBPACK_IMPORTED_MODULE_39__.SearchAllConcepts
              ),
              /* harmony export */
              SearchLinkInternal: () => (
                /* reexport safe */
                _Services_Search_SearchLinkInternal__WEBPACK_IMPORTED_MODULE_59__.SearchLinkInternal
              ),
              /* harmony export */
              SearchLinkMultipleAll: () => (
                /* reexport safe */
                _Services_Search_SearchLinkMultiple__WEBPACK_IMPORTED_MODULE_51__.SearchLinkMultipleAll
              ),
              /* harmony export */
              SearchLinkMultipleAllObservable: () => (
                /* reexport safe */
                _WrapperFunctions_SearchLinkMultipleAllObservable__WEBPACK_IMPORTED_MODULE_69__.SearchLinkMultipleAllObservable
              ),
              /* harmony export */
              SearchLinkMultipleApi: () => (
                /* reexport safe */
                _Api_Search_SearchLinkMultipleApi__WEBPACK_IMPORTED_MODULE_2__.SearchLinkMultipleApi
              ),
              /* harmony export */
              SearchQuery: () => (
                /* reexport safe */
                _DataStructures_SearchQuery__WEBPACK_IMPORTED_MODULE_83__.SearchQuery
              ),
              /* harmony export */
              SearchStructure: () => (
                /* reexport safe */
                _DataStructures_Search_SearchStructure__WEBPACK_IMPORTED_MODULE_92__.SearchStructure
              ),
              /* harmony export */
              SearchWithLinker: () => (
                /* reexport safe */
                _Api_Search_SearchWithLinker__WEBPACK_IMPORTED_MODULE_40__.SearchWithLinker
              ),
              /* harmony export */
              SearchWithTypeAndLinker: () => (
                /* reexport safe */
                _Services_Search_SearchWithTypeAndLinker__WEBPACK_IMPORTED_MODULE_72__.SearchWithTypeAndLinker
              ),
              /* harmony export */
              SearchWithTypeAndLinkerApi: () => (
                /* reexport safe */
                _Api_Search_SearchWithTypeAndLinker__WEBPACK_IMPORTED_MODULE_67__.SearchWithTypeAndLinkerApi
              ),
              /* harmony export */
              SessionData: () => (
                /* reexport safe */
                _DataStructures_Session_SessionData__WEBPACK_IMPORTED_MODULE_85__.SessionData
              ),
              /* harmony export */
              Signin: () => (
                /* reexport safe */
                _Api_Signin__WEBPACK_IMPORTED_MODULE_37__["default"]
              ),
              /* harmony export */
              Signup: () => (
                /* reexport safe */
                _Api_Signup__WEBPACK_IMPORTED_MODULE_36__["default"]
              ),
              /* harmony export */
              SplitStrings: () => (
                /* reexport safe */
                _Services_SplitStrings__WEBPACK_IMPORTED_MODULE_3__.SplitStrings
              ),
              /* harmony export */
              SyncData: () => (
                /* reexport safe */
                _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_75__.SyncData
              ),
              /* harmony export */
              TrashTheConcept: () => (
                /* reexport safe */
                _Api_Delete_DeleteConceptInBackend__WEBPACK_IMPORTED_MODULE_26__.TrashTheConcept
              ),
              /* harmony export */
              UpdateComposition: () => (
                /* reexport safe */
                _Services_UpdateComposition__WEBPACK_IMPORTED_MODULE_38__["default"]
              ),
              /* harmony export */
              UpdateCompositionLocal: () => (
                /* reexport safe */
                _Services_Local_UpdateCompositionLocal__WEBPACK_IMPORTED_MODULE_53__.UpdateCompositionLocal
              ),
              /* harmony export */
              UserBinaryTree: () => (
                /* reexport safe */
                _DataStructures_User_UserBinaryTree__WEBPACK_IMPORTED_MODULE_90__.UserBinaryTree
              ),
              /* harmony export */
              ViewInternalData: () => (
                /* reexport safe */
                _Services_View_ViewInternalData__WEBPACK_IMPORTED_MODULE_56__.ViewInternalData
              ),
              /* harmony export */
              ViewInternalDataApi: () => (
                /* reexport safe */
                _Api_View_ViewInternalDataApi__WEBPACK_IMPORTED_MODULE_57__.ViewInternalDataApi
              ),
              /* harmony export */
              convertFromConceptToLConcept: () => (
                /* reexport safe */
                _Services_Conversion_ConvertConcepts__WEBPACK_IMPORTED_MODULE_58__.convertFromConceptToLConcept
              ),
              /* harmony export */
              convertFromLConceptToConcept: () => (
                /* reexport safe */
                _Services_Conversion_ConvertConcepts__WEBPACK_IMPORTED_MODULE_58__.convertFromLConceptToConcept
              ),
              /* harmony export */
              getFromDatabaseWithType: () => (
                /* reexport safe */
                _Database_NoIndexDb__WEBPACK_IMPORTED_MODULE_15__.getFromDatabaseWithType
              ),
              /* harmony export */
              getObjectsFromIndexDb: () => (
                /* reexport safe */
                _Database_NoIndexDb__WEBPACK_IMPORTED_MODULE_15__.getObjectsFromIndexDb
              ),
              /* harmony export */
              init: () => (
                /* binding */
                init
              ),
              /* harmony export */
              recursiveFetch: () => (
                /* reexport safe */
                _Services_GetComposition__WEBPACK_IMPORTED_MODULE_7__.recursiveFetch
              ),
              /* harmony export */
              recursiveFetchNew: () => (
                /* reexport safe */
                _Services_Composition_BuildComposition__WEBPACK_IMPORTED_MODULE_45__.recursiveFetchNew
              ),
              /* harmony export */
              searchLinkMultipleListener: () => (
                /* reexport safe */
                _WrapperFunctions_SearchLinkMultipleAllObservable__WEBPACK_IMPORTED_MODULE_69__.searchLinkMultipleListener
              ),
              /* harmony export */
              storeToDatabase: () => (
                /* reexport safe */
                _Database_NoIndexDb__WEBPACK_IMPORTED_MODULE_15__.storeToDatabase
              ),
              /* harmony export */
              updateAccessToken: () => (
                /* binding */
                updateAccessToken
              )
              /* harmony export */
            });
            var _Services_CreateBinaryTreeFromData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__2(
              /*! ./Services/CreateBinaryTreeFromData */
              "./src/Services/CreateBinaryTreeFromData.ts"
            );
            var _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__2(
              /*! ./DataStructures/IdentifierFlags */
              "./src/DataStructures/IdentifierFlags.ts"
            );
            var _Api_Search_SearchLinkMultipleApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__2(
              /*! ./Api/Search/SearchLinkMultipleApi */
              "./src/Api/Search/SearchLinkMultipleApi.ts"
            );
            var _Services_SplitStrings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__2(
              /*! ./Services/SplitStrings */
              "./src/Services/SplitStrings.ts"
            );
            var _Services_GetCompositionList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__2(
              /*! ./Services/GetCompositionList */
              "./src/Services/GetCompositionList.ts"
            );
            var _Services_Local_GetCompositionListLocal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__2(
              /*! ./Services/Local/GetCompositionListLocal */
              "./src/Services/Local/GetCompositionListLocal.ts"
            );
            var _Api_GetAllConnectionsOfComposition__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__2(
              /*! ./Api/GetAllConnectionsOfComposition */
              "./src/Api/GetAllConnectionsOfComposition.ts"
            );
            var _Services_GetComposition__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__2(
              /*! ./Services/GetComposition */
              "./src/Services/GetComposition.ts"
            );
            var _Services_Local_GetCompositionLocal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__2(
              /*! ./Services/Local/GetCompositionLocal */
              "./src/Services/Local/GetCompositionLocal.ts"
            );
            var _Services_CreateTheComposition__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__2(
              /*! ./Services/CreateTheComposition */
              "./src/Services/CreateTheComposition.ts"
            );
            var _Services_Local_CreateTheCompositionLocal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__2(
              /*! ./Services/Local/CreateTheCompositionLocal */
              "./src/Services/Local/CreateTheCompositionLocal.ts"
            );
            var _Services_CreateConnectionBetweenTwoConcepts__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__2(
              /*! ./Services/CreateConnectionBetweenTwoConcepts */
              "./src/Services/CreateConnectionBetweenTwoConcepts.ts"
            );
            var _Services_GetTheConcept__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__2(
              /*! ./Services/GetTheConcept */
              "./src/Services/GetTheConcept.ts"
            );
            var _Services_MakeTheInstanceConcept__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__2(
              /*! ./Services/MakeTheInstanceConcept */
              "./src/Services/MakeTheInstanceConcept.ts"
            );
            var _Services_Local_MakeTheInstanceConceptLocal__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__2(
              /*! ./Services/Local/MakeTheInstanceConceptLocal */
              "./src/Services/Local/MakeTheInstanceConceptLocal.ts"
            );
            var _Database_NoIndexDb__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__2(
              /*! ./Database/NoIndexDb */
              "./src/Database/NoIndexDb.ts"
            );
            var _Services_CreateTheConnection__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__2(
              /*! ./Services/CreateTheConnection */
              "./src/Services/CreateTheConnection.ts"
            );
            var _Services_GetConceptByCharacter__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__2(
              /*! ./Services/GetConceptByCharacter */
              "./src/Services/GetConceptByCharacter.ts"
            );
            var _Services_GetLink__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__2(
              /*! ./Services/GetLink */
              "./src/Services/GetLink.ts"
            );
            var _Services_CreateDefaultConcept__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__2(
              /*! ./Services/CreateDefaultConcept */
              "./src/Services/CreateDefaultConcept.ts"
            );
            var _Services_Local_MakeTheTypeLocal__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__2(
              /*! ./Services/Local/MakeTheTypeLocal */
              "./src/Services/Local/MakeTheTypeLocal.ts"
            );
            var _Services_MakeTheTypeConcept__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__2(
              /*! ./Services/MakeTheTypeConcept */
              "./src/Services/MakeTheTypeConcept.ts"
            );
            var _Api_MakeTheTypeConceptApi__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__2(
              /*! ./Api/MakeTheTypeConceptApi */
              "./src/Api/MakeTheTypeConceptApi.ts"
            );
            var _Services_GetLinkerConnectionFromConcept__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__2(
              /*! ./Services/GetLinkerConnectionFromConcept */
              "./src/Services/GetLinkerConnectionFromConcept.ts"
            );
            var _Services_DeleteConcept__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__2(
              /*! ./Services/DeleteConcept */
              "./src/Services/DeleteConcept.ts"
            );
            var _Services_DeleteConnection__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__2(
              /*! ./Services/DeleteConnection */
              "./src/Services/DeleteConnection.ts"
            );
            var _Api_Delete_DeleteConceptInBackend__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__2(
              /*! ./Api/Delete/DeleteConceptInBackend */
              "./src/Api/Delete/DeleteConceptInBackend.ts"
            );
            var _Services_GetConnections__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__2(
              /*! ./Services/GetConnections */
              "./src/Services/GetConnections.ts"
            );
            var _Services_MakeTheTimestamp__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__2(
              /*! ./Services/MakeTheTimestamp */
              "./src/Services/MakeTheTimestamp.ts"
            );
            var _Api_RecursiveSearch__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__2(
              /*! ./Api/RecursiveSearch */
              "./src/Api/RecursiveSearch.ts"
            );
            var _Services_GetCompositionBulk__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__2(
              /*! ./Services/GetCompositionBulk */
              "./src/Services/GetCompositionBulk.ts"
            );
            var _Api_GetConceptBulk__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__2(
              /*! ./Api/GetConceptBulk */
              "./src/Api/GetConceptBulk.ts"
            );
            var _Api_GetConnectionBulk__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__2(
              /*! ./Api/GetConnectionBulk */
              "./src/Api/GetConnectionBulk.ts"
            );
            var _Api_GetAllConnectionsOfCompositionBulk__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__2(
              /*! ./Api/GetAllConnectionsOfCompositionBulk */
              "./src/Api/GetAllConnectionsOfCompositionBulk.ts"
            );
            var _Api_Login__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__2(
              /*! ./Api/Login */
              "./src/Api/Login.ts"
            );
            var _Api_GetConnectionOfTheConcept__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__2(
              /*! ./Api/GetConnectionOfTheConcept */
              "./src/Api/GetConnectionOfTheConcept.ts"
            );
            var _Api_Signup__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__2(
              /*! ./Api/Signup */
              "./src/Api/Signup.ts"
            );
            var _Api_Signin__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__2(
              /*! ./Api/Signin */
              "./src/Api/Signin.ts"
            );
            var _Services_UpdateComposition__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__2(
              /*! ./Services/UpdateComposition */
              "./src/Services/UpdateComposition.ts"
            );
            var _Api_Search_Search__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__2(
              /*! ./Api/Search/Search */
              "./src/Api/Search/Search.ts"
            );
            var _Api_Search_SearchWithLinker__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__2(
              /*! ./Api/Search/SearchWithLinker */
              "./src/Api/Search/SearchWithLinker.ts"
            );
            var _Services_Composition_CompositionCache__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__2(
              /*! ./Services/Composition/CompositionCache */
              "./src/Services/Composition/CompositionCache.ts"
            );
            var _Api_Session_CreateSession__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__2(
              /*! ./Api/Session/CreateSession */
              "./src/Api/Session/CreateSession.ts"
            );
            var _Api_Session_CreateSessionVisit__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__2(
              /*! ./Api/Session/CreateSessionVisit */
              "./src/Api/Session/CreateSessionVisit.ts"
            );
            var _Services_GetRelation__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__2(
              /*! ./Services/GetRelation */
              "./src/Services/GetRelation.ts"
            );
            var _Services_Composition_BuildComposition__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__2(
              /*! ./Services/Composition/BuildComposition */
              "./src/Services/Composition/BuildComposition.ts"
            );
            var _Services_Composition_CreateCompositionCache__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__2(
              /*! ./Services/Composition/CreateCompositionCache */
              "./src/Services/Composition/CreateCompositionCache.ts"
            );
            var _Services_Local_CreateDefaultLConcept__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__2(
              /*! ./Services/Local/CreateDefaultLConcept */
              "./src/Services/Local/CreateDefaultLConcept.ts"
            );
            var _Services_CreateTheConnectionGeneral__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__2(
              /*! ./Services/CreateTheConnectionGeneral */
              "./src/Services/CreateTheConnectionGeneral.ts"
            );
            var _Services_Local_CreateTheConnectionLocal__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__2(
              /*! ./Services/Local/CreateTheConnectionLocal */
              "./src/Services/Local/CreateTheConnectionLocal.ts"
            );
            var _Services_User_UserTranslation__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__2(
              /*! ./Services/User/UserTranslation */
              "./src/Services/User/UserTranslation.ts"
            );
            var _Services_Search_SearchLinkMultiple__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__2(
              /*! ./Services/Search/SearchLinkMultiple */
              "./src/Services/Search/SearchLinkMultiple.ts"
            );
            var _Services_Local_GetTheConceptLocal__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__2(
              /*! ./Services/Local/GetTheConceptLocal */
              "./src/Services/Local/GetTheConceptLocal.ts"
            );
            var _Services_Local_UpdateCompositionLocal__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__2(
              /*! ./Services/Local/UpdateCompositionLocal */
              "./src/Services/Local/UpdateCompositionLocal.ts"
            );
            var _Services_Local_GetRelationLocal__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__2(
              /*! ./Services/Local/GetRelationLocal */
              "./src/Services/Local/GetRelationLocal.ts"
            );
            var _Services_Local_GetConceptByCharacterLocal__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__2(
              /*! ./Services/Local/GetConceptByCharacterLocal */
              "./src/Services/Local/GetConceptByCharacterLocal.ts"
            );
            var _Services_View_ViewInternalData__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__2(
              /*! ./Services/View/ViewInternalData */
              "./src/Services/View/ViewInternalData.ts"
            );
            var _Api_View_ViewInternalDataApi__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__2(
              /*! ./Api/View/ViewInternalDataApi */
              "./src/Api/View/ViewInternalDataApi.ts"
            );
            var _Services_Conversion_ConvertConcepts__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__2(
              /*! ./Services/Conversion/ConvertConcepts */
              "./src/Services/Conversion/ConvertConcepts.ts"
            );
            var _Services_Search_SearchLinkInternal__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__2(
              /*! ./Services/Search/SearchLinkInternal */
              "./src/Services/Search/SearchLinkInternal.ts"
            );
            var _Services_Local_CreateConnectionBetweenTwoConceptsLocal__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__2(
              /*! ./Services/Local/CreateConnectionBetweenTwoConceptsLocal */
              "./src/Services/Local/CreateConnectionBetweenTwoConceptsLocal.ts"
            );
            var _Services_Local_DeleteConceptLocal__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__2(
              /*! ./Services/Local/DeleteConceptLocal */
              "./src/Services/Local/DeleteConceptLocal.ts"
            );
            var _Services_GetConnectionBetweenTwoConceptsLinker__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__2(
              /*! ./Services/GetConnectionBetweenTwoConceptsLinker */
              "./src/Services/GetConnectionBetweenTwoConceptsLinker.ts"
            );
            var _Services_Common_DelayFunction__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__2(
              /*! ./Services/Common/DelayFunction */
              "./src/Services/Common/DelayFunction.ts"
            );
            var _Api_GetConceptByCharacterAndType__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__2(
              /*! ./Api/GetConceptByCharacterAndType */
              "./src/Api/GetConceptByCharacterAndType.ts"
            );
            var _Constants_FormatConstants__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__2(
              /*! ./Constants/FormatConstants */
              "./src/Constants/FormatConstants.ts"
            );
            var _Constants_AccessConstants__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__2(
              /*! ./Constants/AccessConstants */
              "./src/Constants/AccessConstants.ts"
            );
            var _Api_Search_SearchWithTypeAndLinker__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__2(
              /*! ./Api/Search/SearchWithTypeAndLinker */
              "./src/Api/Search/SearchWithTypeAndLinker.ts"
            );
            var _WrapperFunctions_DepenedencyObserver__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__2(
              /*! ./WrapperFunctions/DepenedencyObserver */
              "./src/WrapperFunctions/DepenedencyObserver.ts"
            );
            var _WrapperFunctions_SearchLinkMultipleAllObservable__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__2(
              /*! ./WrapperFunctions/SearchLinkMultipleAllObservable */
              "./src/WrapperFunctions/SearchLinkMultipleAllObservable.ts"
            );
            var _WrapperFunctions_GetCompositionObservable__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__2(
              /*! ./WrapperFunctions/GetCompositionObservable */
              "./src/WrapperFunctions/GetCompositionObservable.ts"
            );
            var _WrapperFunctions_GetCompositionListObservable__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__2(
              /*! ./WrapperFunctions/GetCompositionListObservable */
              "./src/WrapperFunctions/GetCompositionListObservable.ts"
            );
            var _Services_Search_SearchWithTypeAndLinker__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__2(
              /*! ./Services/Search/SearchWithTypeAndLinker */
              "./src/Services/Search/SearchWithTypeAndLinker.ts"
            );
            var _WrapperFunctions_GetLinkObservable__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__2(
              /*! ./WrapperFunctions/GetLinkObservable */
              "./src/WrapperFunctions/GetLinkObservable.ts"
            );
            var _WrapperFunctions_RecursiveSearchObservable__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__2(
              /*! ./WrapperFunctions/RecursiveSearchObservable */
              "./src/WrapperFunctions/RecursiveSearchObservable.ts"
            );
            var _DataStructures_SyncData__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__2(
              /*! ./DataStructures/SyncData */
              "./src/DataStructures/SyncData.ts"
            );
            var _DataStructures_Concept__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__2(
              /*! ./DataStructures/Concept */
              "./src/DataStructures/Concept.ts"
            );
            var _DataStructures_Local_LConcept__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__2(
              /*! ./DataStructures/Local/LConcept */
              "./src/DataStructures/Local/LConcept.ts"
            );
            var _DataStructures_Local_LConnection__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__2(
              /*! ./DataStructures/Local/LConnection */
              "./src/DataStructures/Local/LConnection.ts"
            );
            var _DataStructures_Connection__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__2(
              /*! ./DataStructures/Connection */
              "./src/DataStructures/Connection.ts"
            );
            var _DataStructures_ConceptData__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__2(
              /*! ./DataStructures/ConceptData */
              "./src/DataStructures/ConceptData.ts"
            );
            var _DataStructures_ConnectionData__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__2(
              /*! ./DataStructures/ConnectionData */
              "./src/DataStructures/ConnectionData.ts"
            );
            var _DataStructures_BinaryTree__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__2(
              /*! ./DataStructures/BinaryTree */
              "./src/DataStructures/BinaryTree.ts"
            );
            var _DataStructures_SearchQuery__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__2(
              /*! ./DataStructures/SearchQuery */
              "./src/DataStructures/SearchQuery.ts"
            );
            var _DataStructures_PatcherStructure__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__2(
              /*! ./DataStructures/PatcherStructure */
              "./src/DataStructures/PatcherStructure.ts"
            );
            var _DataStructures_Session_SessionData__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__2(
              /*! ./DataStructures/Session/SessionData */
              "./src/DataStructures/Session/SessionData.ts"
            );
            var _DataStructures_Composition_Composition__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__2(
              /*! ./DataStructures/Composition/Composition */
              "./src/DataStructures/Composition/Composition.ts"
            );
            var _DataStructures_Composition_CompositionBinaryTree__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__2(
              /*! ./DataStructures/Composition/CompositionBinaryTree */
              "./src/DataStructures/Composition/CompositionBinaryTree.ts"
            );
            var _DataStructures_Composition_CompositionNode__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__2(
              /*! ./DataStructures/Composition/CompositionNode */
              "./src/DataStructures/Composition/CompositionNode.ts"
            );
            var _DataStructures_Local_LocalSyncData__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__2(
              /*! ./DataStructures/Local/LocalSyncData */
              "./src/DataStructures/Local/LocalSyncData.ts"
            );
            var _DataStructures_User_UserBinaryTree__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__2(
              /*! ./DataStructures/User/UserBinaryTree */
              "./src/DataStructures/User/UserBinaryTree.ts"
            );
            var _DataStructures_FilterSearch__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__2(
              /*! ./DataStructures/FilterSearch */
              "./src/DataStructures/FilterSearch.ts"
            );
            var _DataStructures_Search_SearchStructure__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__2(
              /*! ./DataStructures/Search/SearchStructure */
              "./src/DataStructures/Search/SearchStructure.ts"
            );
            var _DataStructures_Local_LocalConceptData__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__2(
              /*! ./DataStructures/Local/LocalConceptData */
              "./src/DataStructures/Local/LocalConceptData.ts"
            );
            var _Services_GetDataFromIndexDb__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__2(
              /*! ./Services/GetDataFromIndexDb */
              "./src/Services/GetDataFromIndexDb.ts"
            );
            var _Services_Local_CreateLocalBinaryTreeFromData__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__2(
              /*! ./Services/Local/CreateLocalBinaryTreeFromData */
              "./src/Services/Local/CreateLocalBinaryTreeFromData.ts"
            );
            var _Services_InitializeSystem__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__2(
              /*! ./Services/InitializeSystem */
              "./src/Services/InitializeSystem.ts"
            );
            var _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__2(
              /*! ./DataStructures/BaseUrl */
              "./src/DataStructures/BaseUrl.ts"
            );
            var _DataStructures_Security_TokenStorage__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__2(
              /*! ./DataStructures/Security/TokenStorage */
              "./src/DataStructures/Security/TokenStorage.ts"
            );
            var __awaiter = function(thisArg, _arguments, P, generator) {
              function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                  resolve(value);
                });
              }
              return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                  try {
                    step(generator.next(value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function rejected(value) {
                  try {
                    step(generator["throw"](value));
                  } catch (e) {
                    reject(e);
                  }
                }
                function step(result) {
                  result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
              });
            };
            function updateAccessToken(accessToken = "") {
              _DataStructures_Security_TokenStorage__WEBPACK_IMPORTED_MODULE_98__.TokenStorage.BearerAccessToken = accessToken;
            }
            function init() {
              return __awaiter(this, arguments, void 0, function* (url = "", aiurl = "", accessToken = "", nodeUrl = "", enableAi = true, applicationName = "", isTest = false) {
                try {
                  _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_97__.BaseUrl.BASE_URL = url;
                  _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_97__.BaseUrl.AI_URL = aiurl;
                  _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_97__.BaseUrl.NODE_URL = nodeUrl;
                  _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_97__.BaseUrl.BASE_APPLICATION = applicationName;
                  _DataStructures_Security_TokenStorage__WEBPACK_IMPORTED_MODULE_98__.TokenStorage.BearerAccessToken = accessToken;
                  let randomizer = Math.floor(Math.random() * 1e8);
                  _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_97__.BaseUrl.BASE_RANDOMIZER = randomizer;
                  if (isTest) {
                    _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__.IdentifierFlags.isDataLoaded = true;
                    _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__.IdentifierFlags.isCharacterLoaded = true;
                    _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__.IdentifierFlags.isTypeLoaded = true;
                    _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__.IdentifierFlags.isLocalDataLoaded = true;
                    _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__.IdentifierFlags.isLocalTypeLoaded = true;
                    _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__.IdentifierFlags.isLocalCharacterLoaded = true;
                    _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__.IdentifierFlags.isConnectionLoaded = true;
                    _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__.IdentifierFlags.isConnectionTypeLoaded = true;
                    _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__.IdentifierFlags.isLocalConnectionLoaded = true;
                    return true;
                  }
                  console.log("This ist he base url", _DataStructures_BaseUrl__WEBPACK_IMPORTED_MODULE_97__.BaseUrl.BASE_URL, randomizer);
                  yield (0, _Services_InitializeSystem__WEBPACK_IMPORTED_MODULE_96__["default"])(enableAi);
                  const start = (/* @__PURE__ */ new Date()).getTime();
                  yield (0, _Services_CreateBinaryTreeFromData__WEBPACK_IMPORTED_MODULE_0__["default"])().then(() => {
                    let elapsed = (/* @__PURE__ */ new Date()).getTime() - start;
                    console.log("The time taken to prepare concept  data is  ", elapsed);
                  }).catch((event) => {
                    throw event;
                  });
                  yield (0, _Services_Local_CreateLocalBinaryTreeFromData__WEBPACK_IMPORTED_MODULE_95__["default"])().then(() => {
                    let elapsed = (/* @__PURE__ */ new Date()).getTime() - start;
                    console.log("The time taken to prepare local concept  ", elapsed);
                  }).catch((event) => {
                    throw event;
                  });
                  yield (0, _Services_GetDataFromIndexDb__WEBPACK_IMPORTED_MODULE_94__.GetConnectionsFromIndexDbLocal)().then(() => {
                    _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__.IdentifierFlags.isLocalConnectionLoaded = true;
                  }).catch((event) => {
                    throw event;
                  });
                  yield (0, _Services_GetDataFromIndexDb__WEBPACK_IMPORTED_MODULE_94__.GetConnectionsFromIndexDb)().then(() => {
                    _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__.IdentifierFlags.isConnectionLoaded = true;
                    _DataStructures_IdentifierFlags__WEBPACK_IMPORTED_MODULE_1__.IdentifierFlags.isConnectionTypeLoaded = true;
                    let elapsed = (/* @__PURE__ */ new Date()).getTime() - start;
                    console.log("The time taken to prepare connections  ", elapsed);
                  }).catch((event) => {
                    throw event;
                  });
                  return true;
                } catch (error) {
                  console.log("cannot initialize the system", error);
                }
              });
            }
          }
        )
        /******/
      };
      var __webpack_module_cache__ = {};
      function __webpack_require__(moduleId) {
        var cachedModule = __webpack_module_cache__[moduleId];
        if (cachedModule !== void 0) {
          return cachedModule.exports;
        }
        var module2 = __webpack_module_cache__[moduleId] = {
          /******/
          // no module.id needed
          /******/
          // no module.loaded needed
          /******/
          exports: {}
          /******/
        };
        __webpack_modules__[moduleId](module2, module2.exports, __webpack_require__);
        return module2.exports;
      }
      (() => {
        __webpack_require__.d = (exports2, definition) => {
          for (var key in definition) {
            if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports2, key)) {
              Object.defineProperty(exports2, key, { enumerable: true, get: definition[key] });
            }
          }
        };
      })();
      (() => {
        __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);
      })();
      (() => {
        __webpack_require__.r = (exports2) => {
          if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
            Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
          }
          Object.defineProperty(exports2, "__esModule", { value: true });
        };
      })();
      var __webpack_exports__ = __webpack_require__("./src/app.ts");
      var __webpack_export_target__ = exports;
      for (var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];
      if (__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, "__esModule", { value: true });
    })();
  }
});
export default require_bundle();
//# sourceMappingURL=mftsccs-browser.js.map
